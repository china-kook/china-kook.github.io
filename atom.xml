<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ikook Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://ikookblog.com/"/>
  <updated>2018-03-20T12:00:14.000Z</updated>
  <id>http://ikookblog.com/</id>
  
  <author>
    <name>ikook</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hibernate 插入中文乱码</title>
    <link href="http://ikookblog.com/2018/03/14/hibernate-mysql-encode/"/>
    <id>http://ikookblog.com/2018/03/14/hibernate-mysql-encode/</id>
    <published>2018-03-13T16:00:00.000Z</published>
    <updated>2018-03-20T12:00:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>近些日子在折腾 Hibernate，遇到一个小问题：向 MySQL 数据库插入中文数据的时候会发现乱码，乱码形式表现为“?”。看到第一反应是：这还不简单，MySQL 建表时使用的是默认字符集，改成「UTF-8」不就得了。那就改啊，改完之后测试，顿时感觉心凉了一下。提示错误信息：</p>
<blockquote>
<p>org.hibernate.exception.GenericJDBCException: could not execute statement</p>
</blockquote>
<p>我擦，这是什么鬼？刚开始玩 Hibernate 的我一脸懵逼，还能怎么办，Google 啊。</p>
<p>按照网上的解决办法就是在 Hibernate 核心配置文件中的数据库连接 url 后面添加如下代码：</p>
<blockquote>
<p>?useUnicode=true&amp;characterEncoding=utf-8</p>
</blockquote>
<p>再次测试，结果还是上面的错误信息，这就尴尬了。再查，发现我的 MySQL 数据库没有更改默认字符集，MySQL 的默认字符集是“latin1”（鬼知道 MySQL 设计者为什么弄它作为默认字符集）。开整。</p>
<p>可以通过在终端进入 MySQL 然后输入：show variables like ‘%char%’; 查看字符集。</p>
<center><br><img src="https://meto.chinakook.com/blog-images/180314-01.jpeg" alt=""><br></center>

<p>图中标注的地方是更改之后，更改之前应该是「latin1」。想要更改 MySQL 的编码，就需要修改 MySQL 配置文件：my.cnf。修改配置文件之前一定要将 MySQL 进程关闭，一定要，不然会出现麻烦。</p>
<p>将 MySQL 安装目录下的my.cnf文件复制到/etc目录下（如果 MySQL 安装目录没有 my.cnf 文件，则直接在/etc中新建一个名为 my.cnf 的文件）</p>
<p>my.cnf 文件内容如下：</p>
<center><br><img src="https://meto.chinakook.com/blog-images/180314-02.jpeg" alt=""><br></center>

<p>在 my.cnf 文件中添加图中标注的内容。完整内容在我的公众号后台回复「my.cnf」获取。对了，Mac 下是 my.cnf 文件，windows 对应的配置文件名是 my.ini</p>
<p>更改完重启 MySQL 测试，心想这下应该可以了吧，然而，还是出现那个错误信息。别慌，Hibernate 要操作的数据库是更改默认编码之前创建的，所以去更改下待操作的数据库的字符集（一开始只更改了表的字符集）。再测试，OK。</p>
<p>所以问题的根本在于数据库的编码。那折腾半天 MySQL 默认编码干啥？直接更改待操作数据库的字符集不就得了？更改 MySQL 默认编码之后再创建新的数据库，就不用再去手动设置字符集，省去了以后的麻烦，也算自己没白折腾。</p>
<p><br>ikook<br>2018.03.14</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;近些日子在折腾 Hibernate，遇到一个小问题：向 MySQL 数据库插入中文数据的时候会发现乱码，乱码形式表现为“?”。看到第一反应是：这还不简单，MySQL 建表时使用的是默认字符集，改成「UTF-8」不就得了。那就改啊，改完之后测试，顿时感觉心凉了一下。提示错误信
    
    </summary>
    
      <category term="技术栈" scheme="http://ikookblog.com/categories/%E6%8A%80%E6%9C%AF%E6%A0%88/"/>
    
    
      <category term="Hibernate" scheme="http://ikookblog.com/tags/Hibernate/"/>
    
      <category term="MySQL" scheme="http://ikookblog.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>如何提高自控力克服拖延？</title>
    <link href="http://ikookblog.com/2018/03/08/18-03-08/"/>
    <id>http://ikookblog.com/2018/03/08/18-03-08/</id>
    <published>2018-03-07T16:00:00.000Z</published>
    <updated>2018-03-20T11:49:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>很多人都觉得自己制定的计划完不成，会拖延，其实我自己也是这样，尤其是之前一段时间，拖延症晚期，无药可救。我和大多数人一样，觉得自己缺乏自控力，以为有了自控力这些拖延的问题都能迎刃而解，但事实是这样的吗？</p>
<p>关于自控力有一个非常经典的实验，叫做「棉花糖测试」：</p>
<p>它是 19 世纪后期，斯坦福大学的 Walter Mischel 在幼儿园里进行的一系列实验。实验中，大人将孩子一个人留在房间里，面前摆着一个盘子，盘子里有一粒棉花糖，然后称自己有事要离开。</p>
<p>大人在离开前会叮嘱孩子说，他们有两种选择：如果坚持一小会儿（15分钟），等大人回来时还没有吃掉棉花糖的话，他们会再额外获得一枚糖的奖励；但如果实在想吃，也可以选择按铃并立刻吃掉棉花糖。</p>
<p>孩子们抵御棉花糖诱惑的过程是痛苦的，一些孩子甚至没有等到按铃，就很快吃掉了糖，还有一些孩子不断地拿起糖又放下，或者捂住眼睛、踢桌腿，但最终还是按铃并吃掉了糖。在所有的孩子里，有大约三分之一的孩子成功地抵御了诱惑，在 15 分钟后得到了另一枚糖的奖励。</p>
<p>实验中，有的孩子甚至在屋子里玩起了游戏，权当那颗糖不存在——棉花糖不会不存在，但随着孩子把注意力集中在玩游戏上而被暂时遗忘。这些孩子成功控制住了自己。</p>
<p>相反，有些孩子死死盯住棉花糖，对自已说“我不能吃，我一定不能吃，我的目标是得到另一枚棉花糖”，这样的孩子全都很快就失败了。</p>
<p>把注意力集中在诱惑上，即便是集中在“我要抵御诱惑”上，你自控的目标也会更容易失败。这是因为，只要你的注意力在诱惑上，你的自控力就在持续地被损耗。</p>
<p>可见，自控力和肌肉力量一样是有限的。这个结论被大量心理学实验证明。</p>
<p>当我们重复做一件消耗体力的动作时，我们很快就会发现自己吃不消，力气消耗殆尽，这是因为我们的肌肉力量被暂时耗尽，需要补充能量。</p>
<p>自控力也一样，每当我们抵御一次诱惑，你的自制力就消耗一分。</p>
<p>很多人都想要减肥、健身，制定了详细的计划，买了一堆装备，还去办了几千块的健身卡。然而，坚持不了几天之后，就已经将这些东西束之高阁了。</p>
<p>为什么建立一个锻炼的习惯这么难？绝大多数原因是急于求成，太想在短期时间内看到显著的效果，没有得到反馈，他们就放弃了。我们做什么事都期望能够得到即时的反馈和满足感。我们天生就是这样一种动物。</p>
<p>所以，为什么在认真学习时，忽然会冒出“学这么久了，看一集美剧吧！”的念头；为什么你打开手机想要背单词，却鬼使神差的戳开了微博，其实这些的本质都是原始大脑在作怪。</p>
<p>说了这么多，有什么办法能克服它？</p>
<p>1.转移注意力。有意识的让诱惑离开自己的视线，从而进一步离开自己的思绪，有意识的把注意力放在其他事情上。</p>
<p>2.不要把目标设得太高。如果你之前没去过健身房，不要期望一周能去三次，更科学的计划是从一周去一次做起。如果你之前沉迷游戏，一周玩 7 天，不要指望明天就能戒了，科学一点的做法是，下周玩 6 天。承认自己一口吃不成胖子，敢于面对现实。「积极心理学」中的建议是：对于一般人，一个月能建立 1-2 个习惯就很不错了。如果能够做到 1 个月养成 1 个习惯，一年下来至少建立了 12 个习惯。</p>
<p>3.对自己多一些鼓励。如果发现自己的自控力真的很差，不要急着苛责自己，自我批评对于提高自控力并没有什么帮助。在与欲望和弱点搏斗的时候，大多数时候都是一个人，只有自己给自己加油打气，才能更好的走下去。</p>
<p>4.行动起来，从现在开始。无论是苛责还是鼓励自己，引发改变的是行动。想做什么现在就开始做吧，不要等到以后。大多数的 “明天再说” 等于 “明天就忘” 。只要去做了，都是在行动、在改变，正如一句话：再微小的改变，也值得褒奖。</p>
<p><br>ikook<br>2018.03.08</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很多人都觉得自己制定的计划完不成，会拖延，其实我自己也是这样，尤其是之前一段时间，拖延症晚期，无药可救。我和大多数人一样，觉得自己缺乏自控力，以为有了自控力这些拖延的问题都能迎刃而解，但事实是这样的吗？&lt;/p&gt;
&lt;p&gt;关于自控力有一个非常经典的实验，叫做「棉花糖测试」：&lt;/
    
    </summary>
    
      <category term="随笔集" scheme="http://ikookblog.com/categories/%E9%9A%8F%E7%AC%94%E9%9B%86/"/>
    
    
  </entry>
  
  <entry>
    <title>18 年春节告终</title>
    <link href="http://ikookblog.com/2018/02/24/18-NewYear/"/>
    <id>http://ikookblog.com/2018/02/24/18-NewYear/</id>
    <published>2018-02-23T16:00:00.000Z</published>
    <updated>2018-02-26T03:50:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>从上个月 24 号(腊月初八)回家到前天离家，待了个把月，原本打算在家也能够照常执行计划照常学习，可现在看来，泡汤了。毕竟春节！</p>
<p>从除夕和年初一抽奖后，到现在停更了也有十来天了，我也该和慵懒的自己暂时告别了。不知不觉春假就这样度过了，我的春假也算是比较长，工作的朋友春节“长假”想必也就十几天吧。大多数人应该都是正月初七就开始回到工作岗位，开始新的一年的征程，当然，也肯定备受假期综合症的煎熬。如何克服假期综合症？红猴子的这篇文章「<a href="https://mp.weixin.qq.com/s?__biz=MzI3MzExOTEwOA==&amp;mid=2649170460&amp;idx=1&amp;sn=cc92246c2bcedbe3b8009222b3bf1498&amp;chksm=f33ba0f7c44c29e1fe91ad78e6e9a7babefdb94b96332c2673d0efc507fe7fb36f7da0aa0db7&amp;scene=21#wechat_redirect" target="_blank" rel="external">假期综合症这件事</a>」也许能帮到你。</p>
<p>不知道大家春节假期过得如何啊？我，过得其实算是蛮纠结的。可能厌倦了家乡过春节的方式，对春节慢慢没有了什么感觉，再加上面临工作，有点患得患失，导致自己春节没过好还没学好知识，一举两失。</p>
<p>刚回到家时，各种不适应，生活习惯等等，觉得还是在外面自在。等习惯了家的节奏，也快到了离家的时候。前天在家里走时，很失落，心里空落落的。昨天、今天做任何事情都不能安心，总会在特定的情况下想念起家的好 —— 想念妈妈做的饭菜；想念妈妈的唠叨和关心；想念爸爸的严肃和教导；想念侄子的搞怪；想念和老哥的玩闹；想念一家人其乐融融一起吃火锅，侄子做出搞怪的表情求拍照。在家期间所有美好全都涌出脑海，免不了伤感。</p>
<p>这也许就是人性，总是记得美好的事物，选择性记忆，选择性失忆，所以才会如此纠结吧。但愿自己慢慢改掉这个毛病，能够珍惜当下，体会当下美好的时光，体会当下的幸福。</p>
<p>18 年春节告终，2017 年真正结束，收拾好心情，整理好状态，继续出发。</p>
<p><br>ikook<br>2018.02.24</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从上个月 24 号(腊月初八)回家到前天离家，待了个把月，原本打算在家也能够照常执行计划照常学习，可现在看来，泡汤了。毕竟春节！&lt;/p&gt;
&lt;p&gt;从除夕和年初一抽奖后，到现在停更了也有十来天了，我也该和慵懒的自己暂时告别了。不知不觉春假就这样度过了，我的春假也算是比较长，工作
    
    </summary>
    
      <category term="随笔集" scheme="http://ikookblog.com/categories/%E9%9A%8F%E7%AC%94%E9%9B%86/"/>
    
    
      <category term="春节" scheme="http://ikookblog.com/tags/%E6%98%A5%E8%8A%82/"/>
    
  </entry>
  
  <entry>
    <title>如何利用碎片时间</title>
    <link href="http://ikookblog.com/2018/02/06/fragment-time/"/>
    <id>http://ikookblog.com/2018/02/06/fragment-time/</id>
    <published>2018-02-05T16:00:00.000Z</published>
    <updated>2018-02-21T12:11:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>互联网时代，我们的时间被分割的四分五裂，从此有了一个新的名词：碎片时间。那什么是碎片时间？该怎么利用碎片时间？</p>
<p>所谓的碎片时间，就是指日常工作、学习之余闲散的，零碎的时间，这些时间不是很长，如等车、排队、等人等情况所用的时间。也就是说零散的五分钟十分钟这样的时间。那么我们该如何利用碎片时间呢？</p>
<p>有一类“时间管理”达人追求极致，他们发现自己每天都有很多碎片时间，所以他们想把所有的碎片时间都利用起来，他们想利用好每一分每一秒，所以他们找了许多碎片时间可以做的事：阅读、学英文…  结果往往适得其反。他们的时间却因此更加碎片化了，他们觉得碎片时间更多了，周而复始，他们的时间都成了「碎片时间」。</p>
<p>他们自欺欺人的认为自己很努力，自己一直在忙。却在不觉中，把自己的时间碎片化了。我们可以追求高效的时间管理，但前提是要采取一种更加科学的方法。</p>
<p>我自己看过不少关于如何高效利用「碎片时间」的文章，总结下来，我认为就一件事：思考。</p>
<p>虽然我们每天做事情的时候，大脑一直是活跃状态，但更多的时候我们的大脑只是输入 — 简单的处理 — 输出。一天下来，上班也好上学也罢，我们真正思考的时间太少了。想做一个「有灵魂」的人，思考肯定是必不可少的。</p>
<p>思考问题在任何情况下都可以做，不用去在乎是否明亮，是否拥挤，是否喧闹。譬如，等公交、等地铁的时间，那多半是下班后。那不如用这段时间来复盘一下今天的工作内容，项目的进度进行到哪里了，按照这个进度什么时候能提交，是否需要别人的配合，是否有更高效的方法来处理完，等等。脑海里大概有个计划，到时候实施起来也不会乱了手脚。</p>
<p>同样的道理，也适用于学生。</p>
<p>我觉得学生时期也不必说「碎片时间」一定来做些什么。吃饭的空隙，上厕所的空隙，打球跑步的空隙，在脑子里做一个大体的规划。下一步要进行哪一科的学习，要准备哪些学习资料，要在多长时间内完成。或是想想目前所面对的编程题，实验题，考试题等等，是不是有新的解答方法。或许你在课上绞尽脑汁都想不明白的题，说不定利用碎片时间会灵光乍现，一下有了思路。</p>
<p>不要总是去纠结如何利用好碎片时间，过多的关注碎片时间只会让你的时间更加碎片化。争取高效率的利用时间较长的「整体时间」，利用碎片时间进行思考、复盘、反思等等，不要试图利用碎片时间去学习提升自己的能力，基本不可能。</p>
<p><br>ikook<br>2018.02.06</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;互联网时代，我们的时间被分割的四分五裂，从此有了一个新的名词：碎片时间。那什么是碎片时间？该怎么利用碎片时间？&lt;/p&gt;
&lt;p&gt;所谓的碎片时间，就是指日常工作、学习之余闲散的，零碎的时间，这些时间不是很长，如等车、排队、等人等情况所用的时间。也就是说零散的五分钟十分钟这样的时
    
    </summary>
    
      <category term="随笔集" scheme="http://ikookblog.com/categories/%E9%9A%8F%E7%AC%94%E9%9B%86/"/>
    
    
      <category term="学习技巧" scheme="http://ikookblog.com/tags/%E5%AD%A6%E4%B9%A0%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>18 年一月总结</title>
    <link href="http://ikookblog.com/2018/02/01/18year-January/"/>
    <id>http://ikookblog.com/2018/02/01/18year-January/</id>
    <published>2018-01-31T16:00:00.000Z</published>
    <updated>2018-02-03T13:45:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>18 年第一个月就这样匆匆的过去了，年初时雄心壮志许下的目标又还记得多少？吸取去年的教训，以免自己再懈怠，我决定每月每季做个小总结。<br><a id="more"></a></p>
<p>想想这个月过得真是太快了，时间总是短暂的。记得年初做了几个方面的计划：工作、技术、写作、生活，现在回想这个月，自己确实在做出改变，也在围绕年初的目标做出行动。</p>
<p>工作和技术方面，这一个月其实相比年前的状态实在要好很多，不会像之前那样心浮气躁，能够踏下心来学习钻研。为了 3、4 月份的面试找工作，技术方面当然不能懈怠，巩固知识，拓展技能树，查漏补缺，留给我的时间真的不多了，必须把握住有限的时间，提升学习效率。</p>
<p>写作方面，这个大家应该是有目共睹的。公众号的更新频率基本是 3 天一篇文章，甚至更多，一般不会超过 3 天，当然真的没时间可能也会拖一下，不会太长，但不会断更，不会！这个月我总共推送了 13 次，8 篇原创图文，2 篇转载图文， 2 次图片推送，1 次文字推送。</p>
<p>生活方面，可能改变最不明显的就是生活方面了。年前的早起计划依然在坚持，目前已经坚持了 41 天，倒没什么可说的。健身嘛，尴尬，好像还没开始行动，2 月份要开始啦，看到没有，这就是总结的好处，能够发现自己的不足。</p>
<p>时而总结下总是有好处的，给自己敲下警钟。2 月份大部分时间都在家里度过，在家总少一些学习的气氛，多一点放松的氛围，而且家里也比较忙碌，总要做些力所能及的事情，刚好锻炼下身体。希望自己这段时间能够坚持下去，坚持学习、写作…</p>
<p><br>ikook<br>2018.02.01</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;18 年第一个月就这样匆匆的过去了，年初时雄心壮志许下的目标又还记得多少？吸取去年的教训，以免自己再懈怠，我决定每月每季做个小总结。&lt;br&gt;
    
    </summary>
    
      <category term="随笔集" scheme="http://ikookblog.com/categories/%E9%9A%8F%E7%AC%94%E9%9B%86/"/>
    
    
      <category term="总结" scheme="http://ikookblog.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>在生活与写作中学到什么？</title>
    <link href="http://ikookblog.com/2018/01/26/view-text-04/"/>
    <id>http://ikookblog.com/2018/01/26/view-text-04/</id>
    <published>2018-01-25T16:00:00.000Z</published>
    <updated>2018-01-26T13:03:33.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>这篇文章内容节选自：TED - 我从生活和写作中学到的 12 个真理；演讲者：Anne Lamott。</p>
</blockquote>
 <a id="more"></a>
<p><br><br> 在 TED 看了这段演讲感触很深，整理其中的片段给大家，希望对大家也所有帮助，完整视频点击<a href="https://www.ted.com/talks/anne_lamott_12_truths_i_learned_from_life_and_writing?language=zh-cn" target="_blank" rel="external">这里</a></p>
<p><br></p>
<p>第一，也是最真实的事情就是，所有事实的真相都是有对立面的。</p>
<p>就像人生的艰难和喜悦。我们都知道，生命是精美绝伦的无价之宝，但从另一方面看，它又是完全相反的。相信你也有过这样的感受，生命如此的艰辛，每做一个抉择都是那么纠结和困难，有时候甚至会怀疑自己是不是被耍了。但是，生命同时又充满了令人感到温暖的甜蜜和感动。印象中最深刻的一个画面就是一位老爷爷深情的亲吻老奶奶的脸颊，老奶奶的脸上洋溢着无法言表的幸福和甜蜜。</p>
<p><img src="https://meto.chinakook.com/blog-images/18.01.26-00.jpg" alt=""></p>
<p><br></p>
<p>第二：几乎不存在什么外在力量，可以长久的帮助你自己。</p>
<p>我们无法为心爱的人去安排一条无风无雨的路，他们必须通过自身的努力找到自己的路和答案。你不能在孩子成为英雄的征途中替他们遮风挡雨。你必须给他们自由，不这么做就是不尊重他们。凡事都得靠自己，别人的帮助往往是杯水车薪，重要的是能否在自身找到力量。</p>
<p><br></p>
<p>第三：每个人都是糟糕的、破碎的、依赖的、胆小的，甚至有些人会同时拥有这些负面情绪，要相信他们其实和你差不多，所以别拿自己的内在和别人的外表比较。</p>
<p>攀比几乎是这个社会的通病，那些痛苦、不安，都是由于比较产生的。去了解了解那些有梦想的人吧，他们不会和别人攀比，因为，在这个世界上还有很多重要的事去实现。和别人攀比显得毫无意义。</p>
<p><br><br>第四：写作。那些成功的作家，初稿都写得很糟糕，但他们会坚持钉在凳子上。这就是生活的秘密。</p>
<p>一开始写作可能抓不着头脑，但是任何东西都不是一蹴而就的，写作能力也不是短时间内就可以练就的，它需要常年累月的坚持，实践，总结。俗语说 :万事开头难。但写作这件事，开头简单，坚持难。成功的秘诀就是坚持下来，所以，要把写作渐渐的当成一种习惯。当你习惯做一件事的时候，你自然而然的就会去做。</p>
<p><br><br><br>ikook<br>2018.01.26</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这篇文章内容节选自：TED - 我从生活和写作中学到的 12 个真理；演讲者：Anne Lamott。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="观文记" scheme="http://ikookblog.com/categories/%E8%A7%82%E6%96%87%E8%AE%B0/"/>
    
    
      <category term="TED" scheme="http://ikookblog.com/tags/TED/"/>
    
  </entry>
  
  <entry>
    <title>Mac 工具启示录「下」</title>
    <link href="http://ikookblog.com/2018/01/23/mac-software03/"/>
    <id>http://ikookblog.com/2018/01/23/mac-software03/</id>
    <published>2018-01-22T16:00:00.000Z</published>
    <updated>2018-01-23T13:18:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章是「Mac 工具启示录」系列的最后一篇。这系列的三篇文章，基本涵盖了我自己使用的较为优秀的工具，但愿能有帮助到大家，对大家有所启示。<br><a id="more"></a></p>
<p><br></p>
<h4 id="清理工具"><a href="#清理工具" class="headerlink" title="清理工具"></a><strong>清理工具</strong></h4><p>首先 macOS 基本上是不需要进行系统清理的， 但使用过程中会产生一些可被清理的东西，像缓存文件、历史日志、临时文件、软件使用中产生的文件等；Mac 卸载软件只需将其丢到废纸篓，但软件使用过程中生成的文件不会被清理，虽然对系统使用没任何影响，但强迫症患者简直不能忍，尤其是有系统洁癖的童鞋。</p>
<p>CleanMyMac，作为 Mac 最强大最知名的清理工具，刚好可以拯救强迫症 + 系统洁癖的我，简直不能再好用。简单的操作，只需选择智能清理，再点击扫描，一切都交由 CleanMyMac 去做，它会智能的将你不需要的文件和残留文件找出来，然后再点击清理，整个世界都干净了。卸载软件也变得再轻松不过，选择需要卸载的软件，点击卸载就 ok 了，它会自动清除有关要卸载的软件的一切。同时，还可以用它来优化你的 Mac，重建 Spotlight 索引、运行维护脚本优化 Mac，等等。</p>
<p>Mac 清理和优化有它，足够了。收费的，老规矩，关注我的公众号（文章底部扫码关注，下同），回复「CleanMyMac」收货。</p>
<p><br></p>
<h4 id="知识管理工具"><a href="#知识管理工具" class="headerlink" title="知识管理工具"></a><strong>知识管理工具</strong></h4><p>Evernote，印象笔记，就是那个大象头。印象笔记知名度非常高，其强大之处不必多言，集整理、同步、收集、搜索等于一体，不论是图片、文字、录音均可存储，强大的拓展能力，全平台支持。有免费、标准和高级三种选择，高级账户按年付费 ￥12.33/月，蛮实惠的。</p>
<p>有道云笔记。网易出品，必属精品。分类整理、文件同步、支持文件上传和下载、支持 Markdown、云协作等等，全平台支持，相比印象笔记更符合国人使用习惯，同样也是我日常使用最多的软件。有免费版和收费版，免费版足够日常使用；收费版 198/年。</p>
<p>幕布。极简舒爽的界面，没有半点多余的元素，令人心驰神往。写笔记、思维整理、内容创作、任务管理，还可以一键生成思维导图，简直不能再爽。幕布简单易用，同样支持云同步，同样支持全平台，非常好用。无论是整理思维、内容创作还是任务管理，都完成的游刃有余，可以说是一款非常优秀的辅助思考软件。有免费版和高级版，高级版支持插入图片、高级导出、文档数量无上限等特点，￥9/月、￥90/年、￥199/3年，够实惠不？</p>
<p>XMind ZEN。XMind 团队推出的一款全新的思维导图软件。XMind 据说是最好用的思维导图软件之一，使用 ZEN 之前，也是一直在使用 XMind，确实很好用。但是用上 XMind ZEN 之后，再也不想回到 XMind 了。全新的引擎、优秀的主题、「禅」模式，导出为 Markdown 格式，更加简洁清爽的界面，兼容 XMind 8。XMind ZEN 也许是最好用的思维导图软件了吧，这次没有之一。XMind ZEN 公测时我就用上了，可以使用所有功能。正式上线后分为免费版和完整版，完整版 ￥380/2 年，也还买的起，第一时间进行了订阅。</p>
<p><br></p>
<h4 id="解压缩工具"><a href="#解压缩工具" class="headerlink" title="解压缩工具"></a><strong>解压缩工具</strong></h4><p>Mac 上原生的解压缩软件支持的格式比较少，所以一款优秀的解压缩软件是必需品。</p>
<p>BetterZip，这是一款功能非常强大的解压缩软件，不必解压就能够快速地检查压缩的文档，能执行文件之间的合并并提供密码，可以更加快捷的向压缩包中添加和删除文件。支持多种格式：zip、gz、bz、bz2、tar、rar、7-zip、iso、chm、rpm 等等。收费，后台回复「BetterZip」</p>
<p><br></p>
<h4 id="写作工具"><a href="#写作工具" class="headerlink" title="写作工具"></a><strong>写作工具</strong></h4><p>写作工具我只选择支持 Markdown 语法的，自从我开始写博客就使用  Markdown，深深地被它所吸引。Markdown 是一门标记语言，简单易用还易学，使用 Markdown 可以使你专注于写作，而不必在意排版。所以，下面的工具全都支持 Markdown  ^_^</p>
<p>MWeb，据说是程序员专属 Markdown 工具，全面支持 Github Flavored Markdown 语法，实时预览，生成静态博客等，还支持表格、流程图和数学公式的撰写。原生的 macOS 应用，运行速度更快，系统结合更加完美，拥有更好的写作体验。对了，还支持 iOS。收费的，98 RMB，不过，后台回复「MWeb」看看？</p>
<p>Day One，日记工具。可能是 Mac 平台上最好用的、最简洁漂亮的日记工具了。Day One 一直以来以界面简洁、功能易用著称。使用它只需专注于打字，它会自动生成美观、耐看的界面，还可以添加时间、地点、天气、运动步数，可以新建日记分类，插入多张照片，添加标签，颜色区分，云同步等等。如果使用 iOS 版，它还能记录你去过的地点。收费的，还挺贵，想要 Mac 版后台回复「DayOne」试试。</p>
<p>Ulysses，支持 iPhone、iPad、Mac，支持 iCloud 同步，在 Mac 没写完的文章可以在移动端无缝连接，接着之前的文章继续写；沉浸式的写作体验；文档的集中管理等，非常适合写非技术类文章，技术类文章略显不足。噢，对了，它还可以设置写作目标字数，设置之后会显示一个进度圆环，当圆环充满，文章也就差不多写完了。使用需付费订阅，可以免费体验 14 天，一年 ￥218。偶尔使用，不想花钱？回复「Ulysses」，不过会影响使用体验：不时的崩溃，然后我订阅了。</p>
<p><br></p>
<h4 id="影音工具"><a href="#影音工具" class="headerlink" title="影音工具"></a><strong>影音工具</strong></h4><p>MPlayerX，macOS 通用播放器，基本适配所有影音格式，基于 Mplayer 强力后端，界面简洁，操作方便。也正是因为基于 Mplayer，所以稍微有些过时，不再有大幅的更新，免费。</p>
<p>QuickTime，macOS 自带播放器，支持格式较少，不做过多介绍。</p>
<p>IINA，一个基于 mpv、契合 macOS 设计风格、力求做到最佳用户体验、轻便且功能强大的视频播放器，几乎支持所有格式，极好看的 UI，强大的解码能力，字幕挂载能力，毛玻璃特效的进度条和标题栏，画中画模式，强大的功能设置（涵盖了视频播放的方方面面），支持流播放，可谓真正面向现代的播放器。IINA 还有很多贴心的细节，大家自己去体验，毫不夸张的说，它是 macOS 上最好最完美的播放器。最重要的是，IINA 完全免费开源。</p>
<p><br></p>
<h4 id="办公工具"><a href="#办公工具" class="headerlink" title="办公工具"></a><strong>办公工具</strong></h4><p>iWork，包含 Pages、Keynote、Numbers，Mac 办公软件的标配，容易上手，学习成本低，简洁美观。免费使用，这么一想苹果还是很良心的。</p>
<p>Microsoft Office，无需多言，能够做出极其复杂的文档、PPT、表格，当然学习成本很高，想要用好 Office 比较困难，毕竟计算机二级考试中通过率才 22% 左右。但 Office 功能完备，强大，这是毋庸置疑的，更适合专业人群。收费，毕竟微软。既然这样，那赶紧后台回复「Office」吧。</p>
<p><br></p>
<h4 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a><strong>虚拟机</strong></h4><p>Parallels Desktop，Mac 上最优秀的虚拟机，简单易用。在 Mac 上轻松使用 Win 和 Linux 等其他操作系统，使用过 Mac 基本对它不会陌生。收费的，而且升级新版本还要另外掏钱，这不坑爹么。后台回复「Parallels」拿走。</p>
<p>免费的虚拟机工具：VirtualBox，我没有在 macOS 上用过，以前使用 Win 的时候用过不少，还可以，想必在 Mac 上也不错。</p>
<p><br></p>
<h4 id="云存储工具"><a href="#云存储工具" class="headerlink" title="云存储工具"></a><strong>云存储工具</strong></h4><p>我过的比较多。国外的 Dropbox，国内的坚果云、百度网盘。百度网盘我是真不想再用（原因不想再说，百毒必败），但是之前存的东西太多，转移成本太大，就这样用着吧。建议大家使用坚果云，体验还可以。有条件的可以使用 Dropbox，很好用。</p>
<p><br></p>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a><strong>其他</strong></h4><p>FreshBackMac，壁纸软件，我觉得非常好用，上面的壁纸都很好看，壁纸源有 500px、Pixabay 等等，图片资源非常丰富。</p>
<p>Navicat Premium，数据库客户端。我一般在终端中操作数据库，导致前两篇文章忘记了，这里补上。Navicat Premium，非常著名，非常好用，非常贵，奇贵。个人用户一般不会买，毕竟几千大洋。后台回复「Navicat」拿去耍。</p>
<hr>
<p>后台回复「Mac工具」可以获取这个系列文章中所有“可回复获取的软件”。</p>
<p>如果文章对大家有所帮助，希望大家积极转发分享，感谢。同时，如果这个系列文章对大家有帮助，我之后会考虑将其整理成文档，以便大家查阅，如果有需要，大家可以在文章底部留言告知我。</p>
<p>到此我使用的 Mac 工具基本介绍完了，文章中哪些工具对大家有帮助呢？你又有哪些好用的工具推荐给大家呢？欢迎大家积极留言交流。</p>
<p><br></p>
<h5 id="相关文章："><a href="#相关文章：" class="headerlink" title="相关文章："></a>相关文章：</h5><p><a href="https://ikookblog.com/2018/01/18/mac-software01/">Mac 工具启示录「上」</a></p>
<p><a href="https://ikookblog.com/2018/01/21/mac-software02/">Mac 工具启示录「中」</a></p>
<p><br></p>
<p><br>ikook<br>2018.01.23</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章是「Mac 工具启示录」系列的最后一篇。这系列的三篇文章，基本涵盖了我自己使用的较为优秀的工具，但愿能有帮助到大家，对大家有所启示。&lt;br&gt;
    
    </summary>
    
      <category term="软件说" scheme="http://ikookblog.com/categories/%E8%BD%AF%E4%BB%B6%E8%AF%B4/"/>
    
    
      <category term="工具" scheme="http://ikookblog.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="Mac" scheme="http://ikookblog.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Mac 工具启示录「中」</title>
    <link href="http://ikookblog.com/2018/01/21/mac-software02/"/>
    <id>http://ikookblog.com/2018/01/21/mac-software02/</id>
    <published>2018-01-20T16:00:00.000Z</published>
    <updated>2018-01-22T11:09:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>大家周末愉快啊，这两天比较忙，所以本来早该推送的文章愣是拖到了今天。<a id="more"></a>这篇文章是《<a href="https://ikookblog.com/2018/01/18/mac-software01/"> Mac 工具启示录「上」</a>》的续集，上篇只给大家介绍了浏览器、IDE、编辑器三个部分，今天来给大家介绍下其他一些好用的工具。</p>
<p><br></p>
<h4 id="搜索工具"><a href="#搜索工具" class="headerlink" title="搜索工具"></a><strong>搜索工具</strong></h4><p>Spotlight，macOS 本身自带的强大的搜索工具，可以查找你计算机上所有的内容，像文件、文件夹、应用程序、邮件、歌曲等等。Spotlight 可以实现“随打即显”，意思就是在你键入的时候会随时匹配你想要的内容。用过 macOS 基本都知道有这么个工具，但用的人可能并不是很多，一部分是没用过的，对于这部分人建议去用一用，可以极大的提高效率；另一部分是使用它的替代者：Alfred。</p>
<p>Alfred，这是 Mac 专属的一个神器中的神器。想必你就算没有用过也听说过，如果没有听说过，那好吧（打脸）。Alfred 是一个可以让我们丢掉鼠标的神器，堪称 Mac 上最强大的效率工具，它在 Spotlight 基础上优化了快速启动和搜索的功能，还加入了 Workflows 等强大的扩展功能。关于 Alfred 不做过多介绍了，去 Google 了解。收费的，个人版 19 欧元，是欧元。暂时没钱？关注我的公众号（文章底部扫码关注，下同）后台回复「Alfred」收货。</p>
<p>Dash，用一句话概括：它是一个 API 文档浏览器，以及代码片段管理工具。如果你是搞编程的，那么它就是你要找的必须拥有的工具。它带有超过 200+ 的 API，也就是说无论你要查哪个技术的文档，基本都能找到。并且它能够集成在大量的编程工具和效率工具中，像上篇提到的 JetBrains 系列、Eclipse 系列、Xcode、Atom、Sublime Text、VSCode，还有今天的 Alfred，而且还能集成在你的 Terminal(终端) 中。Dash + Alfred 简直不能再爽，关于如何在 Alfred 集成 Dash，自行 Google。Dash 可免费使用，但几天(具体几天我忘了)之后搜索 API 会有延迟，好像 10 秒左右，作为程序员，简直不能忍。不能忍就去花 $24.99 买授权，还是有困难就后台回复「Dash」，我给你。</p>
<p><br></p>
<h4 id="终端"><a href="#终端" class="headerlink" title="终端"></a><strong>终端</strong></h4><p>iTerm 2，macOS 上优秀的开源免费的终端工具。macOS 自带的 Terminal 其实还算是蛮不错的，相比 Windows 的 cmd 简直不知道好到哪里去了，我是疯了才会去和 cmd 比较吧。但 Terminal 和 iTerm 2 相比就有些逊色了，关于 iTerm 2 的使用大家自己查阅。</p>
<p>Oh My Zsh。介绍 Oh My Zsh 之前先说下 Shell，Shell 起到一个媒介的作用，可以理解成“代理人”，它负责外界与 Unix/Linux 内核的交互。也就是把接受到的用户或者应用程序的命令转化成内核能够理解的东西，然后传送给内核。Shell 有很多种，用过 Linux 的朋友肯定知道 bash，bash 就是 Shell 的一种，其他还有很多。Mac 中默认使用的 Shell 也是 bash，但最牛掰的还数深藏不露的 zsh，但是 zsh 配置太复杂，很少有人使用，于是就有人弄了 Oh My Zsh。Oh My Zsh 是用来管理 zsh 配置的，自带了很多好用的基本配置，基本就是 zsh 的标配，有了 Oh My Zsh 不用我们再配置复杂的 zsh，也能快速上手体验牛掰的 zsh 了。开源免费，如何使用呢？自己 Google：iTerm 2 + Oh My Zsh，然后配置你牛掰吊炸天的终端去装 b 吧。</p>
<p>tmux，它是一个终端复用器，使用它可以让你轻松地在一个终端的几个程序之间切换，进行窗口分割，多窗口等，但它最大的优点是：远程 SSH 访问服务器，并能够持久地保存工作状态，即使是非正常掉线。开源免费，经常需要远程连接服务器的朋友赶紧用起来。</p>
<p>Homebrew，它是 macOS 的包管理工具，使用它可以非常容易的安装、卸载、更新、搜索软件包，使用它只需简单的一条指令，就可以实现包管理，再也不需要关心各种依赖和文件路径。快速搜索使用，体验 hacker 的 feel。</p>
<p><br></p>
<h4 id="文件比较工具"><a href="#文件比较工具" class="headerlink" title="文件比较工具"></a><strong>文件比较工具</strong></h4><p>FileMerge，macOS 原生工具。文件比较对于我们开发的人来说应该是经常做的事情，FileMerge 基本可以满足我们日常的需求，不过比较速度较慢，对非 ASCII 内容的文件支持不友好。</p>
<p>VisualDiffer，它是通过 UNIX diff 命令快速、标准、可靠的进行文件和文件夹的比较，操作非常简单，比较速度非常快。还支持文件过滤、颜色标注等。收费的，30 RMB，不贵，这个价格我觉得非常值。如果实在拮据，后台回复「VD」</p>
<p><br></p>
<h4 id="设计类工具"><a href="#设计类工具" class="headerlink" title="设计类工具"></a><strong>设计类工具</strong></h4><p>Photoshop，根本不需要我多说，大家都知道。收费的，没钱赶紧后台回复「PS」，可以获取全套的「Adobe CC 2017」工具。类似的工具 Mac 上有个叫 Pixelmator 的，可以说是精简版的 PS，适合非专业人士使用，收费的。我用过几次，因为之前都是使用 PS，所以用不惯，就舍弃了，安装包也不知道跑哪儿去了，有兴趣的可以去 App Store 购买下载使用，或者在网上找找看。</p>
<p>墨刀，原型设计工具。可以说是傻瓜式的工具，对非专业人士很友好，简单易用。如果是独立开发者，使用墨刀就可以自己设计出完美的原型图。有免费版，不过有限制，个人版 149 元/年，蛮实惠。</p>
<p>Sketch，官方是这么介绍的：轻量、易用的矢量设计工具，让 UI 设计更简单、更高效。就是一个简单易用的设计图工具，如果是独立开发者，Sketch 也是你的选择，不需要去学 PS、Illustrator，使用它就可以替代。付费的，可以免费体验。还想着后台回复？没有 ^_^</p>
<p>不过，后台回复「Mac 工具」可以获取文章中所有“可回复获取的软件和链接”，有点绕口。</p>
<p>后台提供的这些免费的工具，仅仅帮助那些暂时比较拮据的人，如果资金比较富裕或是还可以，建议去购买正版，是一种支持。试想一下，如果别人用着你开发的付费工具，却没有花钱，你什么感受？</p>
<hr>
<p>我使用的与技术相关的、专业的软件工具基本都介绍完了，还有一些其他的通用的工具，本想着一口气写完的，可是我又要去约会了，哎，太忧伤了。</p>
<p>上次的文章转发了没？没有，赶紧转发这篇吧，你离女朋友就差一个分享转发了 ^_^</p>
<p>哈哈，希望大家多多转发分享，毕竟整理起来也蛮辛苦的，转发留言点赞都是对我的支持。</p>
<p><br></p>
<p><br>ikook<br>2018.01.21</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大家周末愉快啊，这两天比较忙，所以本来早该推送的文章愣是拖到了今天。
    
    </summary>
    
      <category term="软件说" scheme="http://ikookblog.com/categories/%E8%BD%AF%E4%BB%B6%E8%AF%B4/"/>
    
    
      <category term="工具" scheme="http://ikookblog.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="Mac" scheme="http://ikookblog.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 使用汇总</title>
    <link href="http://ikookblog.com/2018/01/19/markdown/"/>
    <id>http://ikookblog.com/2018/01/19/markdown/</id>
    <published>2018-01-18T16:00:00.000Z</published>
    <updated>2018-01-22T11:13:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>汇总 Markdown 使用过程中遇见的一些较为“偏”的实现方法<br><br></p>
<a id="more"></a>
<h3 id="如何实现段首空格的显示-？"><a href="#如何实现段首空格的显示-？" class="headerlink" title="如何实现段首空格的显示 ？"></a>如何实现段首空格的显示 ？</h3><p>半方大的空白 <code>&amp;ensp;</code> 或 <code>&amp;#8194;</code></p>
<p>全方大的空白 <code>&amp;emsp;</code> 或 <code>&amp;#8195;</code></p>
<p>不断行的空白格 <code>&amp;nbsp;</code> 或 <code>&amp;#160;</code><br><br></p>
<h3 id="图片如何添加超链接？"><a href="#图片如何添加超链接？" class="headerlink" title="图片如何添加超链接？"></a>图片如何添加超链接？</h3><p>插入图片：</p>
<p><code>![alt text](http://path/to/img.jpg &quot;title&quot;)</code></p>
<p>文字链接：</p>
<p><code>[Title](你的链接地址)</code></p>
<p>图片加链接：</p>
<p><code>[![alt text](http://path/to/img.jpg &quot;title&quot;)](你的链接地址)</code></p>
<p>其实就是 图片 和 文字链接 2种语法结合起来用。</p>
<p><br><br><br>ikook<br>2018.01.19</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;汇总 Markdown 使用过程中遇见的一些较为“偏”的实现方法&lt;br&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="软件说" scheme="http://ikookblog.com/categories/%E8%BD%AF%E4%BB%B6%E8%AF%B4/"/>
    
    
      <category term="工具" scheme="http://ikookblog.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Mac 工具启示录「上」</title>
    <link href="http://ikookblog.com/2018/01/18/mac-software01/"/>
    <id>http://ikookblog.com/2018/01/18/mac-software01/</id>
    <published>2018-01-17T16:00:00.000Z</published>
    <updated>2018-01-22T11:13:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>上次的调查反映还算是蛮强烈的，投票结果显示大多数人是需要这么一篇文章的，可能本身就需要这么一篇文章，也可能就是想知道我用的什么工具吧，哈哈。<br><br></p>
<a id="more"></a>
<p>首先，和大家说下 Mac 电脑吧。虽然我使用的只是 macOS，只是黑苹果系统，但依然可以体验到这款高效、安全、简洁、优雅、美观的操作系统的威力，更何况，macOS 还有点文艺青年的感觉。当然，macOS 就是为 Mac 电脑而生的，只有在真正的 Mac 上才能发挥其威力，软件系统和硬件的完美结合，流畅、优雅操作的手感，这在黑苹果上是无法体验的。</p>
<p>个人认为，macOS 是最完美的计算机操作系统，也是最适合所有专业人士使用的系统，不只是程序员，还有设计师、视频编辑、音频制作等等。如果是玩游戏，那还是算了吧，Mac 真的非常不适合玩游戏，这里多句嘴，买来 Mac 电脑把 macOS 替换成 Win 的人，我真的想问一句，是不是脑残？</p>
<p>关于选择 Mac 的原因有太多了，我就不给大家介绍了，毕竟不是这篇文章的重点。想知道的朋友可以关注池建强老师维护的公众号「MacTalk」，有很多关于 Mac 的文章，大家可以去看看。</p>
<p>文章涉及的所有软件、工具均是我亲自使用之后推荐给大家的，只是在我个人角度上来推荐的，并不代表某些工具就是最好用的，而且很多也都有替代品，我之所以觉得好用，可能正好符合我的需求吧。</p>
<p>还要告诉大家的是，工具就只是工具而已，只要能提高我们的工作效率就是好工具，不必纠结于到底使用哪个。我们的目的只有一个，那就是提高效率，当然，在保证效率的前提下，要是能有美观、优雅这些附加条件就再好不过了。</p>
<p>先给大家看下我「Launchpad」首屏。</p>
<p><img src="https://meto.chinakook.com/blog-images/180118-1.png" alt=""><br><br></p>
<p><strong>浏览器</strong></p>
<p>当然首选 Chrome，它的强大之处不必多说。Chrome 支持任何平台，这里推荐给不知道的人。以前写过一篇 Chrome 插件的文章，对大家更加优雅的使用 Chrome 很有帮助，在这儿：<a href="https://ikookblog.com/2017/09/01/chrome-extended/">无扩展，不 Chrome</a></p>
<p>Safari 是 Mac 上自带的浏览器，也非常好用，其阅读器非常强大，同样是我喜欢的浏览器，也许很多人都没用过 Safari，相信我，用过之后你会感谢我的。</p>
<p><br></p>
<p><strong>IDE</strong></p>
<p>JetBrains 旗下 IDE，基本都是精品，比如我现在用的就有：IntelliJ IDEA、WebStorm、PyCharm，分别对应：Java、Web 开发、Python，IntelliJ IDEA 还天然支持 Kotlin，而且 Kotlin 本身就是由 JetBrains 团队开发的。当然，不止支持这些，还有很多，像 PHP、Ruby、Swift、C/C++、Go 等，几乎一应俱全。并且都非常优秀，著名的 Android Studio 也是在其基础上开发出来的。不过，JetBrains 的 IDE 都是收费的，并且还挺贵，拿 IntelliJ IDEA 来说，一年 $499，也可以购买支持旗下所有产品的注册码，一年 $649。学生可以免费申请正版授权，创业公司支持 5 折购买。像我们这些穷屌丝，看这里：<a href="http://idea.lanyus.com/" target="_blank" rel="external">http://idea.lanyus.com/</a>。需要声明的是，资金允许，还是去购买正版吧，省心，也是对开发者的一种支持。</p>
<p>Eclipse，曾经的王者，几乎支持所有常用的编程语言，并且是免费的，插件丰富，现在非常多的开发者依然站在 Eclipse 的阵营中。无需多说。</p>
<p>Xcode，Mac 上独有的非常优秀的 IDE，基本上我们使用的所有 Mac App 和 iOS App 都是用它开发出来的。并且 The Xcode suite 还支持 C/C++、Java、Python 等。可以在 Mac App Store 上免费下载。</p>
<p>HBuilder，非常好用的 Web 开发 IDE，HBuilder 本身主体由 Java 开发，基于 Eclipse，兼容 Eclipse 的插件。据说“快”，是 HBuilder 最大的优势，大幅度提升了 Web 开发效率。嗯，确实挺快的，完整的语法提示和代码输入法、代码块等，用着很爽，免费。</p>
<p><br><br><strong>编辑器</strong></p>
<p>TextMate，Mac 下专有神级编辑器，目前已经免费开源了，以前收费。我用的不多，倒不是不好用，受不了“那朵花”。</p>
<p>Atom，开源免费。简洁直观的图形界面，跨平台，有丰富的主题、插件。是 GitHub 专门为程序员开发的，目前非常火，很多人追随，其中就有我。</p>
<p>Sublime Text，最性感的编辑器。可免费使用，但会时不时弹出烦人的提示框要你购买注册码。拥有很多优秀的前端开发插件，有重多前端开发者追随。小巧绿色速度快，没谁了。受不了弹框看这里：<a href="https://fatesinger.com/100121" target="_blank" rel="external">https://fatesinger.com/100121</a>，支持 Sublime Text 3 3143。</p>
<p>Visual Studio Code，微软开发的跨平台文本编辑器，开源免费，支持调试。颜值也是蛮高的，并且是由微软开发的，实力保障啊。它可以说是前端开发者的福音，插件丰富。我最近使用比较多，非常爽。</p>
<hr>
<p>写着写着发现今天写不完了，还有不少好的软件和工具推荐给大家，如果接着写下去，我估计得写到明天凌晨。那不行啊，那不得耽搁我约会啊，不说了，我去约会了，改天见。</p>
<p><br>ikook<br>2018.01.18</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上次的调查反映还算是蛮强烈的，投票结果显示大多数人是需要这么一篇文章的，可能本身就需要这么一篇文章，也可能就是想知道我用的什么工具吧，哈哈。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="软件说" scheme="http://ikookblog.com/categories/%E8%BD%AF%E4%BB%B6%E8%AF%B4/"/>
    
    
      <category term="工具" scheme="http://ikookblog.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="Mac" scheme="http://ikookblog.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>浅谈 JavaScript 闭包</title>
    <link href="http://ikookblog.com/2018/01/12/js-closure/"/>
    <id>http://ikookblog.com/2018/01/12/js-closure/</id>
    <published>2018-01-11T16:00:00.000Z</published>
    <updated>2018-01-12T14:34:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>相信学习 JavaScript 的同学都知道「<strong>闭包(Closure)</strong>」<a id="more"></a>，这个概念在 JavaScript 中是非常重要的，并且在大多数人看来闭包是非常难以理解的概念。既然这样，那今天就带大家一起来看看这到底是何方神圣。</p>
<p>维基百科是这样解释的：</p>
<blockquote>
<p>闭包，又称词法闭包或函数闭包，是引用了自由变量的函数，这个被引用的自由变量将和这个函数一同存在，即使离开了创造它的环境也不例外，所以，<strong>闭包是由函数和与其相关的引用环境组合而成的实体</strong>。</p>
</blockquote>
<p>说了半天一句也没看懂，那我们来看看 JS 官方是怎么解释的：</p>
<blockquote>
<p>闭包是指多个变量和绑定了这些变量的环境的表达式( 通常是一个函数 )，因而这些变量也是该表达式的一部分。</p>
</blockquote>
<p>我去，这又是什么东西？<strong>只看出闭包是个函数</strong>，其他的还是一概不知。</p>
<p>既然这样不知道它们在说些什么，不如跟着我的思路来看一看到底是个什么。</p>
<p>要理解闭包，首先我们要弄明白什么是<strong>词法作用域</strong>和<strong>作用域链</strong>。</p>
<p>作用域一般有两种常见的模型，一种叫做<strong>词法作用域</strong>，另一种叫做<strong>动态作用域</strong>。我们的 JavaScript 就是基于词法作用域的语言。</p>
<p>简单来讲，<strong>词法作用域就是一个变量的作用在出生(定义)时就已经被设定好了，当在本作用域中找不到变量时，就会一直向父作用域中去查找，直到直到为止</strong>。如果不明白的话，看下面的代码大概就能理解了。</p>
<p><img src="https://meto.chinakook.com/blog-images/%E4%BB%A3%E7%A0%811.png" alt=""></p>
<p>代码中 fun1 在其内部已经定义了变量 y，所以在查找 y 时在该作用域(内部函数 fun1 中)内可以找到，则无需再往父作用域中去查找；如果在其作用域内没有查找到，则会在父作用域内查找，也就是使用 fun 函数中的变量 y。</p>
<p>既然 JavaScript 中的函数和变量都有其作用域，那么作用域之间就会产生一条链，我们称之为<strong>作用域链</strong>。假设我们编写了一段 JS 代码，那这段代码就会有一个与之关联的作用域链。这个作用域链就是由全局对象(如：window)、我们自定义的对象(函数，局部变量)组成。比如上面的代码，其作用域链上是这样的：函数 fun1、变量 y ==&gt; 函数 fun、变量 x、y ==&gt; 全局对象。这就是所谓的<strong>作用域链</strong>。</p>
<p>理解了上面的内容，就可以来看看咱们今天的主人公「闭包」了。</p>
<p><strong>函数对象可以通过作用域链相互关联起来，函数体内部的变量都可以保存在函数作用域内，也就是函数变量可以被藏在作用域链之内，这种特性在计算机科学文献中称为闭包</strong>。看上去变量被“封闭包裹”了起来。由此可见，从理论上讲，所有的 JavaScript 函数全都是闭包的，因为它们都是对象，它们都关联在作用域链上。</p>
<p>那么怎么才能<strong>显式</strong>的形成闭包呢？先来看下面的例子。</p>
<p><img src="https://meto.chinakook.com/blog-images/%E4%BB%A3%E7%A0%812.png" alt=""></p>
<p>注意这段代码中标记的地方：内部函数 fun1 在执行前通过外部函数被返回了，外部函数被赋值给了变量 result。这时，变量 result 的值就变成了函数 fun1，也就是说内部变量 name 在所属函数外部被调用了。我们来证实一下：</p>
<center><img src="https://meto.chinakook.com/blog-images/%E4%BB%A3%E7%A0%813.png" alt=""></center>

<p>可以看到 result 的值就是函数 fun1，那为什么还可以读取变量 name 呢？答案就是 result 变成闭包了。</p>
<p>result 由两部分组成：<strong>函数以及创建该函数的环境。函数就是被外部函数返回的内部函数，而环境就是由闭包创建时在作用域中的任何局部变量组成的</strong>。在我们的例子中，result 是一个闭包，由<strong>函数 fun1 </strong>和闭包创建时存在的「<strong>“Google”</strong>」字符串形成。</p>
<p>现在想想，维基百科说的好像就是这么回事：<strong>闭包是由函数和与其相关的引用环境组合而成的实体</strong>。这就解释了为什么可以读取变量 name 了，因为 result 引用的环境是 fun1 函数相关的引用环境，可以理解为： result 处在 fun1 所处的作用域链的位置，既然这样，那自然可以读取变量 name 了。</p>
<p>这就是闭包，现在看来也就是这么回事么，没什么难理解的。</p>
<p>既然已经理解了，那我们再来看一个例子(引用自廖雪峰老师的 JS 教程)：</p>
<p><img src="https://meto.chinakook.com/blog-images/%E4%BB%A3%E7%A0%814.png" alt=""></p>
<p>这个例子中，每次循环，都创建了一个新的函数，然后，把创建的 3 个函数都添加到数组 arr 中返回了。</p>
<p>那么调用 f1() 、f2()、f3() 的结果是什么呢？不就是 1，4，9 吗? 不是。</p>
<center><img src="https://meto.chinakook.com/blog-images/%E4%BB%A3%E7%A0%815.png" alt=""></center>

<p>你没看错，答案就是 16，全部都是！原因在于闭包 results 返回的数组中的函数引用了变量 i，但这个返回的数组中的函数并不是立刻执行的，等到执行时，它们所引用的变量 i 已经变成 4 了，所以结果为 16。还是没明白？上面我们说了，<strong>闭包是由函数和其相关的引用环境组合而成的</strong>，既然所处的环境还是在作用域链原来的位置，那么变量 i 就会在 for 循环的作用下变成 4，而到了你去调用闭包的时候，闭包引用的变量 i 的值自然为 4 了，所以结果自然就是 16 了。</p>
<p>这个例子要提醒大家的是：<strong>返回的函数，不要引用任何循环变量和变量值后续会发生变化的变量</strong>。这一点在使用闭包时一定要牢记。</p>
<p>还要说明的一点就是，<strong>避免滥用闭包</strong>。原因：使用闭包之后，闭包中函数所处的环境会一直存在，所以闭包会使得函数中的变量都被保存在内存中，不会被“垃圾回收机制”回收，进而内存消耗过大，造成网页性能下降。</p>
<p>最后，理解清楚作用域链的概念不但对掌握闭包非常重要，并且对其他知识点（比如 with 语句）同样很重要。</p>
<p><br>ikook<br>2018.01.12</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;相信学习 JavaScript 的同学都知道「&lt;strong&gt;闭包(Closure)&lt;/strong&gt;」
    
    </summary>
    
      <category term="技术栈" scheme="http://ikookblog.com/categories/%E6%8A%80%E6%9C%AF%E6%A0%88/"/>
    
    
      <category term="JavaScript" scheme="http://ikookblog.com/tags/JavaScript/"/>
    
      <category term="Web" scheme="http://ikookblog.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>你不是迷茫，只是缺乏目标</title>
    <link href="http://ikookblog.com/2018/01/09/do-not-confused/"/>
    <id>http://ikookblog.com/2018/01/09/do-not-confused/</id>
    <published>2018-01-08T16:00:00.000Z</published>
    <updated>2018-01-10T09:41:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>不知道大家有没有这样的体会：时不时就会莫名的迷茫，特别迷茫，干什么都投入不进去。<a id="more"></a>我经常这样，每个月都有，就和女生定期来「某事」一样。</p>
<p>但是，总不能任由自己迷茫下去吧。这时候学会调节自己的状态显得非常重要，我们要正视迷茫，正确的认识迷茫，进而走出迷茫，去做自己该做的事情。</p>
<p>我相信大多数人都会迷茫，而且有时迷茫倒成了现代人的一个标签了。有时我就在想：到底从什么时候开始，迷茫成了一个「时髦」的词了？这个词尤其符合大学生。现在有些同学大学四年多半是混过来的，每天无所事事，上完课就不知道去做什么了；有些人干脆不去上课，日复一日的躲在宿舍打游戏。不去上课其实说的过去，谁还不逃课啊，但要分去干什么，逃课的前提是：你将要去做的事产生的价值，比你在课堂上产生的价值要高，如果是这样，那么但逃无妨。</p>
<p>我觉得，迷茫可以分为两种：短期迷茫和长期迷茫。上面说的，躲在宿舍整天打游戏的同学就是长期迷茫典型案例。</p>
<p>相反，有些拥有长期目标的人，虽然也会迷茫，但他们明白自己想要什么，经过短暂迷茫期，更有动力的向着自己目标努力。</p>
<p>所以，迷茫不可怕，可怕的是长期迷茫。</p>
<p>大多数人之所以会长期迷茫下去，就是不知道自己要干什么，换句话说，就是缺乏长期目标，不能踏踏实实的做事。</p>
<p>举个例子，有些同学看上去蛮好学的，平时没事也学别人泡图书馆。可是，是真的在学习吗。还是只为了拍个照片、视频发朋友圈，换个地方刷微博？这样做只不过是为了寻求心理的慰藉、逃避迷茫罢了。这样的人，根本原因就是没有找到自己想要做的事，没有目标，不能稳下心去做事。</p>
<p>还有那些懒癌晚期的人，把自己的努力看的特别宝贵。他们往往会说，我不是不想努力，我只是不屑于努力。他们把努力当做杀手锏，生怕一亮出来把世人都吓坏了，殊不知，没有人会真的在意。说实话，这只是在逃避，逃避自己。</p>
<p>解决迷茫的良方就是：先去做。20多岁，出错的成本并不高。所以说，现在开始就去做。不要站在原点，动起来，哪怕去试错。你说不喜欢当下的事，那就去做另一件你喜欢的事。给这件事五年时间，在这五年里，付出至少一万个小时的努力，你一定会成为这个领域的专业人士。 </p>
<p>找到自己的长期目标，找到自己想做的喜欢做的事，坚持下去。哪怕有时迷茫，没什么可怕的，稍事休息，过后撸起袖子，更加努力的去做。</p>
<p>从现在开始，Just Do It ！！！</p>
<p><br>ikook<br>2018.01.09</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;不知道大家有没有这样的体会：时不时就会莫名的迷茫，特别迷茫，干什么都投入不进去。
    
    </summary>
    
      <category term="随笔集" scheme="http://ikookblog.com/categories/%E9%9A%8F%E7%AC%94%E9%9B%86/"/>
    
    
      <category term="生活" scheme="http://ikookblog.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="感悟" scheme="http://ikookblog.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>利用谷歌云免费搭建你想要的服务</title>
    <link href="http://ikookblog.com/2018/01/04/google-cloud/"/>
    <id>http://ikookblog.com/2018/01/04/google-cloud/</id>
    <published>2018-01-03T16:00:00.000Z</published>
    <updated>2018-01-09T10:29:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>由于众所周知的原因，在国内不能够在网络上自由的浏览信息，但是有没有解决方法呢？<a id="more"></a>肯定是没有啊，身处国门之内，要学会遵守规则不要踩踏红线。</p>
<p>明确说明，<strong>这篇文章只是教给大家如何利用谷歌云「学习」搭建一个免费的服务器，学习搭建服务</strong>这个技术。至于利用谷歌云做什么，与本文及本人无关。</p>
<p>要想利用谷歌云搭建服务有两个前提条件：</p>
<ol>
<li>拥有其中一张信用卡：Visa、MasterCard、JCB；</li>
<li>有一个可以临时「自由访问」的网络。</li>
</ol>
<p>这两个条件都是硬性条件，缺一不可。信用卡，可以在某宝淘，临时注册用，也就 20 来块，不易搜索，大家用心寻找应该能找到，需要提醒的是：超过 20 块的不要买，更高价格就更不用说了，完全可以找到 20 以下的，某宝还是有不良商家的；临时「自由访问」网络，这个在“百毒”上可以搜索到，比如那个带颜色的灯，可以免费使用，如果实在找不到，那就再找找。</p>
<p>首先，要拥有一个谷歌账户，只要可以「自由访问」网络便可注册，这里就不赘述了，谷歌全家桶都使用这一个账户登录，谷歌云也不例外。</p>
<p>打开谷歌云：<a href="https://cloud.google.com/" target="_blank" rel="external">https://cloud.google.com/</a>，登录你的谷歌账户然后点击免费试用。</p>
<center><img src="https://meto.chinakook.com/blog-images/0.jpeg" alt=""></center>

<p>然后如下所示：</p>
<center><img src="https://meto.chinakook.com/blog-images/1.jpeg" alt=""></center>

<p>地区请选择<strong>美国</strong>，当然任性选择中国我也没辙，只是有什么问题就自己受着吧。继续之后出现如下信息：</p>
<center><img src="https://meto.chinakook.com/blog-images/2.jpeg" alt=""></center>

<p>账号选择个人，然后填写「名称和地址」，不知道怎么填？我教你。在浏览器打开：<a href="http://t.cn/Rt85282" target="_blank" rel="external">http://t.cn/Rt85282</a>，会随机生成一个美国公民的身份，然后按照提示填写即可。需要注意的是，如果有去广告插件先把该站点加入白名单。随机生成的身份如下：</p>
<center><img src="https://meto.chinakook.com/blog-images/3.jpeg" alt=""></center>

<p>不要填写图中的信息，自己去生成。</p>
<p>然后填写「付款方式」中的「信用卡卡号」，当然是填写淘到的卡号了。如果自己有支持的信用卡的话，直接用就可以了，就是直接填写自己的信用卡卡号，不会扣费，到期之后也不会。谷歌不会这么干，某些公司会，你懂！！！</p>
<center><img src="https://meto.chinakook.com/blog-images/4.png" alt=""></center>

<p>如果你是在某宝上买的虚拟信用卡，「持卡人姓名」填写上面生成的名字即可。如果你是使用自己的信用卡，请填写自己的姓名。</p>
<p>然后点击开始免费试用，再进入「我的控制台」，会创建一个默认项目，项目名称是自己生成的，不用我们管，创建之后如下：</p>
<center><img src="https://meto.chinakook.com/blog-images/05.jpeg" alt=""></center>

<p>点击左上角按钮，然后点击「结算」查看谷歌赠送给的 $300 是否到位了。</p>
<center><img src="https://meto.chinakook.com/blog-images/6.jpeg" alt=""></center>

<p>我的用过了，所以是这样的，刚注册会显示剩余的赠金：$300，剩余天数：365。</p>
<p>然后点击：计算 - Compute Engine - VM 实例 - 创建实例。如下：</p>
<center><img src="https://meto.chinakook.com/blog-images/7.png" alt=""></center>


<center><img src="https://meto.chinakook.com/blog-images/8.png" alt=""></center>

<p>按照下图中标注的信息填写，其他默认即可。</p>
<center><img src="https://meto.chinakook.com/blog-images/9.jpeg" alt=""></center>

<p>正在创建：</p>
<center><img src="https://meto.chinakook.com/blog-images/10.png" alt=""></center>

<p>创建完成：</p>
<center><img src="https://meto.chinakook.com/blog-images/11.png" alt=""></center>

<p>创建完成之后，「外部 IP」就是服务器的地址，我这里不适合给你们看。因为我之前创建过一个实例，所以会显示两个，大家如果第一次，肯定是一个。</p>
<p>然后去测试一下实例的速度如何，当然也可以不测试，基本是没问题的。测试地址：<a href="http://t.cn/Ry2GtDf" target="_blank" rel="external">http://t.cn/Ry2GtDf</a>。下图中框起来的地方，大家选择离自己所在地最近的即可。</p>
<center><img src="https://meto.chinakook.com/blog-images/12.jpeg" alt=""></center>

<p>可见速度杠杠的，只要均在 100 毫秒之内，说明就没问题，如果超出就删除这个实例，重新建一个实例试试。</p>
<p>配置服务器，这一步非常关键，非常关键，非常关键。务必仔细操作。</p>
<p>首先，连接 SSH 服务器，如下所示：</p>
<center><img src="https://meto.chinakook.com/blog-images/13.png" alt=""></center>

<center><img src="https://meto.chinakook.com/blog-images/14.png" alt=""></center>

<p>之后提到的所有关于代码的部分均在类似下图窗口中输入：</p>
<center><img src="https://meto.chinakook.com/blog-images/15.jpeg" alt=""></center>

<p>1.输入：sudo -i（注意，sudo 之后有个空格），回车。</p>
<p>2.输入下列代码（注意，这里的代码为一行，中间切不可有回车）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/FunctionClub/YankeeBBR/master/bbr.sh &amp;&amp; bash bbr.sh install</div></pre></td></tr></table></figure>
<p>输入之后回车。然后耐心等待，直到出现第三步中的窗口。</p>
<p>3.出现如下窗口：</p>
<center><img src="https://meto.chinakook.com/blog-images/16.jpeg" alt=""></center>

<p>按键盘上的 <strong>Tab</strong> 键，选择 <no>，然后会跳回刚才的窗口：</no></p>
<center><img src="https://meto.chinakook.com/blog-images/17.png" alt=""></center>

<p>然后输入 <strong>y</strong>，回车。可以等待重启，或者直接关闭该窗口，重新打开，不记得怎么打开就往上翻。</p>
<p>4.输入：sudo -i（和第一步一样）</p>
<p>5.输入：bash bbr.sh start</p>
<p>6.输入以下代码（注意，代码中间没有回车）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR.sh &amp;&amp; chmod +x shadowsocksR.sh</div></pre></td></tr></table></figure>
<p>7.输入：./shadowsocksR.sh</p>
<p>出现下图所示内容，则证明上面的工作成功。</p>
<center><img src="https://meto.chinakook.com/blog-images/18.png" alt=""></center>

<p>8.设置密码和端口。在上面所示窗口中输入密码，随便，自己记住就可以，回车；然后会提示输入端口，也是随便，只要在 1-65535 之间就行，我设置的是 789。</p>
<p>9.设置完密码和端口，会提示输入编码方式、混淆方式等，这里直接默认就好，一路回车。如下图所示（图中有提示，认真看）：</p>
<center><img src="https://meto.chinakook.com/blog-images/019.png" alt=""></center>

<p>10.在上一步骤回车之后，大约需要等待 5、6 分钟，这个过程是在配置服务器，耐心等待就好，千万不要关闭窗口，更不要关闭浏览器，更更不能关闭电脑，马上就完工，现在放弃就可惜了。</p>
<p>11.出现以下画面，嗯，恭喜，你成功了。当然，先别记着关闭，复制红色部分到你的电脑中，之后会用到的。然后就可以关闭这个 SSH 窗口了。</p>
<center><img src="https://meto.chinakook.com/blog-images/20.png" alt=""></center>

<p>配置防火墙规则，这是最后的设置了。</p>
<p>1.点击边栏中：网络 - VPC 网络 - 防火墙规则。</p>
<center><img src="https://meto.chinakook.com/blog-images/21.png" alt=""></center>

<p>2.设置协议端口：</p>
<center><img src="https://meto.chinakook.com/blog-images/22.jpeg" alt=""></center>

<p>把端口号设置成刚才我们自己规定的端口号，我的是 789。修改时输入：tcp:789; udp:789，注意，分号“；”后面紧跟一个空格。只设置图中圈红的两个，这两个必须设置，不要漏掉，其余默认。</p>
<p>到此，谷歌云搭建完毕。</p>
<p>搭建完就可以在你的设备上使用了，全平台支持，只需要下载对应的客户端。Mac、Windows、Android 的客户端可以在 GitHub 上搜索 shadowsocks 自行查找。iOS 的客户端需要 App Store 登录国外 ID，然后搜索 Shadowrocket 或者 Wingy。这些客户端如何使用自行搜索，我不知道怎么使用，你懂。</p>
<p>这个速度怎么样呢，反正看某 tube 视频网站的 4k 视频毫无压力，能说明速度如何了吗？</p>
<p>今天的文章主要和大家交流<strong>如何搭建服务器，其他任何目的都没有</strong>。那为什么要以谷歌云为例子呢？因为它可以免费使用一年啊。学会这篇文章之后，再搭建类似服务的服务器时，比如在国内的阿里云、腾讯云上搭建；在自己买的国外服务器上搭建，原理是一模一样的，流程基本一样。对了，话说亚马逊也有免费一年的优惠。</p>
<hr>
<p>写这篇文章我是忐忑的，我是不安的，考虑了很长时间才动笔，大约在一个多月之前就开始思考了。虽然只讨论技术，但毕竟有些不妥之处，希望大家珍重。</p>
<p>现在终于写完了，这篇文章从下午 4 点钟开始下笔，一直写到 8 点多钟，期间要通过操作模拟流程，比较麻烦，也比较辛苦，希望大家能够多多支持，能够分享转发一下让更多人学习。留言、转发都是对我的支持。</p>
<p>我也知道这篇文章可能不会存在太久，但也希望能发挥它的作用。</p>
<p><strong>需要再次声明的是，本文只讨论搭建服务这项技术，请不要用作其他任何商业用途，否则后果自负。</strong></p>
<p><br>ikook<br>2018.01.04</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于众所周知的原因，在国内不能够在网络上自由的浏览信息，但是有没有解决方法呢？
    
    </summary>
    
      <category term="技术栈" scheme="http://ikookblog.com/categories/%E6%8A%80%E6%9C%AF%E6%A0%88/"/>
    
    
      <category term="网络" scheme="http://ikookblog.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
      <category term="工具" scheme="http://ikookblog.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="Google" scheme="http://ikookblog.com/tags/Google/"/>
    
      <category term="科学上网" scheme="http://ikookblog.com/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>回顾 2017，展望 2018</title>
    <link href="http://ikookblog.com/2017/12/31/old2017_new2018/"/>
    <id>http://ikookblog.com/2017/12/31/old2017_new2018/</id>
    <published>2017-12-30T16:00:00.000Z</published>
    <updated>2018-02-02T12:12:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>又到年末了，今天是 2017 年的最后一天。<a id="more"></a>去年开始养成了写年终总结的习惯，毕竟过了一年，也该回顾一下，审视一下自己，以便在下一年有更好的发展。</p>
<p>今天提笔之前看了下<a href="http://ikookblog.com/2017/01/07/old2016_new2017/"> 16 年的总结</a>，恩，我过了糟糕的一年，非常糟糕。</p>
<h4 id="回顾-2017"><a href="#回顾-2017" class="headerlink" title="回顾 2017"></a>回顾 2017</h4><p>年初定下的目标完成量非常差劲，尤其是技术方面，没有长进。年初目标：深入学习 Android 开发，学习 Java 后端开发，接触了解 React Native，学习英语。</p>
<p>Android，倒是没有放弃，但还是停留在表层，没有深入学习。其实我自己是非常热爱 Android 的，它是我在编程这条路上入的第一个坑，对它真的是有特殊情感，可以说，没有 Android 也许我可能不会那么主动的去自学编程。当初凑热闹参加比赛，无奈学校还没有开设 Java、Android 课程，只好自己折腾，从此自学之路开始。</p>
<p>虽然国内 Android 开发现状「惨淡」，其实我心里还是很清楚的，「惨淡」只适用于停留在搬砖阶段的开发者，只要技术够硬，难不成还愁找不到工作？</p>
<p>前端技术蓬勃发展，开始走向大前端，也许在不久的将来就没有前端开发工程师和移动开发工程师之分了。Android、iOS 原生开发技术和前端开发技术配合使用，原生技术的使用将会更加广泛。池老师领导开发的 APP「极客时间」就是一个典型的例子。</p>
<p>Java，当初自学 Android 的时候国内基本还没几个人知道 Kotlin，所以首选语言当然是 Java。当初学习 Java 的时候那叫一个激动，感觉这门语言简直太好了，真简单，比那什么 C 语言强多了，从来不关心什么指针，它爱指向谁就指向谁，管它呢。 后来知道了后端开发，自己有 Java 基础，自然也就继续 Java 的坑了。惭愧的是，这一年下来其实真的没怎么学，只学习了 Java web 的基础，做了几个小的练手项目，还是在近两个月。</p>
<p>React Native 直接没搭理；英语坚持了大约有两个月；健身嘛，也没坚持几天。说到这里真是无地自容，实在有点看不起自己。幸亏自己坚持了阅读和写作，不然这一年真是白活，不可原谅了。</p>
<p>今年 7 月份入手了一款 kindle，也看了几本书。阅读这件事在今年算是完成的蛮好的了，算是养成了阅读的习惯。现在每天都会阅读，公众号、知识星球、知乎、微博、书籍等等。阅读的多了，自然会爱上阅读，这件事已经成了我的习惯，我相信自己 18 年以及未来很多年都会把这件事进行下去。</p>
<p>写作这件事完成的也算是可以，我的博客今年一共更新了 36 篇文章，记录了学习的一点技术，还有一些感悟。除 5 月份和 10月份没有更新外，其他月份都有更新，其中更新最为频繁的是 12 月份，也就是这个月。更新频繁的原因是公众号在这个月更新较为频繁。</p>
<p>自从 7 月份开始运营公众号到现在，我成长了很多收获了很多，当然，我也放弃过。维护公众号其实是非常困难的，能够坚持很难，原创更加难。公众号不像博客，博客我想什么时候更新就什么时候更新，没有什么压力，但是公众号就不一样了，这里有信任我的读者的期待，他们在无形之中督促着我，我不得不保持一定的更新频率。</p>
<p>说来惭愧，我自己其实没什么才能，有时候真的想不出该写些什么，也许正是因为这个主要因素导致我中间停更将近 3 个月的时间。后来因为一个读者私信我，才让我又重新回到这里，具体原因见：<a href="http://mp.weixin.qq.com/s?__biz=MzU5MjE1NTEzNg==&amp;mid=2247483783&amp;idx=1&amp;sn=590a128c0f1f1a9feab956f54082107a&amp;chksm=fe2546e8c952cffe26cf635a2a7142ca666d6f24e274635df05be944d4c0a31e261fabe28b2a&amp;scene=21#wechat_redirect" target="_blank" rel="external">这逝去的日子</a>。</p>
<p>之后公众号被推荐，关注的多了，自然给了我非常大的鼓励和自信。读者的私信，公号的推荐等等，这些让我重新审视自己，我有什么理由放弃，别人还没有放弃，难不成还要自己先放弃？当然不能。后来我重新做了公号的头像，重新做了公号的定位，争取<a href="http://mp.weixin.qq.com/s?__biz=MzU5MjE1NTEzNg==&amp;mid=2247483848&amp;idx=1&amp;sn=822ea41c4ba9db01d07cedcad7602124&amp;chksm=fe2546a7c952cfb1371737554332bdd2f02020fd6b0ae41d528f96d29b4f7c9d22cba77e849d&amp;scene=21#wechat_redirect" target="_blank" rel="external">打造一个「品牌」</a>。</p>
<h4 id="展望-2018"><a href="#展望-2018" class="headerlink" title="展望 2018"></a>展望 2018</h4><p>18 年，我想将会是我人生关键的一个转折点，即将毕业，面临择业。这一年也许比较折腾，但希望自己能有所把握，但愿不会超出自己的预期，当然，也希望不要达不到自己的期望。</p>
<p>做以下几个方面的计划吧。</p>
<p><strong>1.工作</strong></p>
<p>即将毕业，找工作自然是第一位。选择很重要，往往很容易就改变一生的轨迹，希望我在工作上能有一个好的选择，一个能够让自己满意的选择。</p>
<p>18 年找份工作，不妥协。</p>
<p><strong>2.技术</strong></p>
<p>在 2018 年，我将会利用业余时间深入学习 Android 开发，没准哪天就去做「大前端」开发了呢。</p>
<p>其实觉得自己蛮适合后端开发的，有时候页面写多了总觉得没什么意思，还是“纯写代码”来的爽快。在 18 年主攻 Java 后端开发技术，学习主流开发框架。对，我想找一份 Java 开发的工作。自然学好 Java 非常重要，把握好 3 月份前的时间很关键。</p>
<p>学习 Python。人工智能时代第一编程语言，更何况它能做的事非常多，能在后端开发一展拳脚，没事还能写个爬虫，深度学习、数据分析等领域更是火热，自然要学习一下。当然，不能耽搁主线。</p>
<p>可能会上线一个开源项目，具体还没构思好，但有了方向。希望能够做到，很是期待。</p>
<p>18 年提高技术，坚持下去，不妥协。</p>
<p><strong>3.写作</strong></p>
<p>坚持写作，提高写作能力。博客持续更新，大多会和公众号同步更新。公众号目前已经慢慢走上正轨，我心里也基本有了方向，18 年公众号会更好。</p>
<p>18 年要写作，坚持下去，不妥协。</p>
<p><strong>4.生活</strong></p>
<p>健身真的很有必要坚持下去。今年是我自小到现在感冒最多的一年，大概有 5、6 次了吧，明显超出了正常范围，唯一可以说明的就是身体免疫能力下降了很多。以前喜欢运动，经常跑步，自然身体素质还可以。近两年变得很宅，有时间就宅起来。18 年要坚持健身，多跑跑步，有了好身体才有革命的本钱。</p>
<p>改变自己怯场的毛病，自信很重要。也许是宅久了，面对陌生人很容易产生恐惧，自信心不足。今年在学校两次被安排给同学讲课，两次讲的都非常差，怯场、说不出话等毛病出现，还因为紧张导致驾照科三考试挂科。要克服恐惧心理，锻炼演讲能力。</p>
<p>希望自己能有机会多出去旅行，今年 11 月份出去旅行了一趟，感觉很好。能够多去一些地方看看，开阔自己的眼界，蛮不错的。</p>
<p>还有，希望能够多陪陪家人、女友，能多结交一些朋友。</p>
<p>18 年要运动要自信，坚持下去，不妥协。</p>
<hr>
<p>这一年过的稀里糊涂，是自己最迷茫的一年，在技术方面没有大的提升，在生活方面也是没有什么改变。过去的就让它过去，教训留在心里。18 年不要迷茫，要找到好的工作，要做好计划中的事情，要提升自己生活质量，要改变自己，不妥协。</p>
<p>我把今年我的公众号所有原创文章做了一下汇总，地址：<a href="https://mp.weixin.qq.com/s?__biz=MzU5MjE1NTEzNg==&amp;mid=2247483920&amp;idx=2&amp;sn=1bb12c4dbe810f3470fab754aa44a525&amp;chksm=fe25457fc952cc69ff25c960cae39335db9ed6d66d4602d5ef767ab82c038fefe3cb973b52b3&amp;scene=38#wechat_redirect" target="_blank" rel="external">2017 公号原创文章汇总</a>，方便大家查看。</p>
<p>最后，祝大家元旦快乐，新的一年大家都能够有所成长。加油，我们一起努力。</p>
<p><br>ikook<br>2017.12.31</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;又到年末了，今天是 2017 年的最后一天。
    
    </summary>
    
      <category term="随笔集" scheme="http://ikookblog.com/categories/%E9%9A%8F%E7%AC%94%E9%9B%86/"/>
    
    
      <category term="生活" scheme="http://ikookblog.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="总结" scheme="http://ikookblog.com/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="年终总结" scheme="http://ikookblog.com/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>有故事的微信小游戏「跳一跳」</title>
    <link href="http://ikookblog.com/2017/12/29/wechat-tiaoyitiao/"/>
    <id>http://ikookblog.com/2017/12/29/wechat-tiaoyitiao/</id>
    <published>2017-12-28T16:00:00.000Z</published>
    <updated>2018-01-05T15:47:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>昨天微信官方公布了几条关于小程序的重要消息，并且微信 APP 在同一天进行了更新。<a id="more"></a>小程序的功能升级主要包含以下几个部分：</p>
<ol>
<li>新增任务栏功能 </li>
<li>小程序菜单升级，并支持小程序间快捷切换</li>
<li>微信小游戏正式上线</li>
</ol>
<p>具体见微信官方公号发表的文章：<a href="http://mp.weixin.qq.com/s?__biz=MjM5NDAwMTA2MA==&amp;mid=2695730045&amp;idx=1&amp;sn=c93080476258430accd5a08924c4a1db&amp;chksm=83d74ab6b4a0c3a05163dcf8fc306dab562071fd170f3087f40fdcddec5e61bde57ac9f9e886&amp;scene=21#wechat_redirect" target="_blank" rel="external">小程序功能升级</a></p>
<p>更新到最新版微信就可以去体验以上的功能了。安装更新之后，其中最惹人瞩目的莫过于小游戏「跳一跳」，打开即可看到以下界面。</p>
<p><img src="https://meto.chinakook.com/blog-images/WechatIMG4.jpeg" alt=""></p>
<p>立即开始游戏体验一下，真的蛮不错的，因为是第一次进入游戏就光顾着体验游戏的玩法了，没有太在意一些细节，玩了两把之后就退出了。然后在接下来的一段时间里，朋友圈、微信群等等都在晒战绩，讨论小游戏「跳一跳」，还真是火的够快的。晚上躺在被窝里又认真体验了一下这款游戏，发现这游戏远没有想象的那么「简单」，然后立马上网查了下，果然。</p>
<p>这款小游戏其实讲述了一些的故事，游戏里包含了许多童年陪伴我们成长的事物。</p>
<p>游戏中跳跃的角色是一个英文字母“ i ”，我的觉得应该是“我”的意思，代表着游戏者、游戏的主人公，也就是你。</p>
<p><img src="https://meto.chinakook.com/blog-images/WechatIMG5.jpeg" alt=""></p>
<p>游戏中被「我们」踩的小物体，也就是使我们跳跃的介质，其实包含了许多有内涵的元素。</p>
<p><strong>魔方：</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/WechatIMG6.jpeg" alt=""></p>
<p>相信我们小时候都玩过魔方吧，甚至现在我还经常拿出来拧两把。</p>
<p><strong>井盖：</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/WechatIMG7.jpeg" alt=""></p>
<p>小时候走在路上的时候，总是不由自主地踩各种井盖玩。</p>
<p><strong>卷纸：</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/WechatIMG8.jpeg" alt=""></p>
<p>这个可就了不得了，青春时期的我们免不了使用卷纸吧？不管男生、女生。尤其是男生，都懂得吧？😏</p>
<p><strong>闹钟：</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/WechatIMG9.jpeg" alt=""></p>
<p>长大以后就再也离不开闹钟了。高中为了早起上自习要定闹钟；大学还好，不用早起，但还是会有自律的同学利用闹钟来督促自己，早起学习；工作之后就更加离不开了。</p>
<p><strong>便利店：</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/WechatIMG10.jpeg" alt=""></p>
<p>长大后，为了节省时间，便利店也许是我们经常光顾的地方了。</p>
<p><strong>快递包裹：</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/WechatIMG11.jpeg" alt=""></p>
<p>嗯，剁手快乐。</p>
<p>当然还有微信的故事。</p>
<p><strong>微信红包：</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/WechatIMG13.jpeg" alt=""></p>
<p>在微信群里抢红包，错过了一分好像错过了一个亿。</p>
<p><strong>用户过亿：</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/WechatIMG12.jpeg" alt=""></p>
<p>记录了微信推出 433 天注册用户过亿的辉煌历史。</p>
<p>游戏中还有很多有趣的「小事物」，这里就不一一介绍了，强烈建议大家去体验一番，真的蛮不错的。</p>
<p>不知道大家有没有看出这个小游戏的「深意」：现代社会，我们「关注」的东西越来越多，而我们「关心」的事情却越来越少，就像最开始进入更新后的微信，小游戏界面说的那样：玩一个小游戏才是正经事。我们应该停下来，放松下来，玩一个小游戏。</p>
<p>最后给大家安利一下小游戏「跳一跳」的高分秘籍：</p>
<ol>
<li>连续跳中心点，可以+2、+4、+6、+8分…..</li>
<li>跳到音乐盒上听一会儿，会播放音乐，并且加30分;</li>
<li>跳到便利店停一会儿，便利店会开门，而且额外加15分;</li>
<li>跳到魔方停留一会儿，魔方会旋转修正，并且加10分;</li>
<li>跳到井盖停留一会儿，会有冲水的声音，并且加5分。</li>
</ol>
<p>大家 Get 到了没有，快去刷新你的记录。这个高分秘籍并不是我发现的，是通过我一个微信群群主分享得知的，希望大家玩的愉快。如果玩的愉快了，分享下文章也是不错的，非常感谢 🙂</p>
<p><br>ikook<br>2017.12.29</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;昨天微信官方公布了几条关于小程序的重要消息，并且微信 APP 在同一天进行了更新。
    
    </summary>
    
      <category term="软件说" scheme="http://ikookblog.com/categories/%E8%BD%AF%E4%BB%B6%E8%AF%B4/"/>
    
    
      <category term="工具" scheme="http://ikookblog.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="WeChat" scheme="http://ikookblog.com/tags/WeChat/"/>
    
      <category term="游戏" scheme="http://ikookblog.com/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>人生苦短，何不学 Python</title>
    <link href="http://ikookblog.com/2017/12/28/python-data/"/>
    <id>http://ikookblog.com/2017/12/28/python-data/</id>
    <published>2017-12-27T16:00:00.000Z</published>
    <updated>2018-01-05T15:46:12.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文转载自公众号「红猴子」</p>
</blockquote>
<a id="more"></a>
<p>人生苦短， 我用 Python。</p>
<p>不知道从什么时候开始，这句话开始流行。不过也从侧面反映出 Python 语言的特点：简单、高效。</p>
<p>其实近期我研究了不少代表技术趋势的业界报告以及编程语言排行榜，对于我来说，编程语言这一块，最值得学习的就是 Python。</p>
<p>简单说下其中的原因。</p>
<p>一是随着 AI 浪潮，Python 这门语言也变得越来越热门，无论是国外还是国内的编程语言排行榜，Python 都是排在前面的，并且我相信随着时间的推移，它会越来越热，排名还会继续上升。毫无疑问，Python 已经成为 AI 以及大数据时代的第一开发语言。</p>
<p>二是 Python 语言语法简单，你用 C/C++ 或者 Java 写的几千行才能实现的程序，用 Python 可能只要几百行，甚至还不用这么多。在这个科技快速发展的时代，效率代表了一切。</p>
<p>三是 Python 应用范围广，拥有着各种各样强大的扩展库，无论是 web, 爬虫还是数据分析，Python 都可以完成，所以对应的需求 Python  的工作岗位也很多，学会 Python 可以轻松的找到工作。</p>
<p>四是近期浙江省把 Python 纳入高考，连山东省六年级小学生都开始学 Python 了，作为程序员，不会 Python，会不会被现在的小孩子鄙视，细思极恐。</p>
<p>所以，还有理由不学 Python 呢？！</p>
<p>坦白的讲，从上学直至后来的工作，我一直接触的都是底层开发，并没有系统的学习和用过 Python。不过作为一名程序员，我对技术还是挺敏感的，我认为无论你是不是从事相关的工作，都要适当学习一下现在比较热门的技术，千万不要落后太多，也千万不要被眼前的那么一点工作禁锢住自己的思维，这样可以让自己时刻保持竞争力。</p>
<p>从很久之前的 Android，到后来的微信小程序，到如今的 Python，机器学习，刚出来的时候，我都会找来资料或者书籍研究一番，写写代码，不求一定要非常精通，至少跟别人交流的时候，你要知道这是什么吧，大致的原理要能说的清楚吧。</p>
<p>当然，我并不是说让所有人都去追逐新技术，什么流行学什么。什么是主业什么是副业，你自己也要掂量地清，该花多少时间在上面也要自己把握。我的意思是，工作或者学习之余，学些热门技术，可以让自己保持敏锐度和竞争力，因为说不好什么时候这些热门技术就成了你的饭碗。甚至在一些氛围宽松的公司，是鼓励你去利用这些新技术对现有的工作做出创新的。</p>
<p>我就认识不少在一个比较狭窄的领域工作了很多年，因为不会别的，也没时间学别的，只能一条道走到黑的人。即使工资低，也不敢轻易跳槽，因为很难找到这方面的工作。再加上工作也忙，挤不出时间学习新技术，这就很被动了。殊不知自己还在十几年如一日的用着「陈旧」的技术，外面早就变天了。</p>
<p><strong>回到 Python 上，谈谈怎么学习，说下我的一些观点。</strong></p>
<p><strong>1.</strong><br>我认真找了一下，发现网络上关于 Python 的学习资料很多，各种书籍、教程、文档、视频、工具…非常非常之多。所以你不用发愁找不到学习资料。</p>
<p><strong>2.</strong><br>找到了巨多的学习资料，却不知道从哪里入手？其实这也是我不会把「 Python 学习」众多的网络资源分享给你们的原因，因为太多了，而且重复率很高，完全没必要。你需要的是，找到一至两个比较权威的教程，好好学下去，系统的认真学完，这就够了。</p>
<p><strong>3.</strong><br>如果你执意让我推荐的话，那么就 Python 官网，廖雪峰的官网，如果再加一本书的话，那就《A Byte of Python》好了。没错，这些网上都能轻易搜到，而且免费。</p>
<p><strong>4.</strong><br>如果这是你的第一门编程语言，建议你把教程一字一句的认真读完。如果你有其他编程语言的基础，那么可以像我一样快速浏览一下教程，接着在看代码的过程中，把教程当作工具书去参考。</p>
<p><strong>5.</strong><br>对于有编程基础的同学，可以去网上找来别人的 py 程序，一边试着理解，一边有不懂的就去查阅文档或者教程。这样比单纯的从变量语法开始啃教程进展更迅速。</p>
<p><strong>6.</strong><br>跟学习其他所有编程语言一样，想掌握一门语言，重点在于写。只看不写，跟不会没什么区别。一个项目写下来，Python 的知识点就掌握的七七八八了。</p>
<p>关于如何学习 Python，暂时就讲这么多，以后有机会的话，我会分享更多这方面的姿势，如果想到更好的方法，我也会补充。</p>
<p>人生苦短，何不学 Python？</p>
<p><br>ikook<br>2017.12.28</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文转载自公众号「红猴子」&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术栈" scheme="http://ikookblog.com/categories/%E6%8A%80%E6%9C%AF%E6%A0%88/"/>
    
    
      <category term="Python" scheme="http://ikookblog.com/tags/Python/"/>
    
      <category term="转载" scheme="http://ikookblog.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>请为迷失的自己照亮希望的方向</title>
    <link href="http://ikookblog.com/2017/12/27/view-text-03/"/>
    <id>http://ikookblog.com/2017/12/27/view-text-03/</id>
    <published>2017-12-26T16:00:00.000Z</published>
    <updated>2018-01-05T15:45:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>长大的途中，会遇到各种困难 <a id="more"></a><br>可能是思念的距离<br>是职场竞争的压力<br>是初入社会的现实<br>是生存之道的艰辛<br>是情感失利的感伤<br>…</p>
<p>我觉得每个人的人生都不一样<br>有的人从小就很坚强<br>但长大时困苦击溃了最后的心防<br>有的人从未认识困难<br>所以面对成长的高墙时手足无措<br>我们一直很勇敢<br>只是“长大”这道关卡太难闯<br>那些曾握过的手<br>唱过的歌<br>流过的泪<br>爱过的人<br>一起携手走过的时光<br>又何尝不是生命中最值得珍惜<br>最美好的记忆呢？</p>
<p>也许<br>正是有了这么多的相遇与别离<br>正是有了这么多人闯进我们的生命里<br>才会让我们成长之路变得不一样</p>
<p>但无论是与你携手同行的亲人、朋友<br>还是爱人<br>他们都终将离你而去<br>终将会在某个渡口处与你离散</p>
<p>如果此刻的你正身处黑暗中彷徨<br>在生活的暗流中迷失了方向<br>不管过去是如何度过的<br>只要你还对未来还抱有幻想<br>就不要轻易放弃希望</p>
<p>既然无人能懂无人愿帮<br>何不试着给自己勇气<br>前方是黑暗的话就撕开一道口<br>是迷宫就找到一条出路<br>是高墙跨越不了那就绕过它</p>
<p>谁的青春不迷茫？<br>只是自己愿不愿意坚持罢了</p>
<p><br>ikook<br>2017.12.27</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;长大的途中，会遇到各种困难
    
    </summary>
    
      <category term="观文记" scheme="http://ikookblog.com/categories/%E8%A7%82%E6%96%87%E8%AE%B0/"/>
    
    
      <category term="感悟" scheme="http://ikookblog.com/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="观文" scheme="http://ikookblog.com/tags/%E8%A7%82%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>前端基础学习资料来啦 ！！！</title>
    <link href="http://ikookblog.com/2017/12/25/web-data/"/>
    <id>http://ikookblog.com/2017/12/25/web-data/</id>
    <published>2017-12-24T16:00:00.000Z</published>
    <updated>2018-01-05T15:45:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>前些日子逛 CSDN，无意中看到一个博客专栏：讲给 Android 程序员看的前端教程。<a id="more"></a>打开文章认真读了一篇，感觉质量真的很不错，并且每篇文章都有配套的视频教程，简直良心。这个系列的作者是谷哥的小弟，经常逛 CSDN 的朋友应该不陌生，是 CSDN 的博客专家，文章质量都很不错。</p>
<p>看到这么良心并且高质量的教程忍不住去读，索性全都看了一遍，刚好可以回顾一下之前学的知识。文章中所涉及的知识点比较全面，内容整理的非常系统，很有条理。</p>
<p>说实话之所以会把这个系列的教程从头到尾看一遍，是因为之前折腾前端的时候也没有做整理，时间长了不怎么用忘得也差不多了。有这么好的资源当然不能放过，正好可以整理下知识点，也好不时拿出来回顾下。</p>
<p>今天把我整理的这些知识点拿出来分享给大家，希望能帮助到有需要的朋友。整理出来的内容都是出自上面提到的教程，有时间有耐心的朋友不妨直接看教程，地址：<a href="http://t.cn/RHy9s8Y" target="_blank" rel="external">http://t.cn/RHy9s8Y</a>。没时间的朋友可以直接看我整理的内容，下面是部分内容的截图。</p>
<p><strong>1.HTML：</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/HTML5%E6%96%87%E6%A1%A3.jpeg" alt=""></p>
<center>HTML5 整理（文档版）</center>

<p><img src="https://meto.chinakook.com/blog-images/HTML5%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.jpeg" alt=""></p>
<center>HTML5 整理（脑图版）</center>

<p><strong>2.CSS:</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/CSS%E6%96%87%E6%A1%A3%E6%88%AA%E5%9B%BE.jpeg" alt=""></p>
<center>CSS 整理（文档版）</center>

<p><img src="https://meto.chinakook.com/blog-images/CSS%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.jpeg" alt=""></p>
<center>CSS 整理（脑图版）</center>

<p><strong>3.JavaScript：</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/JS%E6%96%87%E6%A1%A3.jpeg" alt=""></p>
<center>JS 整理（文档版）</center>

<p><img src="https://meto.chinakook.com/blog-images/JS%20%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.jpeg" alt=""></p>
<center>JS 整理（脑图版）</center>


<p>完整的内容全都通过「幕布」设置成了分享，链接如下。<br>HTML：<a href="https://mubu.com/doc/QxEVRYTN0" target="_blank" rel="external">https://mubu.com/doc/QxEVRYTN0</a><br>CSS：<a href="https://mubu.com/doc/19Gvm21fz0" target="_blank" rel="external">https://mubu.com/doc/19Gvm21fz0</a><br>JavaScript：<a href="https://mubu.com/doc/3CakGAZol0" target="_blank" rel="external">https://mubu.com/doc/3CakGAZol0</a></p>
<p>最后给大家推荐几本有关学习前端的书籍，这些书籍谷哥的小弟在其系列教程中也有推荐。</p>
<p>《Head First JavaScript》，通过这本书籍可以轻松入门 JavaScript（当然通过我整理的资料一样轻松入门）， Head First 系列的书籍质量不用我多说了吧。</p>
<p>《JavaScript 权威指南》，这本书质量非常高，更值得一提的是，中文版由阿里巴巴前端技术团队翻译，中文版质量也非常有保障。全面讲述了 JavaScript 语言的核心，第 6 版还包含了 HTML5 等知识点，非常值得一读。</p>
<p>《ECMAScript 6 入门》，这本书的作者是阮一峰前辈的作品，并且在其网站免费公开，质量同样非常高。地址：<a href="http://es6.ruanyifeng.com/" target="_blank" rel="external">http://es6.ruanyifeng.com/</a>。</p>
<p>学习资料就推荐这些，书不在多，精才是最重要的，能够啃透上面提到的书籍就很不错了，我也还在啃的过程中。在我的公号后台回复「前端基础」获取文中所有的链接。</p>
<p>PS：如果文章对大家有所帮助，希望大家多多分享。</p>
<p><br>ikook<br>2017.12.25</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前些日子逛 CSDN，无意中看到一个博客专栏：讲给 Android 程序员看的前端教程。
    
    </summary>
    
      <category term="技术栈" scheme="http://ikookblog.com/categories/%E6%8A%80%E6%9C%AF%E6%A0%88/"/>
    
    
      <category term="Web" scheme="http://ikookblog.com/tags/Web/"/>
    
      <category term="前端" scheme="http://ikookblog.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="学习资料" scheme="http://ikookblog.com/tags/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title>成为「自燃型」 的人</title>
    <link href="http://ikookblog.com/2017/12/22/self-ignite/"/>
    <id>http://ikookblog.com/2017/12/22/self-ignite/</id>
    <published>2017-12-21T16:00:00.000Z</published>
    <updated>2018-01-05T15:44:27.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文节选自书籍「干法」；作者：稻盛和夫</p>
</blockquote>
<a id="more"></a>
<p>物质有“可燃型”、“不燃型”和“自燃型”三种。</p>
<p>同样，人也可以分为三种：第一种是点火就着的“可燃型”的人，第二种是点火也烧不起来的“不燃型”的人，第三种是自己就能熊熊燃烧的“<strong>自燃型</strong>” 的人。</p>
<p>想要成就某项事业，就必须成为能够自我燃烧的人。</p>
<p>要成为“自燃型”的人，在热爱自己工作的同时，必须持有明确的目标。</p>
<p>像我这样的经营者整天考虑的就是，公司“应该做这个”、“应该那么干才更好”这样的问题。刚参加工作的年轻人也会在自己心中描绘自己将来的梦想，思考我想做这样的人、我想干怎样的事等问题。</p>
<p>但年轻人中偶尔也有这样的人，他们相信虚无主义，总是表情冷漠，怎么也热乎不起来。不管周围的人干得如何热火朝天，他们不仅不燃烧，还给别人泼冷水，他们是冷若冰霜的人。</p>
<p>遇上这样的人可不好办。</p>
<p>在企业里，在体育团队里，这种“不燃型”的人哪怕只有一位，整个集体的氛围就会变得沉闷压抑。所以我总是这么想：</p>
<p>这种不燃型的人大可不必留在公司。我希望同事们都是自燃型的人，不用“点火”，他们也会自动燃烧。至少，当燃烧的我接近时，他们是能同我一起燃烧的“可燃型”的人。</p>
<p>所谓“自燃型”的人，就是从来不会“等别人吩咐了才去干”、“因为有了命令才工作”的人，而是“在别人吩咐之前自发去干”的主动积极的人，他们应该都是热爱工作的人。</p>
<p><strong>要想将自己的能量最大限度地发挥出来，让工作顺利进行，就必须成为热爱工作的“自燃型”的人。</strong> </p>
<hr>
<p><strong>「干法」作者简介</strong>：稻盛和夫「日本经营之圣」，1932 年出生于日本鹿儿岛，鹿儿岛大学工学部毕业。27 岁创办京都陶瓷株式会社（现名京瓷 Kyocera），52岁创办第二电信（原名 DDI，现名 KDDI，目前在日本为仅次于 NTT 的第二大通讯公司），这两家公司又都在他的有生之年进入世界 500 强，两大事业皆以惊人的力道成长。 稻盛和夫的释义是涵盖了生活态度、哲学、思想、伦理观等因素人格。他建议领导者的选拔标准是德要高于才，人格第一，勇气第二，能力第三。他指出热爱是点燃工作激情的火把。无论什么工作，只要全力以赴去做就能产生很大的成就感和自信心，而且会产生向下一个目标挑战的积极性。成功的人往往都是那些沉醉于所做事的人。</p>
<p>「干法」这本书是稻盛和夫先生以 78 岁高龄出任日航 CEO 之后推出的第一本书，也是稻盛和夫先生首次分享自己在工作上的做法和心得。稻盛先生结合自己 70 余年的切身经历所获得的工作经验，探讨工作真正的意义以及如何在工作中取得成绩，为身在职场的人点燃了指路明灯，同时，这些思想对企业管理者也有借鉴意义。</p>
<p>这些天其实蛮负能量的，学校最近一直也没什么事，在松散的环境里非常容易随波逐流。昨天拿起在 kindle 里躺了许久的这本「干法」重读，又燃起了心中将灭的小火星。我不是一个“自燃型”的人，算是介于“可燃型”和“自燃型”中间的人，在懈怠的环境里我很容易被别人影响，但不会影响很长时间，自己在那种环境中待久了会心慌，会觉得是在亲手扼制自己的生命，然后就会立即鼓足动力去干该干的事情。</p>
<p>我想很多人应该是“可燃型”的人，在遇到外界的鼓励或者压力会燃起斗志。“可燃型”的人需要持续的鼓励或压力，在遇到困难的情况下给予帮助和鼓励，会使其持续燃烧，实现自我的蜕变。</p>
<p><strong>「自燃型」的人会有强烈的责任心和主人翁意识，会迎接挑战，时刻提高自身的素养和技能。他们一般不甘于现状，有强烈的上进心，根本不需要督促，正如书中所说，会自己点燃自己。</strong></p>
<p>我们都需要做一个“自燃型”的人，最次也要是一个“可燃型”的人。要成为「自燃型」的人，需要有热情、有目标。<strong>热情来自于自己内心对工作生活的热爱，目标是对自己将来的期待和规划</strong>。只要我们从一点一滴的小事做起，全心投入，热情就会慢慢在心中诞生，设定目标，然后走下去。「自燃」的原因很重要一部分来自于<strong>热情、热爱</strong>，所以我们要找到自己热爱的事情，或者培养对某件事的热情。</p>
<p>希望我们都能成为「自燃型」的人，Fighting ！！！</p>
<p><br>ikook<br>2017.12.22</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文节选自书籍「干法」；作者：稻盛和夫&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="观文记" scheme="http://ikookblog.com/categories/%E8%A7%82%E6%96%87%E8%AE%B0/"/>
    
    
      <category term="观文" scheme="http://ikookblog.com/tags/%E8%A7%82%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>打造一个「品牌」</title>
    <link href="http://ikookblog.com/2017/12/15/brand/"/>
    <id>http://ikookblog.com/2017/12/15/brand/</id>
    <published>2017-12-14T16:00:00.000Z</published>
    <updated>2018-01-05T15:44:05.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<p>自从开通公众号「ikook」之后也算是用心维护了，基本没有违背当初开号时许下的承诺 —— 认真坚持维护此公号。虽说中间差点放弃，好在坚持过来了，也总算没有辜负自己。</p>
<p>公众号从申请到被 stormzhang 推荐之前，关注人数一直就那么几十个人，之后被推荐关注量迅速破千，虽然不是多么惊人的数字，但对我来说已经是很“重”了，我从来都没想过自己的公众号会被推荐，也没想过能够有这么多人关注，更没有想过有很多读者表示支持和感谢。经过这些事情，我觉得应该更加用心的去做，不然真的有些对不起支持和鼓励我的那些朋友。</p>
<p>经过最近一段时间的考虑，为了能够更好运营和维护，我觉得有必要对这个号做出一些改变。首先，说一下最直观的感受：一个公众号最具有辨识度的应该是头像而不是名称，头像就像是一个人的脸，好比你刚认识了一个陌生人，下次再见面，你一定能记起他的模样，但名字就不一定能够记住了。在这里是同一个道理，别人能记得住公号的头像但不一定能记住公号 ID。</p>
<p>这个号曾经尴尬的被误认为是另一个号，原因就是头像撞了。虽然这个头像我已经用了有几年了，但毕竟是来自网络，撞了的可能性还是比较大的，怪不得别人，所以我决定将公号头像做一下改变。最近几天我一直在各种做图各种找头像，想过不少点子，甚至想把拍一张自己的照片扔上去，后来想想还是算了吧，别回头再吓的大家伙儿都取关就玩现了。最后我决定用「脸萌」结合自己的一些特点做个头像，虽然是自己拼起来的，但也还是有撞的可能性，然后我就用 PS 做了点小改动，又加了一个「ikook」作为标识，最后就有了下面的头像。</p>
<p><center><img src="https://meto.chinakook.com/ikook.jpg" alt="ikook 头像"></center></p>
<p><center>公号 <strong>ikook</strong> 新头像</center><br><br></p>
<p>再者就是公号的定位，「<strong>ikook</strong>」最初的定位是「分享科技、生活、技术、人生、经验感悟等，同时记录个人成长历程」，一段时间之后我回过头看公号的定位，怎么看怎么杂，怎么看怎么乱，写这么多不就是说什么都写吗？然后我就把功能介绍改成了「就想写点东西，随便什么」。这句话虽然是这样写，但不可能想写什么就写什么，随便写打发大家，那是对自己不负责更是对你们的不负责，这话更多是想告诉大家这里是一个较为自由的地方，我本身不想给自己设限，更想随意一点。</p>
<p>我并不想把它做成一个纯技术的号，我想的是：在那里能够有帮助到大家东西（不限于技术），能够给大家带来启发，同时记录下自己的点滴。本着这个原则，结合这几天的思考，我想在公号开设一个小栏目 —— 加油站，这个加油站，可不卖油。这个小栏目会收录一些激励、感悟、思维方式等文章，我希望能够通过这么一种方式为大家带去一点鼓励和改变。这个栏目的文章会通过转载等方式呈现给大家，转载的内容可能会来自其他公众号、书籍等，当然也会有我的原创，但不会很多，毕竟自己还没活明白。同时，欢迎大家投稿，不限于这个「加油」文，技术之类也一样。</p>
<p>不要因为「加油站」以为我以后不写文了，这只是一个小栏目，我依旧照常更新原创文章，原创文会有技术、感悟记录等，绝不会被这个小栏目所干扰，我保证。小栏目更新可能会频繁一些，大多在推送的第二篇图文，推送间隔在 1-2 天，文章标题的格式会是这样的“加油站 | 文章标题”；我的原创文章更新频率不能保证，总之和往常一样，会随意一点。当然，这里也会同步更新的。</p>
<p>今天这些改变算是公众号的起点，是我一个小小梦想的起点。对，正如标题所写的，我想打造一个「个人品牌」，我想将它做成一个品牌，做成一个有意义、有点影响的公众号。微信公众号的标语是：再小的个体，也有自己的品牌。这句话刚好能够表达出我这个小小的梦想。</p>
<p>其实说个人品牌有点片面，我公众号存在的意义在于你们和我，缺一不可，如果没有大家的关注和支持，也就不可能有今天的公众号「ikook」。因此，我希望能够和大家一起维护它，能够一起支撑起这个品牌。所以，如果大家有什么好的想法，比如：想看什么文章；想要它做什么改变；增加什么小栏目；有什么好的意见和建议等，随时都欢迎大家在公众号留言或后台私信，也可以加个人微信私信我。我个人微信可以在公众号回复「ikook」获得，或者点击公号菜单栏<strong>关于</strong>里的「个人微信」添加。</p>
<p>梦在此启航，加油。</p>
<p>PS：这两天内会把公号头像替换掉，就文中那个。到时候不要脸盲哟  :)</p>
<p>PPS：使用微信扫描下方二维码关注哟 ！！！</p>
<p><br>ikook<br>2017.12.15</p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;自从开通公众号「ikook」之后也算是用心维护了，基本没有违背当初开号时许下的承诺 —— 认真坚持维护此公号。虽说中间差点放弃，好在坚持过来了，也总算没有辜负自己。&lt;/p&gt;
&lt;p&gt;公众号从申请到被 stormzhang 推荐之前，关注人数
    
    </summary>
    
      <category term="随笔集" scheme="http://ikookblog.com/categories/%E9%9A%8F%E7%AC%94%E9%9B%86/"/>
    
    
      <category term="公号运营" scheme="http://ikookblog.com/tags/%E5%85%AC%E5%8F%B7%E8%BF%90%E8%90%A5/"/>
    
  </entry>
  
</feed>
