<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ikook Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://ikookblog.com/"/>
  <updated>2018-01-09T10:28:21.000Z</updated>
  <id>http://ikookblog.com/</id>
  
  <author>
    <name>ikook</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>利用谷歌云免费搭建你想要的服务s</title>
    <link href="http://ikookblog.com/2018/01/04/google-cloud/"/>
    <id>http://ikookblog.com/2018/01/04/google-cloud/</id>
    <published>2018-01-03T16:00:00.000Z</published>
    <updated>2018-01-09T10:28:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>由于众所周知的原因，在国内不能够在网络上自由的浏览信息，但是有没有解决方法呢？<a id="more"></a>肯定是没有啊，身处国门之内，要学会遵守规则不要踩踏红线。</p>
<p>明确说明，<strong>这篇文章只是教给大家如何利用谷歌云「学习」搭建一个免费的服务器，学习搭建服务</strong>这个技术。至于利用谷歌云做什么，与本文及本人无关。</p>
<p>要想利用谷歌云搭建服务有两个前提条件：</p>
<ol>
<li>拥有其中一张信用卡：Visa、MasterCard、JCB；</li>
<li>有一个可以临时「自由访问」的网络。</li>
</ol>
<p>这两个条件都是硬性条件，缺一不可。信用卡，可以在某宝淘，临时注册用，也就 20 来块，不易搜索，大家用心寻找应该能找到，需要提醒的是：超过 20 块的不要买，更高价格就更不用说了，完全可以找到 20 以下的，某宝还是有不良商家的；临时「自由访问」网络，这个在“百毒”上可以搜索到，比如那个带颜色的灯，可以免费使用，如果实在找不到，那就再找找。</p>
<p>首先，要拥有一个谷歌账户，只要可以「自由访问」网络便可注册，这里就不赘述了，谷歌全家桶都使用这一个账户登录，谷歌云也不例外。</p>
<p>打开谷歌云：<a href="https://cloud.google.com/" target="_blank" rel="external">https://cloud.google.com/</a>，登录你的谷歌账户然后点击免费试用。</p>
<center><img src="https://meto.chinakook.com/blog-images/0.jpeg" alt=""></center>

<p>然后如下所示：</p>
<center><img src="https://meto.chinakook.com/blog-images/1.jpeg" alt=""></center>

<p>地区请选择<strong>美国</strong>，当然任性选择中国我也没辙，只是有什么问题就自己受着吧。继续之后出现如下信息：</p>
<center><img src="https://meto.chinakook.com/blog-images/2.jpeg" alt=""></center>

<p>账号选择个人，然后填写「名称和地址」，不知道怎么填？我教你。在浏览器打开：<a href="http://t.cn/Rt85282" target="_blank" rel="external">http://t.cn/Rt85282</a>，会随机生成一个美国公民的身份，然后按照提示填写即可。需要注意的是，如果有去广告插件先把该站点加入白名单。随机生成的身份如下：</p>
<center><img src="https://meto.chinakook.com/blog-images/3.jpeg" alt=""></center>

<p>不要填写图中的信息，自己去生成。</p>
<p>然后填写「付款方式」中的「信用卡卡号」，当然是填写淘到的卡号了。如果自己有支持的信用卡的话，直接用就可以了，就是直接填写自己的信用卡卡号，不会扣费，到期之后也不会。谷歌不会这么干，某些公司会，你懂！！！</p>
<center><img src="https://meto.chinakook.com/blog-images/4.png" alt=""></center>

<p>如果你是在某宝上买的虚拟信用卡，「持卡人姓名」填写上面生成的名字即可。如果你是使用自己的信用卡，请填写自己的姓名。</p>
<p>然后点击开始免费试用，再进入「我的控制台」，会创建一个默认项目，项目名称是自己生成的，不用我们管，创建之后如下：</p>
<center><img src="https://meto.chinakook.com/blog-images/05.jpeg" alt=""></center>

<p>点击左上角按钮，然后点击「结算」查看谷歌赠送给的 $300 是否到位了。</p>
<center><img src="https://meto.chinakook.com/blog-images/6.jpeg" alt=""></center>

<p>我的用过了，所以是这样的，刚注册会显示剩余的赠金：$300，剩余天数：365。</p>
<p>然后点击：计算 - Compute Engine - VM 实例 - 创建实例。如下：</p>
<center><img src="https://meto.chinakook.com/blog-images/7.png" alt=""></center>


<center><img src="https://meto.chinakook.com/blog-images/8.png" alt=""></center>

<p>按照下图中标注的信息填写，其他默认即可。</p>
<center><img src="https://meto.chinakook.com/blog-images/9.jpeg" alt=""></center>

<p>正在创建：</p>
<center><img src="https://meto.chinakook.com/blog-images/10.png" alt=""></center>

<p>创建完成：</p>
<center><img src="https://meto.chinakook.com/blog-images/11.png" alt=""></center>

<p>创建完成之后，「外部 IP」就是服务器的地址，我这里不适合给你们看。因为我之前创建过一个实例，所以会显示两个，大家如果第一次，肯定是一个。</p>
<p>然后去测试一下实例的速度如何，当然也可以不测试，基本是没问题的。测试地址：<a href="http://t.cn/Ry2GtDf" target="_blank" rel="external">http://t.cn/Ry2GtDf</a>。下图中框起来的地方，大家选择离自己所在地最近的即可。</p>
<center><img src="https://meto.chinakook.com/blog-images/12.jpeg" alt=""></center>

<p>可见速度杠杠的，只要均在 100 毫秒之内，说明就没问题，如果超出就删除这个实例，重新建一个实例试试。</p>
<p>配置服务器，这一步非常关键，非常关键，非常关键。务必仔细操作。</p>
<p>首先，连接 SSH 服务器，如下所示：</p>
<center><img src="https://meto.chinakook.com/blog-images/13.png" alt=""></center>

<center><img src="https://meto.chinakook.com/blog-images/14.png" alt=""></center>

<p>之后提到的所有关于代码的部分均在类似下图窗口中输入：</p>
<center><img src="https://meto.chinakook.com/blog-images/15.jpeg" alt=""></center>

<p>1.输入：sudo -i（注意，sudo 之后有个空格），回车。</p>
<p>2.输入下列代码（注意，这里的代码为一行，中间切不可有回车）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/FunctionClub/YankeeBBR/master/bbr.sh &amp;&amp; bash bbr.sh install</div></pre></td></tr></table></figure>
<p>输入之后回车。然后耐心等待，直到出现第三步中的窗口。</p>
<p>3.出现如下窗口：</p>
<center><img src="https://meto.chinakook.com/blog-images/16.jpeg" alt=""></center>

<p>按键盘上的 <strong>Tab</strong> 键，选择 <no>，然后会跳回刚才的窗口：</no></p>
<center><img src="https://meto.chinakook.com/blog-images/17.png" alt=""></center>

<p>然后输入 <strong>y</strong>，回车。可以等待重启，或者直接关闭该窗口，重新打开，不记得怎么打开就往上翻。</p>
<p>4.输入：sudo -i（和第一步一样）</p>
<p>5.输入：bash bbr.sh start</p>
<p>6.输入以下代码（注意，代码中间没有回车）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR.sh &amp;&amp; chmod +x shadowsocksR.sh</div></pre></td></tr></table></figure>
<p>7.输入：./shadowsocksR.sh</p>
<p>出现下图所示内容，则证明上面的工作成功。</p>
<center><img src="https://meto.chinakook.com/blog-images/18.png" alt=""></center>

<p>8.设置密码和端口。在上面所示窗口中输入密码，随便，自己记住就可以，回车；然后会提示输入端口，也是随便，只要在 1-65535 之间就行，我设置的是 789。</p>
<p>9.设置完密码和端口，会提示输入编码方式、混淆方式等，这里直接默认就好，一路回车。如下图所示（图中有提示，认真看）：</p>
<center><img src="https://meto.chinakook.com/blog-images/019.png" alt=""></center>

<p>10.在上一步骤回车之后，大约需要等待 5、6 分钟，这个过程是在配置服务器，耐心等待就好，千万不要关闭窗口，更不要关闭浏览器，更更不能关闭电脑，马上就完工，现在放弃就可惜了。</p>
<p>11.出现以下画面，嗯，恭喜，你成功了。当然，先别记着关闭，复制红色部分到你的电脑中，之后会用到的。然后就可以关闭这个 SSH 窗口了。</p>
<center><img src="https://meto.chinakook.com/blog-images/20.png" alt=""></center>

<p>配置防火墙规则，这是最后的设置了。</p>
<p>1.点击边栏中：网络 - VPC 网络 - 防火墙规则。</p>
<center><img src="https://meto.chinakook.com/blog-images/21.png" alt=""></center>

<p>2.设置协议端口：</p>
<center><img src="https://meto.chinakook.com/blog-images/22.jpeg" alt=""></center>

<p>把端口号设置成刚才我们自己规定的端口号，我的是 789。修改时输入：tcp:789; udp:789，注意，分号“；”后面紧跟一个空格。只设置图中圈红的两个，这两个必须设置，不要漏掉，其余默认。</p>
<p>到此，谷歌云搭建完毕。</p>
<p>搭建完就可以在你的设备上使用了，全平台支持，只需要下载对应的客户端。Mac、Windows、Android 的客户端可以在 GitHub 上搜索 shadowsocks 自行查找。iOS 的客户端需要 App Store 登录国外 ID，然后搜索 Shadowrocket 或者 Wingy。这些客户端如何使用自行搜索，我不知道怎么使用，你懂。</p>
<p>这个速度怎么样呢，反正看某 tube 视频网站的 4k 视频毫无压力，能说明速度如何了吗？</p>
<p>今天的文章主要和大家交流<strong>如何搭建服务器，其他任何目的都没有</strong>。那为什么要以谷歌云为例子呢？因为它可以免费使用一年啊。学会这篇文章之后，再搭建类似服务的服务器时，比如在国内的阿里云、腾讯云上搭建；在自己买的国外服务器上搭建，原理是一模一样的，流程基本一样。对了，话说亚马逊也有免费一年的优惠。</p>
<hr>
<p>写这篇文章我是忐忑的，我是不安的，考虑了很长时间才动笔，大约在一个多月之前就开始思考了。虽然只讨论技术，但毕竟有些不妥之处，希望大家珍重。</p>
<p>现在终于写完了，这篇文章从下午 4 点钟开始下笔，一直写到 8 点多钟，期间要通过操作模拟流程，比较麻烦，也比较辛苦，希望大家能够多多支持，能够分享转发一下让更多人学习。留言、转发都是对我的支持。</p>
<p>我也知道这篇文章可能不会存在太久，但也希望能发挥它的作用。</p>
<p><strong>需要再次声明的是，本文只讨论搭建服务这项技术，请不要用作其他任何商业用途，否则后果自负。</strong></p>
<p><br>ikook<br>2018.01.04</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于众所周知的原因，在国内不能够在网络上自由的浏览信息，但是有没有解决方法呢？
    
    </summary>
    
      <category term="技术栈" scheme="http://ikookblog.com/categories/%E6%8A%80%E6%9C%AF%E6%A0%88/"/>
    
    
      <category term="网络" scheme="http://ikookblog.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
      <category term="工具" scheme="http://ikookblog.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="Google" scheme="http://ikookblog.com/tags/Google/"/>
    
      <category term="科学上网" scheme="http://ikookblog.com/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>回顾 2017，展望 2018</title>
    <link href="http://ikookblog.com/2017/12/31/old2017_new2018/"/>
    <id>http://ikookblog.com/2017/12/31/old2017_new2018/</id>
    <published>2017-12-30T16:00:00.000Z</published>
    <updated>2018-01-05T15:47:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>又到年末了，今天是 2017 年的最后一天。<a id="more"></a>去年开始养成了写年终总结的习惯，毕竟过了一年，也该回顾一下，审视一下自己，以便在下一年有更好的发展。</p>
<p>今天提笔之前看了下<a href="http://ikookblog.com/2017/01/07/old2016_new2017/"> 16 年的总结</a>，恩，我过了糟糕的一年，非常糟糕。</p>
<h4 id="回顾-2017"><a href="#回顾-2017" class="headerlink" title="回顾 2017"></a>回顾 2017</h4><p>年初定下的目标完成量非常差劲，尤其是技术方面，没有长进。年初目标：深入学习 Android 开发，学习 Java 后端开发，接触了解 React Native，学习英语。</p>
<p>Android，倒是没有放弃，但还是停留在表层，没有深入学习。其实我自己是非常热爱 Android 的，它是我在编程这条路上入的第一个坑，对它真的是有特殊情感，可以说，没有 Android 也许我可能不会那么主动的去自学编程。当初凑热闹参加比赛，无奈学校还没有开设 Java、Android 课程，只好自己折腾，从此自学之路开始。</p>
<p>虽然国内 Android 开发现状「惨淡」，其实我心里还是很清楚的，「惨淡」只适用于停留在搬砖阶段的开发者，只要技术够硬，难不成还愁找不到工作？</p>
<p>前端技术蓬勃发展，开始走向大前端，也许在不久的将来就没有前端开发工程师和移动开发工程师之分了。Android、iOS 原生开发技术和前端开发技术配合使用，原生技术的使用将会更加广泛。池老师领导开发的 APP「极客时间」就是一个典型的例子。</p>
<p>Java，当初自学 Android 的时候国内基本还没几个人知道 Kotlin，所以首选语言当然是 Java。当初学习 Java 的时候那叫一个激动，感觉这门语言简直太好了，真简单，比那什么 C 语言强多了，从来不关心什么指针，它爱指向谁就指向谁，管它呢。 后来知道了后端开发，自己有 Java 基础，自然也就继续 Java 的坑了。惭愧的是，这一年下来其实真的没怎么学，只学习了 Java web 的基础，做了几个小的练手项目，还是在近两个月。</p>
<p>React Native 直接没搭理；英语坚持了大约有两个月；健身嘛，也没坚持几天。说到这里真是无地自容，实在有点看不起自己。幸亏自己坚持了阅读和写作，不然这一年真是白活，不可原谅了。</p>
<p>今年 7 月份入手了一款 kindle，也看了几本书。阅读这件事在今年算是完成的蛮好的了，算是养成了阅读的习惯。现在每天都会阅读，公众号、知识星球、知乎、微博、书籍等等。阅读的多了，自然会爱上阅读，这件事已经成了我的习惯，我相信自己 18 年以及未来很多年都会把这件事进行下去。</p>
<p>写作这件事完成的也算是可以，我的博客今年一共更新了 36 篇文章，记录了学习的一点技术，还有一些感悟。除 5 月份和 10月份没有更新外，其他月份都有更新，其中更新最为频繁的是 12 月份，也就是这个月。更新频繁的原因是公众号在这个月更新较为频繁。</p>
<p>自从 7 月份开始运营公众号到现在，我成长了很多收获了很多，当然，我也放弃过。维护公众号其实是非常困难的，能够坚持很难，原创更加难。公众号不像博客，博客我想什么时候更新就什么时候更新，没有什么压力，但是公众号就不一样了，这里有信任我的读者的期待，他们在无形之中督促着我，我不得不保持一定的更新频率。</p>
<p>说来惭愧，我自己其实没什么才能，有时候真的想不出该写些什么，也许正是因为这个主要因素导致我中间停更将近 3 个月的时间。后来因为一个读者私信我，才让我又重新回到这里，具体原因见：<a href="http://mp.weixin.qq.com/s?__biz=MzU5MjE1NTEzNg==&amp;mid=2247483783&amp;idx=1&amp;sn=590a128c0f1f1a9feab956f54082107a&amp;chksm=fe2546e8c952cffe26cf635a2a7142ca666d6f24e274635df05be944d4c0a31e261fabe28b2a&amp;scene=21#wechat_redirect" target="_blank" rel="external">这逝去的日子</a>。</p>
<p>之后公众号被推荐，关注的多了，自然给了我非常大的鼓励和自信。读者的私信，公号的推荐等等，这些让我重新审视自己，我有什么理由放弃，别人还没有放弃，难不成还要自己先放弃？当然不能。后来我重新做了公号的头像，重新做了公号的定位，争取<a href="http://mp.weixin.qq.com/s?__biz=MzU5MjE1NTEzNg==&amp;mid=2247483848&amp;idx=1&amp;sn=822ea41c4ba9db01d07cedcad7602124&amp;chksm=fe2546a7c952cfb1371737554332bdd2f02020fd6b0ae41d528f96d29b4f7c9d22cba77e849d&amp;scene=21#wechat_redirect" target="_blank" rel="external">打造一个「品牌」</a>。</p>
<h4 id="展望-2018"><a href="#展望-2018" class="headerlink" title="展望 2018"></a>展望 2018</h4><p>18 年，我想将会是我人生关键的一个转折点，即将毕业，面临择业。这一年也许比较折腾，但希望自己能有所把握，但愿不会超出自己的预期，当然，也希望不要达不到自己的期望。</p>
<p>做以下几个方面的计划吧。</p>
<p><strong>1.工作</strong></p>
<p>即将毕业，找工作自然是第一位。选择很重要，往往很容易就改变一生的轨迹，希望我在工作上能有一个好的选择，一个能够让自己满意的选择。</p>
<p>18 年找份工作，不妥协。</p>
<p><strong>2.技术</strong></p>
<p>在 2018 年，我将会利用业余时间深入学习 Android 开发，没准哪天就去做「大前端」开发了呢。</p>
<p>其实觉得自己蛮适合后端开发的，有时候页面写多了总觉得没什么意思，还是“纯写代码”来的爽快。在 18 年主攻 Java 后端开发技术，学习主流开发框架。对，我想找一份 Java 开发的工作。自然学好 Java 非常重要，把握好 3 月份前的时间很关键。</p>
<p>学习 Python。人工智能时代第一编程语言，更何况它能做的事非常多，能在后端开发一展拳脚，没事还能写个爬虫，深度学习、数据分析等领域更是火热，自然要学习一下。当然，不能耽搁主线。</p>
<p>可能会上线一个开源项目，具体还没构思好，但有了方向。希望能够做到，很是期待。</p>
<p>18 年提高技术，坚持下去，不妥协。</p>
<p><strong>3.写作</strong></p>
<p>坚持写作，提高写作能力。博客持续更新，大多会和公众号同步更新。公众号目前已经慢慢走上正轨，我心里也基本有了方向，18 年公众号会更好。</p>
<p>18 年要写作，坚持下去，不妥协。</p>
<p><strong>4.生活</strong></p>
<p>健身真的很有必要坚持下去。今年是我自小到现在感冒最多的一年，大概有 5、6 次了吧，明显超出了正常范围，唯一可以说明的就是身体免疫能力下降了很多。以前喜欢运动，经常跑步，自然身体素质还可以。近两年变得很宅，有时间就宅起来。18 年要坚持健身，多跑跑步，有了好身体才有革命的本钱。</p>
<p>改变自己怯场的毛病，自信很重要。也许是宅久了，面对陌生人很容易产生恐惧，自信心不足。今年在学校两次被安排给同学讲课，两次讲的都非常差，怯场、说不出话等毛病出现，还因为紧张导致驾照科三考试挂科。要克服恐惧心理，锻炼演讲能力。</p>
<p>希望自己能有机会多出去旅行，今年 11 月份出去旅行了一趟，感觉很好。能够多去一些地方看看，开阔自己的眼界，蛮不错的。</p>
<p>还有，希望能够多陪陪家人、女友，能多结交一些朋友。</p>
<p>18 年要运动要自信，坚持下去，不妥协。</p>
<hr>
<p>这一年过的稀里糊涂，是自己最迷茫的一年，在技术方面没有大的提升，在生活方面也是没有什么改变。过去的就让它过去，教训留在心里。18 年不要迷茫，要找到好的工作，要做好计划中的事情，要提升自己生活质量，要改变自己，不妥协。</p>
<p>我把今年我的公众号所有原创文章做了一下汇总，地址：<a href="https://mp.weixin.qq.com/s?__biz=MzU5MjE1NTEzNg==&amp;mid=2247483920&amp;idx=2&amp;sn=1bb12c4dbe810f3470fab754aa44a525&amp;chksm=fe25457fc952cc69ff25c960cae39335db9ed6d66d4602d5ef767ab82c038fefe3cb973b52b3&amp;scene=38#wechat_redirect" target="_blank" rel="external">2017 公号原创文章汇总</a>，方便大家查看。</p>
<p>最后，祝大家元旦快乐，新的一年大家都能够有所成长。加油，我们一起努力。</p>
<p><br>ikook<br>2017.12.31</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;又到年末了，今天是 2017 年的最后一天。
    
    </summary>
    
      <category term="随笔集" scheme="http://ikookblog.com/categories/%E9%9A%8F%E7%AC%94%E9%9B%86/"/>
    
    
      <category term="生活" scheme="http://ikookblog.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="年终总结" scheme="http://ikookblog.com/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>有故事的微信小游戏「跳一跳」</title>
    <link href="http://ikookblog.com/2017/12/29/wechat-tiaoyitiao/"/>
    <id>http://ikookblog.com/2017/12/29/wechat-tiaoyitiao/</id>
    <published>2017-12-28T16:00:00.000Z</published>
    <updated>2018-01-05T15:47:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>昨天微信官方公布了几条关于小程序的重要消息，并且微信 APP 在同一天进行了更新。<a id="more"></a>小程序的功能升级主要包含以下几个部分：</p>
<ol>
<li>新增任务栏功能 </li>
<li>小程序菜单升级，并支持小程序间快捷切换</li>
<li>微信小游戏正式上线</li>
</ol>
<p>具体见微信官方公号发表的文章：<a href="http://mp.weixin.qq.com/s?__biz=MjM5NDAwMTA2MA==&amp;mid=2695730045&amp;idx=1&amp;sn=c93080476258430accd5a08924c4a1db&amp;chksm=83d74ab6b4a0c3a05163dcf8fc306dab562071fd170f3087f40fdcddec5e61bde57ac9f9e886&amp;scene=21#wechat_redirect" target="_blank" rel="external">小程序功能升级</a></p>
<p>更新到最新版微信就可以去体验以上的功能了。安装更新之后，其中最惹人瞩目的莫过于小游戏「跳一跳」，打开即可看到以下界面。</p>
<p><img src="https://meto.chinakook.com/blog-images/WechatIMG4.jpeg" alt=""></p>
<p>立即开始游戏体验一下，真的蛮不错的，因为是第一次进入游戏就光顾着体验游戏的玩法了，没有太在意一些细节，玩了两把之后就退出了。然后在接下来的一段时间里，朋友圈、微信群等等都在晒战绩，讨论小游戏「跳一跳」，还真是火的够快的。晚上躺在被窝里又认真体验了一下这款游戏，发现这游戏远没有想象的那么「简单」，然后立马上网查了下，果然。</p>
<p>这款小游戏其实讲述了一些的故事，游戏里包含了许多童年陪伴我们成长的事物。</p>
<p>游戏中跳跃的角色是一个英文字母“ i ”，我的觉得应该是“我”的意思，代表着游戏者、游戏的主人公，也就是你。</p>
<p><img src="https://meto.chinakook.com/blog-images/WechatIMG5.jpeg" alt=""></p>
<p>游戏中被「我们」踩的小物体，也就是使我们跳跃的介质，其实包含了许多有内涵的元素。</p>
<p><strong>魔方：</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/WechatIMG6.jpeg" alt=""></p>
<p>相信我们小时候都玩过魔方吧，甚至现在我还经常拿出来拧两把。</p>
<p><strong>井盖：</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/WechatIMG7.jpeg" alt=""></p>
<p>小时候走在路上的时候，总是不由自主地踩各种井盖玩。</p>
<p><strong>卷纸：</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/WechatIMG8.jpeg" alt=""></p>
<p>这个可就了不得了，青春时期的我们免不了使用卷纸吧？不管男生、女生。尤其是男生，都懂得吧？😏</p>
<p><strong>闹钟：</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/WechatIMG9.jpeg" alt=""></p>
<p>长大以后就再也离不开闹钟了。高中为了早起上自习要定闹钟；大学还好，不用早起，但还是会有自律的同学利用闹钟来督促自己，早起学习；工作之后就更加离不开了。</p>
<p><strong>便利店：</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/WechatIMG10.jpeg" alt=""></p>
<p>长大后，为了节省时间，便利店也许是我们经常光顾的地方了。</p>
<p><strong>快递包裹：</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/WechatIMG11.jpeg" alt=""></p>
<p>嗯，剁手快乐。</p>
<p>当然还有微信的故事。</p>
<p><strong>微信红包：</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/WechatIMG13.jpeg" alt=""></p>
<p>在微信群里抢红包，错过了一分好像错过了一个亿。</p>
<p><strong>用户过亿：</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/WechatIMG12.jpeg" alt=""></p>
<p>记录了微信推出 433 天注册用户过亿的辉煌历史。</p>
<p>游戏中还有很多有趣的「小事物」，这里就不一一介绍了，强烈建议大家去体验一番，真的蛮不错的。</p>
<p>不知道大家有没有看出这个小游戏的「深意」：现代社会，我们「关注」的东西越来越多，而我们「关心」的事情却越来越少，就像最开始进入更新后的微信，小游戏界面说的那样：玩一个小游戏才是正经事。我们应该停下来，放松下来，玩一个小游戏。</p>
<p>最后给大家安利一下小游戏「跳一跳」的高分秘籍：</p>
<ol>
<li>连续跳中心点，可以+2、+4、+6、+8分…..</li>
<li>跳到音乐盒上听一会儿，会播放音乐，并且加30分;</li>
<li>跳到便利店停一会儿，便利店会开门，而且额外加15分;</li>
<li>跳到魔方停留一会儿，魔方会旋转修正，并且加10分;</li>
<li>跳到井盖停留一会儿，会有冲水的声音，并且加5分。</li>
</ol>
<p>大家 Get 到了没有，快去刷新你的记录。这个高分秘籍并不是我发现的，是通过我一个微信群群主分享得知的，希望大家玩的愉快。如果玩的愉快了，分享下文章也是不错的，非常感谢 🙂</p>
<p><br>ikook<br>2017.12.29</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;昨天微信官方公布了几条关于小程序的重要消息，并且微信 APP 在同一天进行了更新。
    
    </summary>
    
      <category term="软件说" scheme="http://ikookblog.com/categories/%E8%BD%AF%E4%BB%B6%E8%AF%B4/"/>
    
    
      <category term="工具" scheme="http://ikookblog.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="WeChat" scheme="http://ikookblog.com/tags/WeChat/"/>
    
      <category term="游戏" scheme="http://ikookblog.com/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>人生苦短，何不学 Python</title>
    <link href="http://ikookblog.com/2017/12/28/python-data/"/>
    <id>http://ikookblog.com/2017/12/28/python-data/</id>
    <published>2017-12-27T16:00:00.000Z</published>
    <updated>2018-01-05T15:46:12.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文转载自公众号「红猴子」</p>
</blockquote>
<a id="more"></a>
<p>人生苦短， 我用 Python。</p>
<p>不知道从什么时候开始，这句话开始流行。不过也从侧面反映出 Python 语言的特点：简单、高效。</p>
<p>其实近期我研究了不少代表技术趋势的业界报告以及编程语言排行榜，对于我来说，编程语言这一块，最值得学习的就是 Python。</p>
<p>简单说下其中的原因。</p>
<p>一是随着 AI 浪潮，Python 这门语言也变得越来越热门，无论是国外还是国内的编程语言排行榜，Python 都是排在前面的，并且我相信随着时间的推移，它会越来越热，排名还会继续上升。毫无疑问，Python 已经成为 AI 以及大数据时代的第一开发语言。</p>
<p>二是 Python 语言语法简单，你用 C/C++ 或者 Java 写的几千行才能实现的程序，用 Python 可能只要几百行，甚至还不用这么多。在这个科技快速发展的时代，效率代表了一切。</p>
<p>三是 Python 应用范围广，拥有着各种各样强大的扩展库，无论是 web, 爬虫还是数据分析，Python 都可以完成，所以对应的需求 Python  的工作岗位也很多，学会 Python 可以轻松的找到工作。</p>
<p>四是近期浙江省把 Python 纳入高考，连山东省六年级小学生都开始学 Python 了，作为程序员，不会 Python，会不会被现在的小孩子鄙视，细思极恐。</p>
<p>所以，还有理由不学 Python 呢？！</p>
<p>坦白的讲，从上学直至后来的工作，我一直接触的都是底层开发，并没有系统的学习和用过 Python。不过作为一名程序员，我对技术还是挺敏感的，我认为无论你是不是从事相关的工作，都要适当学习一下现在比较热门的技术，千万不要落后太多，也千万不要被眼前的那么一点工作禁锢住自己的思维，这样可以让自己时刻保持竞争力。</p>
<p>从很久之前的 Android，到后来的微信小程序，到如今的 Python，机器学习，刚出来的时候，我都会找来资料或者书籍研究一番，写写代码，不求一定要非常精通，至少跟别人交流的时候，你要知道这是什么吧，大致的原理要能说的清楚吧。</p>
<p>当然，我并不是说让所有人都去追逐新技术，什么流行学什么。什么是主业什么是副业，你自己也要掂量地清，该花多少时间在上面也要自己把握。我的意思是，工作或者学习之余，学些热门技术，可以让自己保持敏锐度和竞争力，因为说不好什么时候这些热门技术就成了你的饭碗。甚至在一些氛围宽松的公司，是鼓励你去利用这些新技术对现有的工作做出创新的。</p>
<p>我就认识不少在一个比较狭窄的领域工作了很多年，因为不会别的，也没时间学别的，只能一条道走到黑的人。即使工资低，也不敢轻易跳槽，因为很难找到这方面的工作。再加上工作也忙，挤不出时间学习新技术，这就很被动了。殊不知自己还在十几年如一日的用着「陈旧」的技术，外面早就变天了。</p>
<p><strong>回到 Python 上，谈谈怎么学习，说下我的一些观点。</strong></p>
<p><strong>1.</strong><br>我认真找了一下，发现网络上关于 Python 的学习资料很多，各种书籍、教程、文档、视频、工具…非常非常之多。所以你不用发愁找不到学习资料。</p>
<p><strong>2.</strong><br>找到了巨多的学习资料，却不知道从哪里入手？其实这也是我不会把「 Python 学习」众多的网络资源分享给你们的原因，因为太多了，而且重复率很高，完全没必要。你需要的是，找到一至两个比较权威的教程，好好学下去，系统的认真学完，这就够了。</p>
<p><strong>3.</strong><br>如果你执意让我推荐的话，那么就 Python 官网，廖雪峰的官网，如果再加一本书的话，那就《A Byte of Python》好了。没错，这些网上都能轻易搜到，而且免费。</p>
<p><strong>4.</strong><br>如果这是你的第一门编程语言，建议你把教程一字一句的认真读完。如果你有其他编程语言的基础，那么可以像我一样快速浏览一下教程，接着在看代码的过程中，把教程当作工具书去参考。</p>
<p><strong>5.</strong><br>对于有编程基础的同学，可以去网上找来别人的 py 程序，一边试着理解，一边有不懂的就去查阅文档或者教程。这样比单纯的从变量语法开始啃教程进展更迅速。</p>
<p><strong>6.</strong><br>跟学习其他所有编程语言一样，想掌握一门语言，重点在于写。只看不写，跟不会没什么区别。一个项目写下来，Python 的知识点就掌握的七七八八了。</p>
<p>关于如何学习 Python，暂时就讲这么多，以后有机会的话，我会分享更多这方面的姿势，如果想到更好的方法，我也会补充。</p>
<p>人生苦短，何不学 Python？</p>
<p><br>ikook<br>2017.12.28</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文转载自公众号「红猴子」&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术栈" scheme="http://ikookblog.com/categories/%E6%8A%80%E6%9C%AF%E6%A0%88/"/>
    
    
      <category term="Python" scheme="http://ikookblog.com/tags/Python/"/>
    
      <category term="转载" scheme="http://ikookblog.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>请为迷失的自己照亮希望的方向</title>
    <link href="http://ikookblog.com/2017/12/27/view-text-03/"/>
    <id>http://ikookblog.com/2017/12/27/view-text-03/</id>
    <published>2017-12-26T16:00:00.000Z</published>
    <updated>2018-01-05T15:45:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>长大的途中，会遇到各种困难 <a id="more"></a><br>可能是思念的距离<br>是职场竞争的压力<br>是初入社会的现实<br>是生存之道的艰辛<br>是情感失利的感伤<br>…</p>
<p>我觉得每个人的人生都不一样<br>有的人从小就很坚强<br>但长大时困苦击溃了最后的心防<br>有的人从未认识困难<br>所以面对成长的高墙时手足无措<br>我们一直很勇敢<br>只是“长大”这道关卡太难闯<br>那些曾握过的手<br>唱过的歌<br>流过的泪<br>爱过的人<br>一起携手走过的时光<br>又何尝不是生命中最值得珍惜<br>最美好的记忆呢？</p>
<p>也许<br>正是有了这么多的相遇与别离<br>正是有了这么多人闯进我们的生命里<br>才会让我们成长之路变得不一样</p>
<p>但无论是与你携手同行的亲人、朋友<br>还是爱人<br>他们都终将离你而去<br>终将会在某个渡口处与你离散</p>
<p>如果此刻的你正身处黑暗中彷徨<br>在生活的暗流中迷失了方向<br>不管过去是如何度过的<br>只要你还对未来还抱有幻想<br>就不要轻易放弃希望</p>
<p>既然无人能懂无人愿帮<br>何不试着给自己勇气<br>前方是黑暗的话就撕开一道口<br>是迷宫就找到一条出路<br>是高墙跨越不了那就绕过它</p>
<p>谁的青春不迷茫？<br>只是自己愿不愿意坚持罢了</p>
<p><br>ikook<br>2017.12.27</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;长大的途中，会遇到各种困难
    
    </summary>
    
      <category term="观文记" scheme="http://ikookblog.com/categories/%E8%A7%82%E6%96%87%E8%AE%B0/"/>
    
    
      <category term="感悟" scheme="http://ikookblog.com/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="观文" scheme="http://ikookblog.com/tags/%E8%A7%82%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>前端基础学习资料来啦 ！！！</title>
    <link href="http://ikookblog.com/2017/12/25/web-data/"/>
    <id>http://ikookblog.com/2017/12/25/web-data/</id>
    <published>2017-12-24T16:00:00.000Z</published>
    <updated>2018-01-05T15:45:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>前些日子逛 CSDN，无意中看到一个博客专栏：讲给 Android 程序员看的前端教程。<a id="more"></a>打开文章认真读了一篇，感觉质量真的很不错，并且每篇文章都有配套的视频教程，简直良心。这个系列的作者是谷哥的小弟，经常逛 CSDN 的朋友应该不陌生，是 CSDN 的博客专家，文章质量都很不错。</p>
<p>看到这么良心并且高质量的教程忍不住去读，索性全都看了一遍，刚好可以回顾一下之前学的知识。文章中所涉及的知识点比较全面，内容整理的非常系统，很有条理。</p>
<p>说实话之所以会把这个系列的教程从头到尾看一遍，是因为之前折腾前端的时候也没有做整理，时间长了不怎么用忘得也差不多了。有这么好的资源当然不能放过，正好可以整理下知识点，也好不时拿出来回顾下。</p>
<p>今天把我整理的这些知识点拿出来分享给大家，希望能帮助到有需要的朋友。整理出来的内容都是出自上面提到的教程，有时间有耐心的朋友不妨直接看教程，地址：<a href="http://t.cn/RHy9s8Y" target="_blank" rel="external">http://t.cn/RHy9s8Y</a>。没时间的朋友可以直接看我整理的内容，下面是部分内容的截图。</p>
<p><strong>1.HTML：</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/HTML5%E6%96%87%E6%A1%A3.jpeg" alt=""></p>
<center>HTML5 整理（文档版）</center>

<p><img src="https://meto.chinakook.com/blog-images/HTML5%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.jpeg" alt=""></p>
<center>HTML5 整理（脑图版）</center>

<p><strong>2.CSS:</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/CSS%E6%96%87%E6%A1%A3%E6%88%AA%E5%9B%BE.jpeg" alt=""></p>
<center>CSS 整理（文档版）</center>

<p><img src="https://meto.chinakook.com/blog-images/CSS%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.jpeg" alt=""></p>
<center>CSS 整理（脑图版）</center>

<p><strong>3.JavaScript：</strong></p>
<p><img src="https://meto.chinakook.com/blog-images/JS%E6%96%87%E6%A1%A3.jpeg" alt=""></p>
<center>JS 整理（文档版）</center>

<p><img src="https://meto.chinakook.com/blog-images/JS%20%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.jpeg" alt=""></p>
<center>JS 整理（脑图版）</center>


<p>完整的内容全都通过「幕布」设置成了分享，链接如下。<br>HTML：<a href="https://mubu.com/doc/QxEVRYTN0" target="_blank" rel="external">https://mubu.com/doc/QxEVRYTN0</a><br>CSS：<a href="https://mubu.com/doc/19Gvm21fz0" target="_blank" rel="external">https://mubu.com/doc/19Gvm21fz0</a><br>JavaScript：<a href="https://mubu.com/doc/3CakGAZol0" target="_blank" rel="external">https://mubu.com/doc/3CakGAZol0</a></p>
<p>最后给大家推荐几本有关学习前端的书籍，这些书籍谷哥的小弟在其系列教程中也有推荐。</p>
<p>《Head First JavaScript》，通过这本书籍可以轻松入门 JavaScript（当然通过我整理的资料一样轻松入门）， Head First 系列的书籍质量不用我多说了吧。</p>
<p>《JavaScript 权威指南》，这本书质量非常高，更值得一提的是，中文版由阿里巴巴前端技术团队翻译，中文版质量也非常有保障。全面讲述了 JavaScript 语言的核心，第 6 版还包含了 HTML5 等知识点，非常值得一读。</p>
<p>《ECMAScript 6 入门》，这本书的作者是阮一峰前辈的作品，并且在其网站免费公开，质量同样非常高。地址：<a href="http://es6.ruanyifeng.com/" target="_blank" rel="external">http://es6.ruanyifeng.com/</a>。</p>
<p>学习资料就推荐这些，书不在多，精才是最重要的，能够啃透上面提到的书籍就很不错了，我也还在啃的过程中。在我的公号后台回复「前端基础」获取文中所有的链接。</p>
<p>PS：如果文章对大家有所帮助，希望大家多多分享。</p>
<p><br>ikook<br>2017.12.25</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前些日子逛 CSDN，无意中看到一个博客专栏：讲给 Android 程序员看的前端教程。
    
    </summary>
    
      <category term="技术栈" scheme="http://ikookblog.com/categories/%E6%8A%80%E6%9C%AF%E6%A0%88/"/>
    
    
      <category term="Web" scheme="http://ikookblog.com/tags/Web/"/>
    
      <category term="前端" scheme="http://ikookblog.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="学习资料" scheme="http://ikookblog.com/tags/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title>成为「自燃型」 的人</title>
    <link href="http://ikookblog.com/2017/12/22/self-ignite/"/>
    <id>http://ikookblog.com/2017/12/22/self-ignite/</id>
    <published>2017-12-21T16:00:00.000Z</published>
    <updated>2018-01-05T15:44:27.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文节选自书籍「干法」；作者：稻盛和夫</p>
</blockquote>
<a id="more"></a>
<p>物质有“可燃型”、“不燃型”和“自燃型”三种。</p>
<p>同样，人也可以分为三种：第一种是点火就着的“可燃型”的人，第二种是点火也烧不起来的“不燃型”的人，第三种是自己就能熊熊燃烧的“<strong>自燃型</strong>” 的人。</p>
<p>想要成就某项事业，就必须成为能够自我燃烧的人。</p>
<p>要成为“自燃型”的人，在热爱自己工作的同时，必须持有明确的目标。</p>
<p>像我这样的经营者整天考虑的就是，公司“应该做这个”、“应该那么干才更好”这样的问题。刚参加工作的年轻人也会在自己心中描绘自己将来的梦想，思考我想做这样的人、我想干怎样的事等问题。</p>
<p>但年轻人中偶尔也有这样的人，他们相信虚无主义，总是表情冷漠，怎么也热乎不起来。不管周围的人干得如何热火朝天，他们不仅不燃烧，还给别人泼冷水，他们是冷若冰霜的人。</p>
<p>遇上这样的人可不好办。</p>
<p>在企业里，在体育团队里，这种“不燃型”的人哪怕只有一位，整个集体的氛围就会变得沉闷压抑。所以我总是这么想：</p>
<p>这种不燃型的人大可不必留在公司。我希望同事们都是自燃型的人，不用“点火”，他们也会自动燃烧。至少，当燃烧的我接近时，他们是能同我一起燃烧的“可燃型”的人。</p>
<p>所谓“自燃型”的人，就是从来不会“等别人吩咐了才去干”、“因为有了命令才工作”的人，而是“在别人吩咐之前自发去干”的主动积极的人，他们应该都是热爱工作的人。</p>
<p><strong>要想将自己的能量最大限度地发挥出来，让工作顺利进行，就必须成为热爱工作的“自燃型”的人。</strong> </p>
<hr>
<p><strong>「干法」作者简介</strong>：稻盛和夫「日本经营之圣」，1932 年出生于日本鹿儿岛，鹿儿岛大学工学部毕业。27 岁创办京都陶瓷株式会社（现名京瓷 Kyocera），52岁创办第二电信（原名 DDI，现名 KDDI，目前在日本为仅次于 NTT 的第二大通讯公司），这两家公司又都在他的有生之年进入世界 500 强，两大事业皆以惊人的力道成长。 稻盛和夫的释义是涵盖了生活态度、哲学、思想、伦理观等因素人格。他建议领导者的选拔标准是德要高于才，人格第一，勇气第二，能力第三。他指出热爱是点燃工作激情的火把。无论什么工作，只要全力以赴去做就能产生很大的成就感和自信心，而且会产生向下一个目标挑战的积极性。成功的人往往都是那些沉醉于所做事的人。</p>
<p>「干法」这本书是稻盛和夫先生以 78 岁高龄出任日航 CEO 之后推出的第一本书，也是稻盛和夫先生首次分享自己在工作上的做法和心得。稻盛先生结合自己 70 余年的切身经历所获得的工作经验，探讨工作真正的意义以及如何在工作中取得成绩，为身在职场的人点燃了指路明灯，同时，这些思想对企业管理者也有借鉴意义。</p>
<p>这些天其实蛮负能量的，学校最近一直也没什么事，在松散的环境里非常容易随波逐流。昨天拿起在 kindle 里躺了许久的这本「干法」重读，又燃起了心中将灭的小火星。我不是一个“自燃型”的人，算是介于“可燃型”和“自燃型”中间的人，在懈怠的环境里我很容易被别人影响，但不会影响很长时间，自己在那种环境中待久了会心慌，会觉得是在亲手扼制自己的生命，然后就会立即鼓足动力去干该干的事情。</p>
<p>我想很多人应该是“可燃型”的人，在遇到外界的鼓励或者压力会燃起斗志。“可燃型”的人需要持续的鼓励或压力，在遇到困难的情况下给予帮助和鼓励，会使其持续燃烧，实现自我的蜕变。</p>
<p><strong>「自燃型」的人会有强烈的责任心和主人翁意识，会迎接挑战，时刻提高自身的素养和技能。他们一般不甘于现状，有强烈的上进心，根本不需要督促，正如书中所说，会自己点燃自己。</strong></p>
<p>我们都需要做一个“自燃型”的人，最次也要是一个“可燃型”的人。要成为「自燃型」的人，需要有热情、有目标。<strong>热情来自于自己内心对工作生活的热爱，目标是对自己将来的期待和规划</strong>。只要我们从一点一滴的小事做起，全心投入，热情就会慢慢在心中诞生，设定目标，然后走下去。「自燃」的原因很重要一部分来自于<strong>热情、热爱</strong>，所以我们要找到自己热爱的事情，或者培养对某件事的热情。</p>
<p>希望我们都能成为「自燃型」的人，Fighting ！！！</p>
<p><br>ikook<br>2017.12.22</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文节选自书籍「干法」；作者：稻盛和夫&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="观文记" scheme="http://ikookblog.com/categories/%E8%A7%82%E6%96%87%E8%AE%B0/"/>
    
    
      <category term="观文" scheme="http://ikookblog.com/tags/%E8%A7%82%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>打造一个「品牌」</title>
    <link href="http://ikookblog.com/2017/12/15/brand/"/>
    <id>http://ikookblog.com/2017/12/15/brand/</id>
    <published>2017-12-14T16:00:00.000Z</published>
    <updated>2018-01-05T15:44:05.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<p>自从开通公众号「ikook」之后也算是用心维护了，基本没有违背当初开号时许下的承诺 —— 认真坚持维护此公号。虽说中间差点放弃，好在坚持过来了，也总算没有辜负自己。</p>
<p>公众号从申请到被 stormzhang 推荐之前，关注人数一直就那么几十个人，之后被推荐关注量迅速破千，虽然不是多么惊人的数字，但对我来说已经是很“重”了，我从来都没想过自己的公众号会被推荐，也没想过能够有这么多人关注，更没有想过有很多读者表示支持和感谢。经过这些事情，我觉得应该更加用心的去做，不然真的有些对不起支持和鼓励我的那些朋友。</p>
<p>经过最近一段时间的考虑，为了能够更好运营和维护，我觉得有必要对这个号做出一些改变。首先，说一下最直观的感受：一个公众号最具有辨识度的应该是头像而不是名称，头像就像是一个人的脸，好比你刚认识了一个陌生人，下次再见面，你一定能记起他的模样，但名字就不一定能够记住了。在这里是同一个道理，别人能记得住公号的头像但不一定能记住公号 ID。</p>
<p>这个号曾经尴尬的被误认为是另一个号，原因就是头像撞了。虽然这个头像我已经用了有几年了，但毕竟是来自网络，撞了的可能性还是比较大的，怪不得别人，所以我决定将公号头像做一下改变。最近几天我一直在各种做图各种找头像，想过不少点子，甚至想把拍一张自己的照片扔上去，后来想想还是算了吧，别回头再吓的大家伙儿都取关就玩现了。最后我决定用「脸萌」结合自己的一些特点做个头像，虽然是自己拼起来的，但也还是有撞的可能性，然后我就用 PS 做了点小改动，又加了一个「ikook」作为标识，最后就有了下面的头像。</p>
<p><center><img src="https://meto.chinakook.com/ikook.jpg" alt="ikook 头像"></center></p>
<p><center>公号 <strong>ikook</strong> 新头像</center><br><br></p>
<p>再者就是公号的定位，「<strong>ikook</strong>」最初的定位是「分享科技、生活、技术、人生、经验感悟等，同时记录个人成长历程」，一段时间之后我回过头看公号的定位，怎么看怎么杂，怎么看怎么乱，写这么多不就是说什么都写吗？然后我就把功能介绍改成了「就想写点东西，随便什么」。这句话虽然是这样写，但不可能想写什么就写什么，随便写打发大家，那是对自己不负责更是对你们的不负责，这话更多是想告诉大家这里是一个较为自由的地方，我本身不想给自己设限，更想随意一点。</p>
<p>我并不想把它做成一个纯技术的号，我想的是：在那里能够有帮助到大家东西（不限于技术），能够给大家带来启发，同时记录下自己的点滴。本着这个原则，结合这几天的思考，我想在公号开设一个小栏目 —— 加油站，这个加油站，可不卖油。这个小栏目会收录一些激励、感悟、思维方式等文章，我希望能够通过这么一种方式为大家带去一点鼓励和改变。这个栏目的文章会通过转载等方式呈现给大家，转载的内容可能会来自其他公众号、书籍等，当然也会有我的原创，但不会很多，毕竟自己还没活明白。同时，欢迎大家投稿，不限于这个「加油」文，技术之类也一样。</p>
<p>不要因为「加油站」以为我以后不写文了，这只是一个小栏目，我依旧照常更新原创文章，原创文会有技术、感悟记录等，绝不会被这个小栏目所干扰，我保证。小栏目更新可能会频繁一些，大多在推送的第二篇图文，推送间隔在 1-2 天，文章标题的格式会是这样的“加油站 | 文章标题”；我的原创文章更新频率不能保证，总之和往常一样，会随意一点。当然，这里也会同步更新的。</p>
<p>今天这些改变算是公众号的起点，是我一个小小梦想的起点。对，正如标题所写的，我想打造一个「个人品牌」，我想将它做成一个品牌，做成一个有意义、有点影响的公众号。微信公众号的标语是：再小的个体，也有自己的品牌。这句话刚好能够表达出我这个小小的梦想。</p>
<p>其实说个人品牌有点片面，我公众号存在的意义在于你们和我，缺一不可，如果没有大家的关注和支持，也就不可能有今天的公众号「ikook」。因此，我希望能够和大家一起维护它，能够一起支撑起这个品牌。所以，如果大家有什么好的想法，比如：想看什么文章；想要它做什么改变；增加什么小栏目；有什么好的意见和建议等，随时都欢迎大家在公众号留言或后台私信，也可以加个人微信私信我。我个人微信可以在公众号回复「ikook」获得，或者点击公号菜单栏<strong>关于</strong>里的「个人微信」添加。</p>
<p>梦在此启航，加油。</p>
<p>PS：这两天内会把公号头像替换掉，就文中那个。到时候不要脸盲哟  :)</p>
<p>PPS：使用微信扫描下方二维码关注哟 ！！！</p>
<p><br>ikook<br>2017.12.15</p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;自从开通公众号「ikook」之后也算是用心维护了，基本没有违背当初开号时许下的承诺 —— 认真坚持维护此公号。虽说中间差点放弃，好在坚持过来了，也总算没有辜负自己。&lt;/p&gt;
&lt;p&gt;公众号从申请到被 stormzhang 推荐之前，关注人数
    
    </summary>
    
      <category term="随笔集" scheme="http://ikookblog.com/categories/%E9%9A%8F%E7%AC%94%E9%9B%86/"/>
    
    
      <category term="公号运营" scheme="http://ikookblog.com/tags/%E5%85%AC%E5%8F%B7%E8%BF%90%E8%90%A5/"/>
    
  </entry>
  
  <entry>
    <title>Java 学习资源送给你们</title>
    <link href="http://ikookblog.com/2017/12/09/java-res/"/>
    <id>http://ikookblog.com/2017/12/09/java-res/</id>
    <published>2017-12-08T16:00:00.000Z</published>
    <updated>2018-01-05T15:43:32.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<p>前几天的文章：<a href="http://ikookblog.com/2017/12/05/back-end_dev/">后端开发基础都有哪些？</a>给大家简单介绍了下 JavaWeb 开发需要掌握的基础知识，文章中所涉及的都是必备知识。虽然给大家介绍了要学习什么知识，但还是会有同学不知怎么开始学习。</p>
<p>既然是这样，那我就负责到底（还不是给自己挖了坑，哈哈）。今天给大家分享下 Java 整套的学习资源，包括：视频、书籍（电子书）、编程工具。初学者学习编程的正确方式是：视频 + 书籍。</p>
<p>书籍比较系统，由浅入深，但是如果只看书籍容易造成抵抗心理，技术类书籍比较枯燥，想要认真看完一本技术类书籍非常困难，尤其是初学者，更何况一旦遇到知识难点，初学者只看书会很难看懂；有人会说了，那只看视频不就完了，就技术类视频来说：视频所讲解的内容会比较浅显，有时候一些小的知识点会一句话带过，而且由于视频本身限制更不会去讲解知识点的原理是什么，再者，视频不如书籍系统。所以视频 + 书籍结合一起学习对初学者最友好。</p>
<p>好了，废话不多说，上干货。</p>
<h3 id="视频："><a href="#视频：" class="headerlink" title="视频："></a>视频：</h3><h5 id="Java-基础："><a href="#Java-基础：" class="headerlink" title="Java 基础："></a>Java 基础：</h5><p><img src="https://meto.chinakook.com/blog-images/Java%E5%9F%BA%E7%A1%80.jpeg" alt="Java 基础视频"></p>
<p>这些都是业内评价较高的 Java 基础入门视频，前 4 个视频就是围绕 Java SE 来讲，而最后一个主要讲解 Android 学习中要用到的一些 Java 基础，区别不大。毕向东老师的视频评价是非常高的，非常多的人是通过这个视频入门的，唯一不好的就是有点老了，现在 Java 都到 9 了，有些特性没有涉及到。第四个是比较新的视频，涉及到了 Lamda 表达式等一些 Java 8 的新特性。</p>
<p>获取地址：<a href="https://pan.baidu.com/s/1jIkrYj8" target="_blank" rel="external">https://pan.baidu.com/s/1jIkrYj8</a>；密码：h8su</p>
<h5 id="Java-Web："><a href="#Java-Web：" class="headerlink" title="Java Web："></a>Java Web：</h5><p><img src="https://meto.chinakook.com/blog-images/JavaWeb.jpeg" alt="JavaWeb 视频"></p>
<h5 id="Java-EE："><a href="#Java-EE：" class="headerlink" title="Java EE："></a>Java EE：</h5><p><img src="https://meto.chinakook.com/blog-images/JavaEE.jpeg" alt="JavaEE 视频"></p>
<p>Java Web、Java EE 的视频均来自某培训机构公开的视频教程，我看过其中一些 Java Web 的，还算不错。</p>
<p>Java Web 获取地址：<a href="https://pan.baidu.com/s/1eS4cWCy" target="_blank" rel="external">https://pan.baidu.com/s/1eS4cWCy</a>; 密码：ypx2</p>
<p>Java EE 获取地址：<a href="https://pan.baidu.com/s/1i5J5QN7" target="_blank" rel="external">https://pan.baidu.com/s/1i5J5QN7</a>; 密码：7op4</p>
<h3 id="书籍："><a href="#书籍：" class="headerlink" title="书籍："></a>书籍：</h3><p><img src="https://meto.chinakook.com/blog-images/Java%E4%B9%A6%E7%B1%8D.jpeg" alt="Java 书籍"></p>
<p>以上差不多均为 Java 基础书籍，入门我推荐「Head First Java」，这本书能够让你轻松入门 Java，不过其中一些知识点没有讲解到。「Java 核心技术（上、下两卷）」这本书涉及知识非常全面，基本涵盖了 Java SE 所有的知识点，看起来有点困难，有些枯燥，不过还好，用心看，结合视频，坚持看完会有很大收货。</p>
<p>Java Web 书籍我推荐传智播客推出的「Java Web 程序开发入门」和「Java  Web 程序开发进阶」两本书，基本涉及 Java Web 所有基础知识点，并且内容比较容易看懂，结合上面的视频掌握 Java Web 基础知识不成问题。</p>
<p>关于 Java EE 的书籍我暂时无法推荐给大家，毕竟我也才开始踩坑，所以就暂时不给大家推荐了。不过需要的同学可以上网查一下，或是问一下身边的前辈，基本能够找到好的书籍。</p>
<p>获取地址：<a href="https://pan.baidu.com/s/1c1GHZDe" target="_blank" rel="external">https://pan.baidu.com/s/1c1GHZDe</a>  密码：7e28</p>
<h3 id="工具："><a href="#工具：" class="headerlink" title="工具："></a>工具：</h3><p>编程工具我就不给大家分享链接了，毕竟大家的系统不一定和我的一致，并且大都可以在网上下载，那就直接和你们说几个比较常用的 Java 编程工具吧。</p>
<p>eclipse，它是老牌 Java 编程工具，也是曾经 Java 开发 IDE 中的霸主。其自身就是由 Java 开发，插件丰富，曾经是 Java 开发必选的 IDE。</p>
<p>IntelliJ IDEA（简称 IDEA），它是由著名的 Jet Brains 团队开发的 IDE，Kotlin 就是由这个团队开发，非常牛。目前这个 IDE 非常火， 代码审查、代码自动提示、智能代码助手、重构、J2EE 支持、颜值高等等优点，更何况背后有这么屌的团队。IDEA 在业界被公认为最好用的 Java 开发工具，已经有越来越多的人使用它。它是 Java IDE 的未来。 对了，它的完整版需要购买注册码，并且价格不低，有条件的不妨直接购买，没条件的同学看这里：<a href="http://idea.lanyus.com/" target="_blank" rel="external">http://idea.lanyus.com/</a></p>
<p>其他较为著名的 Java IDE 还有：Netbeans、Jbuilder。目前使用者比较少，有兴趣可以了解下。</p>
<hr>
<p>好了，关于 Java 的资料就先分享到这里。我自己的学习资料比较丰富，涉及面也算广泛。比如今天就该分享的 MySQL、Oracle 等数据库相关学习资料等等，其他的还有不少。之所以没有分享是想要看一下大家对这篇文章的反映，如果大家反映较好，之后我会慢慢把其他资料分享给大家。</p>
<p>最后有个请求，我希望大家能够多多分享一下文章，毕竟我整理的这些资料都是经过用心寻找和花费大量时间整理出来的，这些分享出来的都是我精心挑选的，没有营养没有价值的我都剔除了。所以大家多多转发分享、点赞，也算是对我的支持了，不胜感激。</p>
<p>PS：文中所有链接均可在我的公众号会话窗口回复「Java」获取（扫下方二维码关注）。</p>
<p><br>ikook<br>2017.12.09</p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;前几天的文章：&lt;a href=&quot;http://ikookblog.com/2017/12/05/back-end_dev/&quot;&gt;后端开发基础都有哪些？&lt;/a&gt;给大家简单介绍了下 JavaWeb 开发需要掌握的基础知识，文章中所涉及的都是必备
    
    </summary>
    
      <category term="技术栈" scheme="http://ikookblog.com/categories/%E6%8A%80%E6%9C%AF%E6%A0%88/"/>
    
    
      <category term="Java" scheme="http://ikookblog.com/tags/Java/"/>
    
      <category term="后端开发" scheme="http://ikookblog.com/tags/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习技巧" scheme="http://ikookblog.com/tags/%E5%AD%A6%E4%B9%A0%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>后端开发基础都有哪些？</title>
    <link href="http://ikookblog.com/2017/12/05/back-end_dev/"/>
    <id>http://ikookblog.com/2017/12/05/back-end_dev/</id>
    <published>2017-12-04T16:00:00.000Z</published>
    <updated>2018-01-05T15:42:30.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<p>由于近来国内移动开发现状所致，应该有不少移动开发者在考虑转别的方向，个人感觉后端开发是个不错的选择。当然，人工智能、大数据异常火爆，有能力的同学不妨试一试。</p>
<p>正好最近一段时间在学习 Java web，基础知识基本过了一篇，在这里回顾一下，刚好可以帮助想要转后端朋友熟悉下流程。</p>
<p>后端开发一般是指 web 系统开发，想要学习后端开发，首先要有 HTML、CSS、JavaScript 基础。web 页面简单来说就是由这三者组成，HTML 负责结构、CSS 负责展现、JavaScript 负责行为。一般 web 页面是由前端工程师来做，我们要学习后端首先要有前端基础，不要求能够开发出多么漂亮的页面，能够掌握基础就 ok。</p>
<p>过完前端基础知识之后就可以开始学习后端开发了，要掌握的基础知识有：XML、HTTP 协议、Servlet、会话（Cookie、Session）、JSP、JDBC、Filter ，还有自定义标签、各类标签库等，下面分别给大家介绍下其中一些关键技术。</p>
<h3 id="XML："><a href="#XML：" class="headerlink" title="XML："></a>XML：</h3><p>看到 XML 有人会问：它和 HTML 有什么关系吗？首先，它们都是标记文本，结构上大致相同，但实际上有本质的区别。</p>
<p>HTML 是 HyperText Markup Language，超文本标记语言，用来显示数据，不区分大小写，标记为预定义的；而 XML 是 Extensible Markup Language，可扩展标记语言，用来描述数据的性质和结构，严格区分大小写和标签书写方式，其标记可随意定义并且可扩展。</p>
<p>其次，XML 可用作配置文件，目前绝大多数 Java 应用程序的配置文件都是 XML。所以，XML 主要用于程序之间的数据交换，以及描述程序的配置信息。</p>
<h3 id="HTTP-协议："><a href="#HTTP-协议：" class="headerlink" title="HTTP 协议："></a>HTTP 协议：</h3><p>HTTP，Hyper Text Transfer Protocol 的缩写，译为超文本传输协议。在浏览器与服务器的交互过程中，需要遵循一定的规则，这个规则就是 HTTP，它专门用于定义浏览器与服务器之间交换数据的过程以及数据本身的格式。</p>
<p>说白了，HTTP 就是浏览器和服务器聊天的一种约定，这个约定需要确保双方之间互相理解。HTTP 协议是一种“无状态”协议，就是说每次浏览器和服务器通讯都会建立一次连接，数据交互完成则断开连接，下次通讯只能再建立连接，由于建立连接非常消耗资源，所以引出了 HTTP 1.1 版本，具体我们下次再谈。</p>
<p>HTTP 协议是非常复杂的，不过最重要的就几点，比如 GET、POST 请求；HTTP 状态码；同步、异步；如何维持状态（会话技术：Cookie、Session）。</p>
<h3 id="Servlet："><a href="#Servlet：" class="headerlink" title="Servlet："></a>Servlet：</h3><p>Servlet 是开发动态 web 资源的重要技术，其他常见的还有：JSP、ASP 和 PHP 等，同时 Serlvet 是后端开发的重要基础技术。其主要功能在于交互式地浏览和修改数据，生成动态 web 内容。</p>
<p>绝大多数情况下 Servlet 用来扩展基于 HTTP 协议的 web 服务器，但它是可以响应任何类型请求的。其工作模式为：浏览器请求服务器；服务器启动并调用 Servlet，Servlet 根据客户端的请求生成响应内容；服务器将响应内容返回客户端。</p>
<p>需要重点掌握的是：Servlet 生命周期、HttpServlet「doGet() 和 doPost() 方法」、请求和响应。</p>
<h3 id="JSP："><a href="#JSP：" class="headerlink" title="JSP："></a>JSP：</h3><p>JSP 全称为 Java Server Page，即 Java 服务器页面。它其实是 Servlet 的扩展，由于 Servlet 大多是用来响应 HTTP 请求，并返回 web 页面，所以在编写 Servlet 时会涉及大量的 HTML 代码，这给 Servlet 代码的编写和维护带来非常大的障碍，为了解决这一问题，就此产生了 JSP。</p>
<p>它的作用是使用 HTML 的编写方式，在适当的地方嵌入 Java 代码，同时，JSP 增加称为「JSP 动作」的 XML 标签，用来调用内建功能。</p>
<p>JSP 在首次被访问是会被服务器转成 Servlet，以后 web 容器则直接调用这个 Servlet，而不再访问 JSP 页面，所以 JSP 实质上还是 Servlet。需要重点掌握的是 JSP 标签库。</p>
<h3 id="JDBC："><a href="#JDBC：" class="headerlink" title="JDBC："></a>JDBC：</h3><p>说 JDBC 之前要先谈谈数据库，因为 JDBC 操作的就是数据库，所以我们要先学会写 SQL 语句。</p>
<p>数据库在后端开发中是不可或缺的一部分，也是开发中最重要的一部分，我们日常使用的所有软件都是由数据支撑，操作的也都是数据，没有数据我们的软件将都不可使用，我们的生活将黯淡无光，可见数据库的重要性，推荐学习 MySQL，原因以后再谈。</p>
<p>JDBC 全称是 Java Database Connectivity ，即 Java 数据库连接，它是一套用与执行 SQL 语句的 Java API，Java 应用程序通过使用 JDBC 来连接到关系型数据库，并使用 SQL 语句来完成对数据库中数据的操作，包括查询、更新、删除等。主要掌握 JDBC 中的 Connection，Statement，Resultset 三个基础。</p>
<hr>
<p>好了，由于篇幅较长就主要介绍这几个关键的技术。还有一些基础像：Filter「过滤器」、文件的上传和下载、EL 表达式、自定义标签等都非常重要，建议大家自行查阅。在以后的文章中会具体讲解这些技术，这篇就算是一个目录吧。</p>
<p>当然，这些技术只是后端开发的基础，也是学习后端必备的知识，只有掌握了基础知识，才能有去学习像 SSH、SSM 等框架的资格。</p>
<p><br>ikook<br>2017.12.05</p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;由于近来国内移动开发现状所致，应该有不少移动开发者在考虑转别的方向，个人感觉后端开发是个不错的选择。当然，人工智能、大数据异常火爆，有能力的同学不妨试一试。&lt;/p&gt;
&lt;p&gt;正好最近一段时间在学习 Java web，基础知识基本过了一篇，在
    
    </summary>
    
      <category term="技术栈" scheme="http://ikookblog.com/categories/%E6%8A%80%E6%9C%AF%E6%A0%88/"/>
    
    
      <category term="Java" scheme="http://ikookblog.com/tags/Java/"/>
    
      <category term="后端开发" scheme="http://ikookblog.com/tags/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>坚持总会有回报</title>
    <link href="http://ikookblog.com/2017/12/02/persistence/"/>
    <id>http://ikookblog.com/2017/12/02/persistence/</id>
    <published>2017-12-01T16:00:00.000Z</published>
    <updated>2018-01-05T15:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<p>今天公众号来了不少的新朋友，热烈欢迎他们的到来。他们的到来让公众号蓬荜生辉，就像公号的欢迎语一样，愿我们在此相遇、从此为伴，一起成长。</p>
<p>stormzhang 突然的公号推荐，令我很是震惊，同样也很是兴奋、高兴。由于他本人影响力较大，公号读者也非常多，导致我公号的关注量飞涨。说实话，我的公众号从来没有刻意去推广过，要说推广，就只在小密圈分享了几次，所以关注量非常小，也就几十个人吧，没 100 人，真的。之所以没去推广，是因为公众号最初的定位是记录自己的成长，分享自己的经验。</p>
<p>可能是因为公号最初的定位原因，导致我坚持下去的动力不是很大，以至于中间还停更了一段时间。读者的鼓励，让我回到这里继续分享；前几天，拿到原创又给了我很大的鼓励和动力；今天 stormzhang 的推荐，再次给了我非常大的鼓励，把我的信心推向了最高点，我更加坚定了自己的脚步，一定会坚持分享下去。</p>
<p>之前写博客非常随意，想写的时候就写，不想写就扔那儿，太过随性。公众号则不一样，它直接与读者相关联，各种数据非常明显，较为「正统」，每发一篇文章，总会反复去看阅读量等数据。读者的直接约束，加之对公号期望的约束，致使我刻意的去坚持，坚持隔几天一篇文章，坚持输出。</p>
<p>我个人对公众号充满了期望，我希望大家在这里能有所收获和成长，也希望自己有所收获和成长。能够看到自己分享的东西对大家有所帮助，我想这应该是对我最大的鼓励了，同时也就不辜负这个号的存在了。</p>
<p>就像 stormzhang 所说，用心做事的人，运气不会太差。能够用心去做事，是非常可贵的，我觉得只要肯用心肯下功夫，基本是没什么事做不成的，就算没做成，期间的收获也会使你收益匪浅。现在有了你们的到来，有了你们的支持，我会更加用心，会更容易坚持下去。</p>
<p>最后，感谢 stormzhang 的推荐，感谢大家的支持，希望我们能够共同成长。对了，公众号有一项数据是我非常不愿看到的，就是取关量，有不足之处希望大家指出，取关多伤感情。</p>
<p>微信扫下方二维码关注</p>
<p><br>ikook<br>2017.12.02</p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;今天公众号来了不少的新朋友，热烈欢迎他们的到来。他们的到来让公众号蓬荜生辉，就像公号的欢迎语一样，愿我们在此相遇、从此为伴，一起成长。&lt;/p&gt;
&lt;p&gt;stormzhang 突然的公号推荐，令我很是震惊，同样也很是兴奋、高兴。由于他本人影响
    
    </summary>
    
      <category term="随笔集" scheme="http://ikookblog.com/categories/%E9%9A%8F%E7%AC%94%E9%9B%86/"/>
    
    
      <category term="感悟" scheme="http://ikookblog.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>原创</title>
    <link href="http://ikookblog.com/2017/11/28/original/"/>
    <id>http://ikookblog.com/2017/11/28/original/</id>
    <published>2017-11-27T16:00:00.000Z</published>
    <updated>2018-01-05T15:41:52.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<p>不知从何下笔，有点抑制不住喜悦之情，真的是发自内心的高兴。我拿到微信公众号的「原创」了。</p>
<p>先说下「原创」，官方对它是这样介绍的：为鼓励优质内容在微信公众平台产生，维护作者权益，微信公众平台给文章原创作者进行声明的机会并对原创内容进行标识。</p>
<p>原创特指自己写的、独立完成创作的作品。歪曲、篡改他人创作或者抄袭、剽窃他人创作而产生的作品，改编、翻译、注释、整理他人已有创作而产生的作品均不能说是原创。</p>
<p>在这个号之前我还维护过两个。一个拿来当做实验品，玩了几天就扔那儿再也没理会过，另一个我想认真维护，但没坚持下去。自从开通了这个，我下决心维护下去，也一直在期盼着能够早一天拿到「原创」。今天晚饭过后，拿起手机看到“微信公众平台”发来的原创邀请，那一刻，真的非常开心，喜出望外，真的没有预料到。</p>
<p><img src="https://meto.chinakook.com/blog-images/%E5%8E%9F%E5%88%9B-2017.11.28.jpg" alt=""></p>
<p>因为之前停更过一段时间，现在想想如果没有那位读者，真的要与「原创」擦肩而过了，这里再次表示感谢。再想想，要是没有停更应该会早一些拿到，但结果总算是美好的。</p>
<p>我为什么非常想要拿到原创呢？</p>
<p>一、原创功能是对每一个公众号原创作者的一种尊重和版权的保护，现在互联网发达，很多人都开始写博客，抄袭者涌现，不尊重别人的劳动成果，这个功能一定程度上能够抑制这种现象，虽然抑制力不大。</p>
<p>二、能够给予原创作者一定的动力和信心。我相信每一个写公号的朋友都想拿到「原创」标识，这会鼓励自己更好的坚持下去。</p>
<p>三、直接和读者交流。在开通原创的同时，也会一并邀请开通留言功能。留言功能可以让读者直接对文章的内容进行讨论、反馈、达到交流和互动的效果。</p>
<p>只有作者与读者进行互动，才能产生思想的交流。无论是一本书还是一篇文章，其目的就是要向读者传达一种信息，可以是知识、经验等等，读者其目的就是要在文章或者书中获取这些资讯（知识、经验、新闻等），只有读者和作者达成了共鸣，这篇文章的使命才算完成。</p>
<p>同时，读者可以做出反馈，以便作者可以更好的写作和成长。所以，我认为留言是非常重要的一个功能。</p>
<p>今天拿到原创，真的给了我很大的自信心和动力。同时，也非常感谢大家一直以来的陪伴和鼓励。今后我会更努力的去做这件事，会更加用心的去分享。不忘初心，方得始终。</p>
<p>欢迎大家去我的公众号留言（扫下方二维码关注）。</p>
<p><br>ikook<br>2017.11.28</p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;不知从何下笔，有点抑制不住喜悦之情，真的是发自内心的高兴。我拿到微信公众号的「原创」了。&lt;/p&gt;
&lt;p&gt;先说下「原创」，官方对它是这样介绍的：为鼓励优质内容在微信公众平台产生，维护作者权益，微信公众平台给文章原创作者进行声明的机会并对原创
    
    </summary>
    
      <category term="随笔集" scheme="http://ikookblog.com/categories/%E9%9A%8F%E7%AC%94%E9%9B%86/"/>
    
    
      <category term="感悟" scheme="http://ikookblog.com/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="公号运营" scheme="http://ikookblog.com/tags/%E5%85%AC%E5%8F%B7%E8%BF%90%E8%90%A5/"/>
    
  </entry>
  
  <entry>
    <title>古城风韵</title>
    <link href="http://ikookblog.com/2017/11/25/qingzhou/"/>
    <id>http://ikookblog.com/2017/11/25/qingzhou/</id>
    <published>2017-11-24T16:00:00.000Z</published>
    <updated>2018-01-05T15:40:53.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<p>前几天，为了缓解心中的焦虑，决定出去走一走。之前就听闻「青州」是个好地方，正好前些日子同学考试被安排在青州，归来之时，难以抑制喜悦之情（注意，并不是考试考得好，逃…）。我便决定去这个地方看看。</p>
<p>到达时，已是傍晚，按照早已安排好的行程直接去了「青州古城」。在古城外附近安排好的宾馆，放置好行李，稍微休息了下，便走进了古城。</p>
<h3 id="1-古城夜景"><a href="#1-古城夜景" class="headerlink" title="1. 古城夜景"></a>1. 古城夜景</h3><p><img src="https://meto.chinakook.com/blog-images/%E9%98%9C%E8%B4%A2%E9%97%A8%E5%9F%8E%E6%A5%BC%E5%90%8E1.jpeg" alt=""></p>
<p>进入古城，并没有太多的感触，更多的感受是映入眼帘的古建筑，在璀璨灯光的照耀下，金光闪闪，很是美丽。</p>
<p>由于没有吃晚饭，在这古城的第一件事当然是吃。古城内，街边小吃不少，我作为少数民族里不算少数的回族人，自然是找「清真」食物。没想到的是，城内回族不少，那晚饭自然好解决了。</p>
<p>在街边买了清真小吃，边吃边走。街道很长，一路走过去，都是古建筑，在现代文明的“帮助”下，没有了古时该有的样子，灯光太夺目，剥夺了古城内该有气息。</p>
<h3 id="2-古城风韵"><a href="#2-古城风韵" class="headerlink" title="2. 古城风韵"></a>2. 古城风韵</h3><p>清晨的青州还没在睡梦中苏醒，没有喧闹声，没有来往的车鸣声，一切都是那么的安静。如果有充足的时间，我真想在阳台上静坐一上午。</p>
<p><img src="https://meto.chinakook.com/blog-images/%E5%8F%A4%E8%A1%97%E9%81%93.jpg" alt=""></p>
<p>进入清晨的古城，青石路在脚下伸展，极少的车辆在高低不平的青石上有节奏地起伏，缓缓开去。我随着青石路走去，仿佛一切都变得慢了下来，行人走得很慢，路旁的大树带着几分深沉。在这一刻我仿佛抓住了时光，融入在这古城之中，把人引入了一种宁静，这份宁静来自心灵深处，你会不自觉的轻言轻语，生怕惊扰了什么。</p>
<p>也许是在现代化喧闹的生活环境中待久了，很是向往这种生活，街坊邻里之间，相处融洽，没有勾心斗角，以诚相待。在这里，每一个置身其中的人，都能切身感到舒适和幸福。在路边走累了，你可以青石凳上、古槐下或者在别人家台阶上休息一下，无论走到哪里，坐到哪里，你会觉得这个地方是生动的，能够感受到这里是欢迎你的，是可以被你占有的， 你可以清楚感受到自己的存在。</p>
<p>往古城深处走去，路上行人来来往往，路旁小商贩卖着特色的古城小吃及物品，看似忙碌，却又闲适。古槐下坐着几个白发老人，手持木杖，欢声笑语。十里古街，眼到之处无不其乐融融。这也许就是生活吧。</p>
<p><img src="https://meto.chinakook.com/blog-images/UNADJUSTEDNONRAW_thumb_43.jpg" alt=""></p>
<h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><p>大禹治水，天下九分 —— 为九州，华夏九州，青州便是其一。素有“东方第一州”美誉的古城青州，其丰厚且辉煌的历史文化令人叹为观止。据考察，早在七千多年前，就有人类在此生息，是“东夷文化”的发源地。可见人文资源积淀之深厚。</p>
<p>古城内有 120 多处景点，主要有：阜财门、魁星楼、名人牌坊（柱国坊、大学士坊、尚书里坊、太子少保坊等十余座）、东门街、偶园、蓝溪谷等；古城历史人物：王曾、赵秉忠、李清照、欧阳修、范仲淹、冯溥等。</p>
<p>对青州历史有兴趣可以上网了解下，有条件当然要亲自去看看。我相信去过一定不会后悔，也相信会有所收获。</p>
<p>本想着给大家介绍下古城内具体景点的，后来想想还是算了，就算我说的再好也不如自己去体验一番。何况我在那里收获地更多的是古城本身带给我的感受、感触，而不是景色。景过情留。</p>
<p>最后放几张照片，拍照技术很差，别打我。</p>
<p><img src="https://meto.chinakook.com/blog-images/UNADJUSTEDNONRAW_thumb_2.jpg" alt=""></p>
<p><img src="https://meto.chinakook.com/blog-images/UNADJUSTEDNONRAW_thumb_45.jpg" alt=""></p>
<p><img src="https://meto.chinakook.com/blog-images/UNADJUSTEDNONRAW_thumb_49.jpg" alt=""></p>
<p><img src="https://meto.chinakook.com/blog-images/UNADJUSTEDNONRAW_thumb_39.jpg" alt=""></p>
<p><img src="https://meto.chinakook.com/blog-images/UNADJUSTEDNONRAW_thumb_7d.jpg" alt=""></p>
<p><br>ikook<br>2017.11.25</p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;前几天，为了缓解心中的焦虑，决定出去走一走。之前就听闻「青州」是个好地方，正好前些日子同学考试被安排在青州，归来之时，难以抑制喜悦之情（注意，并不是考试考得好，逃…）。我便决定去这个地方看看。&lt;/p&gt;
&lt;p&gt;到达时，已是傍晚，按照早已安排
    
    </summary>
    
      <category term="随笔集" scheme="http://ikookblog.com/categories/%E9%9A%8F%E7%AC%94%E9%9B%86/"/>
    
    
      <category term="感悟" scheme="http://ikookblog.com/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="旅游" scheme="http://ikookblog.com/tags/%E6%97%85%E6%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>这逝去的日子</title>
    <link href="http://ikookblog.com/2017/11/22/passing-day/"/>
    <id>http://ikookblog.com/2017/11/22/passing-day/</id>
    <published>2017-11-21T16:00:00.000Z</published>
    <updated>2018-01-05T15:40:04.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<p>自从 9 月份参加学校实训之后，莫名停更(公众号、博客)，实训一月之后，瞎忙，回想起来好像什么都没干。</p>
<p>今天闲暇之余不知怎么突然想看看公号后台，就通过小程序「公众平台助手」看了一下，没有用户取关，我想也许是这个号太不被人注意了吧。但，令人惊奇的是，一位读者在 11 月 18 号后台给我发了一条消息，内容是「没有推送了呢」</p>
<p>收到这条消息，心情复杂，不知如何是好，感到很羞愧。今年 7 月 27 日我下定决心要好好维护这个号并持续输出，记录一点一滴。回去看了那天发的文<a href="https://mp.weixin.qq.com/s?__biz=MzU5MjE1NTEzNg==&amp;mid=2247483662&amp;idx=1&amp;sn=16ed169f988e66ca553dd103ddd11562&amp;chksm=fe254661c952cf7722e111278b6f6972c1bde3b3e71653020b7ac5eb03f2eb467e5791445666&amp;scene=38#wechat_redirect" target="_blank" rel="external">「这次，我认真了」</a>，更加觉得自己简直无可救药。对自己一次又一次的放纵，一次又一次的懈怠，是对自己不负责，更是对读者不负责任。想想这两个月真的是很忙吗？回想起来，真的是没有。实训期间，时间也许略微有些紧迫，但根本不足以成为自己懈怠的理由。</p>
<p>在忙时如果因为时间问题松懈，就在空闲时放纵自己，那就有很大可能性，在不忙时迷失自己，就会陷入之前的舒适圈，不能自拔。当然在适当的时刻放松自己肯定是要有的，但不要过于放松，容易变成放纵。人是一种贪玩的动物，对玩，对享乐，会上瘾。</p>
<p>在这段逝去的时光里，我仿佛又一次迷失了自己，不知方向。感谢这位素未谋面的读者，是她为我敲响警钟，敲醒快要睡着的我，非常感谢。虽说这个号没几个读者，无论有多少的关注者，我作为这个号的维护者就应该负起责任，对读者对自己双方负责。就算只剩一人，责任一样重大。</p>
<p>希望大家以我为鉴，时不时给自己提个醒，勿忘初心。</p>
<p><br>ikook<br>2017.11.22</p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;自从 9 月份参加学校实训之后，莫名停更(公众号、博客)，实训一月之后，瞎忙，回想起来好像什么都没干。&lt;/p&gt;
&lt;p&gt;今天闲暇之余不知怎么突然想看看公号后台，就通过小程序「公众平台助手」看了一下，没有用户取关，我想也许是这个号太不被人注意
    
    </summary>
    
      <category term="随笔集" scheme="http://ikookblog.com/categories/%E9%9A%8F%E7%AC%94%E9%9B%86/"/>
    
    
      <category term="感悟" scheme="http://ikookblog.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>Alfred 每次开机运行提示「访问通讯录」问题</title>
    <link href="http://ikookblog.com/2017/11/06/alfred/"/>
    <id>http://ikookblog.com/2017/11/06/alfred/</id>
    <published>2017-11-05T16:00:00.000Z</published>
    <updated>2018-01-05T15:39:35.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>在忍受了许久「alfred 破解版」开机询问是否访问通讯录问题之后，终于忍不住了。</p>
</blockquote>
<a id="more"></a>
<p>自从用上「MacOS」之后就各种玩软件。用了软件，好用的东西很多，当然被我卸载的也很多。其中，Alfred 是我不会卸载的软件之一。</p>
<p>由于，学生一枚（隐喻，穷屌丝），没办法只能用破解版，就像我「MacOS」一样，是黑的 —— 黑苹果。因为是破解版，随之而来的就有一些烦人的问题，Alfred 也一样，它每次开机的时候，都会提示是否允许访问通讯录。</p>
<p><img src="https://meto.chinakook.com/blog-images/alfred1.png" alt=""></p>
<p>这个问题我忍受了很久，大约有将近一个月吧，我去，我绑不住了，搞他。其实很简单。</p>
<p>在终端输入一下命令，解决。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo codesign -f -d -s - /Applications/Alfred\ 3.app/Contents/Frameworks/Alfred\ Framework.framework/Versions/A/Alfred\ Framework</div></pre></td></tr></table></figure>
<p>想要下载「Alfred 破解版」扫描下方二维码关注公众号，后台回复：<strong>Alfred</strong> 即可获取。</p>
<p><br>ikook<br>2017.11.06</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在忍受了许久「alfred 破解版」开机询问是否访问通讯录问题之后，终于忍不住了。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="软件说" scheme="http://ikookblog.com/categories/%E8%BD%AF%E4%BB%B6%E8%AF%B4/"/>
    
    
      <category term="工具" scheme="http://ikookblog.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="Alfred" scheme="http://ikookblog.com/tags/Alfred/"/>
    
  </entry>
  
  <entry>
    <title>无扩展，不 Chrome</title>
    <link href="http://ikookblog.com/2017/09/01/chrome-extended/"/>
    <id>http://ikookblog.com/2017/09/01/chrome-extended/</id>
    <published>2017-08-31T16:00:00.000Z</published>
    <updated>2018-01-05T15:39:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>大家好啊，最近开学在折腾学校实训的事，比较忙，耽搁了更新，抱歉。为了表达歉意，给大家来点「刺激的」。</p>
<a id="more"></a>
<p>为大家推荐一些我常用的 Chrome 扩展，相信 Chrome 大家并不陌生吧，一款优雅的超好用的浏览器。由于某些东西的存在，下载安装稍微有点限制。关注公众号「ikook」后台回复「Chrome」可获取各个离线版本 Chrome。</p>
<p>好了，正文开始。想要用好 Chrome，非扩展不可，正所谓「无扩展，不 Chrome」。下面给大家介绍几款让 Chrome 变得更加优雅用起来更优雅的扩展。</p>
<h3 id="为什么你们就是不能加个空格呢？"><a href="#为什么你们就是不能加个空格呢？" class="headerlink" title="为什么你们就是不能加个空格呢？"></a>为什么你们就是不能加个空格呢？</h3><p>你没看错，名字就是「为什么你们就是不能加个空格呢？」。有没有因为汉字与英文之间没有空格引起强迫症？其内置的空格之神，可以自动为一切中文字和半形的英文、数字、符号之间插入空白。</p>
<center><br><img src="https://meto.chinakook.com/%E7%A9%BA%E6%A0%BC%E4%B9%8B%E7%A5%9E.jpg" alt=""></center>

<p>下载安装：<a href="http://t.cn/zlnOv4n" target="_blank" rel="external">http://t.cn/zlnOv4n</a></p>
<p>Chrome 应用商店链接，要访问… 你懂得，下同</p>
<h3 id="Imagus"><a href="#Imagus" class="headerlink" title="Imagus"></a>Imagus</h3><p>有没有过「查看原图」但是原图不够大的情况？有了 Imagus 扩展，鼠标指针悬停在链接或缩略图上时直接在当前页面的弹出视图上显示这些图片、HTML5 视频 / 音频和内容专辑。</p>
<center><br><img src="https://meto.chinakook.com/Imagus.jpg" alt=""></center>

<p>下载安装：<a href="http://t.cn/8sDMJm6" target="_blank" rel="external">http://t.cn/8sDMJm6</a></p>
<h3 id="Flatbook"><a href="#Flatbook" class="headerlink" title="Flatbook"></a>Flatbook</h3><p>是否厌倦了 Facebook 亘古不变的页面，来给你的脸书换个脸吧，瞬间清爽到爆啊。</p>
<center><br><img src="https://meto.chinakook.com/flatbook.jpg" alt=""></center>

<p>下载安装：<a href="http://t.cn/RNiRhcj" target="_blank" rel="external">http://t.cn/RNiRhcj</a></p>
<h3 id="Darkness"><a href="#Darkness" class="headerlink" title="Darkness"></a>Darkness</h3><p>Darkness 可以为 Google，Facebook，YouTube，Reddit 等不存在的网站提供完美的夜间模式支持，不会有图片反转，文字颜色奇怪等尴尬问题。当然了，Darkness 适配的网站还很少，如果你需要广泛适用的，可能需要这款神级扩展：Stylish，在下面。</p>
<center><br><img src="https://meto.chinakook.com/Darkness.jpg" alt=""></center>

<p>下载安装：<a href="http://t.cn/RNinpUu" target="_blank" rel="external">http://t.cn/RNinpUu</a></p>
<h3 id="Stylish"><a href="#Stylish" class="headerlink" title="Stylish"></a>Stylish</h3><p>许多网页的视觉风格是用 CSS 文件进行管理的，替换网页本身的 CSS 可以达到美化的目的了。通过安装 CSS，可以把知乎「拍扁」，让微博网页版变得简洁无比，让 Feedly 用上 Material Design 等等等…… Stylish 作为一个 CSS 管理器，可以让替换 CSS 变得简单。</p>
<center><br><img src="https://meto.chinakook.com/1504266030349.jpg" alt=""></center>

<p>关于 Stylish 更详细的介绍见：<a href="https://sspai.com/post/34508" target="_blank" rel="external">https://sspai.com/post/34508</a></p>
<p>下载安装：<a href="http://t.cn/R9hCUIk" target="_blank" rel="external">http://t.cn/R9hCUIk</a></p>
<h3 id="Wikiwand"><a href="#Wikiwand" class="headerlink" title="Wikiwand"></a>Wikiwand</h3><p>多年来，维基百科网页的视觉风格坚定不移地停留在 Web2.0 时代。Wikiwand 让你看到一个属于 21 世纪的维基百科。除了视觉上的提升，Wikiwand 也添加了一些人性化的交互：比如超链接悬浮窗，搜索联想，黑色模式等等…</p>
<center><br><img src="https://meto.chinakook.com/1504266756635.jpg" alt=""></center>


<p>下载安装：<a href="http://t.cn/R4TGWCh" target="_blank" rel="external">http://t.cn/R4TGWCh</a></p>
<h3 id="阅读模式"><a href="#阅读模式" class="headerlink" title="阅读模式"></a>阅读模式</h3><p>「阅读模式」可以为 Chrome 带来了类似 Safari 的阅读体验。点击图标即可进入，再次点击退出，完全的无痛体验啊。有一种 Chrome 原生阅读模式的错觉，爽。</p>
<center><br><img src="https://meto.chinakook.com/1504267091779.jpg" alt=""></center>

<p>下载安装：<a href="http://t.cn/RNiFaDw" target="_blank" rel="external">http://t.cn/RNiFaDw</a></p>
<p>今天主要介绍的是利用 Chrome 扩展改变网页视觉感觉，让浏览网页变得更加优雅，后面有机会再和大家说说其他实用扩展。</p>
<p>完。</p>
<p><br>ikook<br>2017.09.01</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大家好啊，最近开学在折腾学校实训的事，比较忙，耽搁了更新，抱歉。为了表达歉意，给大家来点「刺激的」。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔集" scheme="http://ikookblog.com/categories/%E9%9A%8F%E7%AC%94%E9%9B%86/"/>
    
    
      <category term="工具" scheme="http://ikookblog.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>七夕，过得怎样？</title>
    <link href="http://ikookblog.com/2017/08/28/seven-month-seven/"/>
    <id>http://ikookblog.com/2017/08/28/seven-month-seven/</id>
    <published>2017-08-28T13:04:46.000Z</published>
    <updated>2018-01-05T15:37:50.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<p><br><br><br></p>
<center><strong>七夕</strong></center>

<center>这个狗吐血的特殊日子</center>

<center>我是这样度过的</center>

<center><br><img src="https://meto.chinakook.com/1503916978099.jpg" alt=""></center>

<p><br></p>
<center>我的心情是这样的</center>


<center><br><img src="https://meto.chinakook.com/17.08.28.jpg" alt=""></center>

<p><br><br><br></p>
<center>祝</center>

<center>虐狗节快乐</center>



<p><br>ikook<br>2017.08.28</p>
]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;center&gt;&lt;strong&gt;七夕&lt;/strong&gt;&lt;/center&gt;

&lt;center&gt;这个狗吐血的特殊日子&lt;/center&gt;

&lt;center&gt;我是这样度过的&lt;/center&gt;

&lt;center&gt;&lt;
    
    </summary>
    
      <category term="随笔集" scheme="http://ikookblog.com/categories/%E9%9A%8F%E7%AC%94%E9%9B%86/"/>
    
    
      <category term="随笔" scheme="http://ikookblog.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>java 实现排序算法之「插入排序」</title>
    <link href="http://ikookblog.com/2017/08/26/java-sort-series3/"/>
    <id>http://ikookblog.com/2017/08/26/java-sort-series3/</id>
    <published>2017-08-25T16:00:00.000Z</published>
    <updated>2018-01-05T15:37:07.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>java 实现排序算法系列</p>
</blockquote>
<a id="more"></a>
<p>这是 Java 实现排序算法的第三篇文章——插入排序算法。插入排序可以说成是「一类」简单的排序算法，因为插入排序可以有变种，比如二分查找插入排序算法，本文讲述的是直接插入排序。</p>
<p>如文中出现错误，请在公众号「ikook」聊天窗口留言，十分感谢。</p>
<h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><p>插入排序「Insertion Sort」是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。</p>
<p>来看一下插入排序算法的思路：<br></p>
<ul>
<li>将需排序的数据分成已排序和未排序两部分，从第一个元素开始，并将该元素看做已排序。<br><br></li>
<li>取得下一个元素，即第二个元素，在已排序的序列中由后向前扫描，找出合适的位置将该元素插入。<br><br></li>
<li>重复上述步骤，直到最后一个元素被插入到已排序序列中。<br><br></li>
<li>排序完成。<br><br></li>
</ul>
<p>使用插入排序为一列数字进行排序的过程示意图（来自维基百科）：</p>
<center><br><img src="https://meto.chinakook.com/Insertion-sort-example.gif" alt=""></center>

<p>插入排序算法示意图（来自维基百科）：</p>
<center><br><img src="https://meto.chinakook.com/Insertion_sort_animation.gif" alt=""></center>

<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>从上面可以看到，算法思路非常简单，但是代码就不那么简单易写了。算法本身是没有问题的，之所以不易写我觉得是由于编程语言的问题。这里我们使用 Java 来实现，那就拿 Java 来讲。</p>
<p>在上述思路中我们可以提出几个问题，先来看下。首先，我们该如何判断合适的位置？边界条件该怎么处理？在数组中插入元素，必然会移动数据，如何控制数据的移动？</p>
<p>为了解决这些问题，我们可以在算法思路的第二步做手脚，将第二步细化。我们不在已排序的序列起始位置开始比较，从已排序序列的尾部开始逆序比较，只要比待插入的数据大，那就向后移动，直到不大于该数据，此时空出来的位置就放入待插入数据。</p>
<p>上代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insertionSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span></span>&#123;</div><div class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;arr.length; i++)&#123;</div><div class="line">          <span class="keyword">int</span> value = arr[i];</div><div class="line">          <span class="keyword">int</span> position=i;</div><div class="line">          <span class="keyword">while</span> (position&gt;<span class="number">0</span> &amp;&amp; arr[position-<span class="number">1</span>]&gt;value)&#123;</div><div class="line">              arr[position] = arr[position-<span class="number">1</span>];</div><div class="line">              position--;</div><div class="line">          &#125;</div><div class="line">          arr[position] = value;</div><div class="line">      &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如果在代码的理解上遇到困难，可以利用 IDE 的调试功能来学习。如下图（IntelliJ IDEA）：</p>
<center><br><img src="https://meto.chinakook.com/insert_debug.jpg" alt=""></center>

<h2 id="算法复杂度"><a href="#算法复杂度" class="headerlink" title="算法复杂度"></a>算法复杂度</h2><p>从上述内容容易看出，无论输入的数据怎样，插入排序算法总会进行 n-1 次排序。</p>
<p>由于每个元素插入点的不确定性，该算法复杂度并不是一定的。假设我们要将 n 个元素的序列升序排序，这时存在最好情况和最坏情况。</p>
<p>最好情况就是，序列已经是升序排列了（即数据本身的顺序和我们需要的顺序相同）。此时，需要进行的比较操作需（n-1）次即可，时间复杂度为 O(n)。</p>
<p>最坏情况很显然，序列为逆序排列时，即降序排序时为最坏。此时，需要进行的比较共有 1/2n(n-1) 次，时间复杂度为 O(n^2)。</p>
<p>平均来说，插入排序算法复杂度为 O(n^2)。插入排序的赋值操作是比较操作的次数加上（n-1）次。</p>
<p>空间复杂度，插入排序所有的数据移动均在内部进行，唯一的开销是我们使用了一个临时变量，则空间复杂度为 O(1)。</p>
<h2 id="插入排序算法分析"><a href="#插入排序算法分析" class="headerlink" title="插入排序算法分析"></a>插入排序算法分析</h2><p><strong>算法稳定性：</strong><br>拿本文中的例子来讲，只需要找到需插入元素的位置即可，并不需要交换，则直接插入排序是稳定排序算法。</p>
<p><strong>适用场景：</strong><br>从算法复杂度可以看出，该排序算法不适合数据较大的情况，数量级小于千时，插入排序是一个不错的选择。在 STL 的 sort 算法和 stdlib 的 qsort 算法中，都将插入排序作为快速排序的补充，用于少量数据的排序。</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>关于插入排序算法的变种大家有兴趣的自己 Google 一下，本文只讲述了基本的直接插入排序。插入排序的变种大概有这几种：二分查找插入排序、2 - 路插入排序、表插入排序。二分查找插入排序有的文献叫做折半插入排序，2 - 路插入排序和表插入排序可以参考《数据结构》（严蔚敏、吴伟民著）一书。</p>
<p>完。</p>
<p>相关阅读：<br><a href="http://ikookblog.com/2017/03/09/java_sort_algorithm_series1/">Java 实现「冒泡排序」</a><br><a href="http://ikookblog.com/2017/08/11/java_sort_algorithm_series2/">Java 实现「选择排序」</a></p>
<p>PS：如果你觉得本文对你有一点帮助，点赞、转发，不胜感激。</p>
<p><br>ikook<br>2017.08.26</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;java 实现排序算法系列&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="论算法" scheme="http://ikookblog.com/categories/%E8%AE%BA%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Java" scheme="http://ikookblog.com/tags/Java/"/>
    
      <category term="计算机技术" scheme="http://ikookblog.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%8A%80%E6%9C%AF/"/>
    
      <category term="排序算法" scheme="http://ikookblog.com/tags/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
      <category term="算法" scheme="http://ikookblog.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>我是你流浪过的一个地方</title>
    <link href="http://ikookblog.com/2017/08/17/view-text-02/"/>
    <id>http://ikookblog.com/2017/08/17/view-text-02/</id>
    <published>2017-08-17T14:02:27.000Z</published>
    <updated>2018-01-05T15:36:14.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文来自 App Store 软件「青稞 - 找寻诗和远方」推文，作者：王海桑</p>
</blockquote>
<a id="more"></a>
<p><br></p>
<h4 id="1"><a href="#1" class="headerlink" title="1"></a>1</h4><p>在同一个一百年里，你来了我来了<br>一一不早，也不迟<br>在同一朵云彩下，你看见我我看见你<br>一一不远，也不近<br>你就在那儿，有树有水<br>所以，我爱你。</p>
<p><br></p>
<h4 id="2"><a href="#2" class="headerlink" title="2"></a>2</h4><p>我没有找到你我碰见你了<br>我没有想到你我看见你了<br>我看见你了，你还能往哪儿跑呢<br>你是我今生今世最大的意外<br>这不是在梦里，也不是在画里<br>你和我携手同行<br>走进落日与大地的亲吻<br><br><br>天地如此宁静，我听见了<br>我心如此感恩，你听见了吗<br>你就说吧说吧，今晚我住在哪儿呢<br>瞧你的长发森林你的明眸流水<br>都是我的家  </p>
<p><br></p>
<h4 id="3"><a href="#3" class="headerlink" title="3"></a>3</h4><p>不知道是对是错，不管它是对是错<br>我只想和你在一起，一起等太阳出来<br>没有水，你是我的水<br>没有粮食，我是你的粮食<br>我们自始至终相信同一个神<br>热爱同一个命运<br>因为啊，爱上你<br>我身体中有世上最柔软的部分<br>我无法想象，你起伏的身体<br>是怎样的一个神秘国度<br>我爬遍你的全身，像个孩子<br>你新鲜、温暖而美丽<br>当你的呼吸在我的鼻孔<br>我的手在你的发间<br>你问：你好吗？<br>我说：我想你。  </p>
<p><br></p>
<h4 id="4"><a href="#4" class="headerlink" title="4"></a>4</h4><p>如果有时候，我会沉溺于欢乐<br>请原谅，我不是故意的<br>你想想看，当春天来了<br>漫山遍野都开满五颜六色的花儿<br>我又能怎么办呢<br>还有干净的石头，清澈的水<br>阳光也是刚刚流出来的<br>你一碰就响<br><br><br>去吧，去一百个地方，走一千里鲜花<br>摘它一万朵！要不就一朵吧<br>我可真想摘下来，拿在手上<br>欢乐真好，我真的是喜欢那些美好的事物<br>这件事请你原谅，如果我可以原谅  </p>
<p><br></p>
<h4 id="5"><a href="#5" class="headerlink" title="5"></a>5</h4><p>来吧，那些是我的就是我的<br>我不要天上的星星<br>这一生能有些什么，能做些什么<br>——我都已清楚。<br>我不要自己在世界多么重要，从一开始<br>世界和我就是两件不同的事<br>我只要，在窗囗的月下，在你倦时<br>能用手掌托起你寂寞的心<br>看吧，那些我犯过的错都在保证<br>我将用我一生的细节珍爱你细节的一生<br>所以从现在起，从这里起<br>把你的手给我，把你的手放在我心囗<br>相信我的一生就是你的一生<br>便是这世界背我而去，我也心满意足<br>我只请求一件事一一<br>我不要思念你，我要紧挨着你</p>
<p><br></p>
<h4 id="6"><a href="#6" class="headerlink" title="6"></a>6</h4><p>那时我正躺在云朵上做梦<br>是你在生活中喊我，喊我尘世的名字<br>于是我踢掉鞋袜，顾不上踩云<br>像两个渴慕已久的音符<br>你我在阳光的五线谱间执手相遇<br><br><br>我不知道如何爱你，我看着你<br>我前后左右都跟着你<br>以自己的才华和智慧我投身于你<br>不够，就以信念，再不够<br>就以身以命一生相许<br>竟如此不易，你和我<br>彼此在不如意的生活中<br>遇上一个如意的人，所以我爱你<br>就连同你的缺点你的道路<br>以及你是非难辨的过去<br>从此我们手拉手<br>向着同一个方向走，直到天黑<br>待生命结束，我们才结束<br>一回头，我们看见的不是一缕轻烟<br>而是我们相知的一生<br>深深浅浅，心心相印</p>
<p><br></p>
<h4 id="7"><a href="#7" class="headerlink" title="7"></a>7</h4><p>不，小心些。请不要相信<br>我现在对你说的话<br>因为它真诚见心，所以易变<br>只是在这世界有一个点上<br>我和你，在一起<br>这感觉如此美妙，像在飞<br>如果是真的，请告诉我<br>如果不是真的，请告诉我<br>你知道的，你知道的<br>我就像一只小虫碰到了阳光<br><br><br>我的幸福也小心翼翼<br>因为啊，过往的岁月教会我<br>人的一生中有一个字<br>是冷，是彻骨的冷<br>所以我会在星稀的冬夜<br>点一堆火，慢慢想你</p>
<p><br></p>
<h4 id="8"><a href="#8" class="headerlink" title="8"></a>8</h4><p>累的时候，有个地方能睡<br>饿的时候，有点东西能吃<br>这多好。我怎敢要求太多<br>当我到了某个年龄，能有个女人挨着<br>当我因劳作而一身冒汗<br>能有一盆水喝，一条河流洗澡<br>天想下雨的时候下雨，然后有阳光<br>如果高兴，如果我可以<br>光着身子和你在树林里奔跑<br>这就够了。我愿意这就是我的一生<br>有阳光、粮食、女人和水<br>这是我所能想起的幸福</p>
<p><br></p>
<h4 id="9"><a href="#9" class="headerlink" title="9"></a>9</h4><p>一生当中，到底有多少事可以很肯定<br>你和我之间，究竟有多少事可以分得清白<br>而我总是很肯定很肯定地告诉你<br>在我们的明天里<br>有阳光和早餐，有河流和音乐<br>你所有的事，我说，都来找我<br>你所有的对错，都归于我<br>因为我要你生活美好，一生安宁<br>有一天当我死了，会有人来<br>说：“这个人，一生寂寞。”<br>你不要哭，我给你说过——<br>我是一个泥做的生灵<br>想娶一个水做的女人为妻<br>于是遇上你。所以，在一百年里<br>如果你的一生需要有人捧在手上<br>那个人，只能是我，必须是我<br>便是当我走了，我也会记着<br>把这手上的温暖，给你留下  </p>
<p><br></p>
<h4 id="10"><a href="#10" class="headerlink" title="10"></a>10</h4><p>那一天，我想吻你<br>因为那天的月亮很明很圆<br>我想吻你，因为世上只有我们两个人<br>吻你，是那一刻我俩唯一能做的事<br>因为我不知道你，因为我想知道你<br><br><br>我真的想吻你<br>我看见你的唇像一颗草莓<br>我猜它一定又红又甜<br>一想到要吻你，我的心在跳<br>我害怕你，你陌生而神奇<br>你也不敢看我的眼<br>你背对我是一挂黑发<br>我的手欲伸又止，像只胆小的小动物<br>从我这里爬到你腰间，这段短短的距离<br>用了我整整一百年<br>一百年后，你转过身<br>这世界一无所有，只有一个月亮<br>很明很圆  </p>
<p><br></p>
<h4 id="11"><a href="#11" class="headerlink" title="11"></a>11</h4><p>我从遥远的时间回来<br>我从孤单的地平线回来<br>回到我原本在的地方，不再远行<br>——这是我的家。<br>我不再追求幸福，我就是幸福<br>我不再想象生活，我着手生活<br>没你在时我想你，有你在时我看着你<br><br><br>哦，原来这就是我吗<br>每一件和你有关的小事情都让我心动<br>当你和我说话，当你没和我说话<br>我都掩饰不住心中莫名的欢乐</p>
<p><br></p>
<h4 id="12"><a href="#12" class="headerlink" title="12"></a>12</h4><p>在这片叶子上开始，我将关心你的一生<br>你没有过去，或者你的过去是一把尘土<br>而你的今天和我的今天必将赶上明天的光明<br><br><br>我不是骑白马的王子，但我也有剑<br>总有一天，这剑上将有血<br>别人的血，或我的血一一与你有关<br>而今天，而正在流逝的今天<br>在向上或向下的路上我与你同在<br>请让我关心你的早餐，你的睡眠<br>关心你身体每一个可爱的小地方<br>是否安好如初，是否一切未变</p>
<p><br></p>
<h4 id="13"><a href="#13" class="headerlink" title="13"></a>13</h4><p>可如果幸福注定与我无缘，我会想念它<br>不管它把我看成什么人，请相信<br>这件事不只是我一个人的错。苍天在上<br>我一直在生活中努力保持纯洁<br><br><br>如果爱情找不到我的一生，那肯定自有原因<br>我不敢质问爱神，只想告诉<br>那个飞来飞去的花翅膀小孩——<br>下一次，如果愿意，请记着我<br><br><br>除此之外，我来到这个世上是<br>要做一些事想念一些人<br>让自己的心还有片干净的地方<br>能容得下一个神龛，和跪得下我的空间</p>
<p><br></p>
<h4 id="14"><a href="#14" class="headerlink" title="14"></a>14</h4><p>当你需要精美的早餐<br>我却只有爱情<br>为了一行关于粮食的诗句<br>你我相拥，失声一哭<br>而我们在月亮下已经走得太远<br><br><br>可你得想想<br>人生如此重大，你不能什么都要<br><br><br>请相信吧——<br>一千次失败必将成全一个生灵<br>你不要哭，到时候，我会说——<br>诸事顺利，一切都好</p>
<p><br></p>
<h4 id="15"><a href="#15" class="headerlink" title="15"></a>15</h4><p>寂寞和美好让我们相遇<br>然后是生存把我们分开<br>当你的背影住在我的泪中<br>你告诉我，说——<br>生活是为了改变生活<br>是啊是啊，在生活中<br>想象出来的路就能走吗<br><br><br>而当大雪飞过那个小镇<br>我哪儿都不去，我将想你<br>在零度以下，想你是一种温暖<br>是我的幸福  </p>
<p><br></p>
<h4 id="16"><a href="#16" class="headerlink" title="16"></a>16</h4><p>早晨五点半，想起你和我挨着<br>很暖和。还有早餐<br>早餐和早晨一样和你一样清新<br>你说早市上的青菜和萝卜都是爱情<br>看来，你是对的<br><br><br>你因为热爱生活<br>所以遇上了我。可你走了<br>你还有别的事，只是对于我<br>这件事太简单，我还没准备好<br>这件事太简单，要我一生来接受<br><br><br>你走了，你比孤单还瘦  </p>
<p><br></p>
<h4 id="17"><a href="#17" class="headerlink" title="17"></a>17</h4><p>是不是神怕我们不小心弄脏了爱情<br>所以只让我们看见它<br>只让我们亲它一小囗<br>便珍爱有加地收回<br>然后要我们在这艰难的人间<br>找一个能相依相守的人<br>恩恩爱爱，建筑家园<br>如果真是这样，那么<br>当我在世界的尽头遇见你<br><br><br>你怎么说呢<br>当你就在那儿我不喊你<br>如果你也看见我而我走过去<br><br><br>你还能否如初次那般微笑<br>对我说：嗨。  </p>
<p><br></p>
<h4 id="18"><a href="#18" class="headerlink" title="18"></a>18</h4><p>结束了。<br>画个句号。<br>像一滴泪。<br>握你的手，最后握你的手<br>再松开，一松手，就是——<br>一千里<br><br><br>路在那儿等你。<br>不知道去哪儿的路在那儿等你。<br>我含泪的眼没有希望<br>就这样，是再见  </p>
<p><br></p>
<h4 id="19"><a href="#19" class="headerlink" title="19"></a>19</h4><p>我的心平平静静地合上<br>你在外边，早晨在外边<br>你和早晨是一个人<br>身后是泪眼天堂<br><br><br>很多事情都会突然过去<br>愿意你好，一生都健康安全<br>我也会准时起床，干活、吃饭<br>累了，就歇一会儿<br>伤心了，也笑一笑<br>不管生活把你藏在什么地方<br>我知道，只一伸手<br>我摸得到你的寂寞<br>就像这个早晨，那么凉<br><br></p>
<h4 id="20"><a href="#20" class="headerlink" title="20"></a>20</h4><p>请求你允许我，下辈子<br>偿还你的一生。而我今生<br>必须好好地，好好地学会幸福<br>如果你在一千里之外很好<br>请告诉我，好让我在孤单的时间<br>里找到另一个女人，而放下你<br>如果你找了再找都没有你的地方<br>而你仍执意不回头，一千一万都不<br>那么也好吧，你知道<br>我们是两个一样寂寞的人<br>当我想哭，当你想哭<br>哭你我曾经相遇相识<br>生活它必须重新开始<br>一步一难，向着幸福</p>
<p><br></p>
<h4 id="21"><a href="#21" class="headerlink" title="21"></a>21</h4><p>我不曾爱过你<br>我只是担心你的一生<br>只是想知道你在那儿很好<br>想着你已经找到幸福<br>如果我说过爱你，请原谅我<br>我只是无法忍住伤心<br>于是你终于离开<br>可你离开得已经太迟</p>
<p><br></p>
<h4 id="22"><a href="#22" class="headerlink" title="22"></a>22</h4><p>我的心无法安慰<br>我的心需要忘记<br>所以我要到一个很远很远的地方<br>去忘记一个人<br>去忘记一些事<br>然后回来，以双手进入生活</p>
<p><br></p>
<h4 id="23"><a href="#23" class="headerlink" title="23"></a>23</h4><p>最终我必将接受现实<br>但我知道——<br>生活一思索都是疑问<br>唱出来才是歌<br>我选择后者</p>
<p><br></p>
<h4 id="24"><a href="#24" class="headerlink" title="24"></a>24</h4><p>下一个一千年，如果有<br>如果我可以再一次做人，而遇上你<br>我要挣很多钱，在水边，买一幢<br>有玫瑰花有咖啡的房子<br>然后娶你为妻——<br>月光是我们的，水声是我们的<br><br><br>我们纯洁地做爱<br>慢慢讲美丽的故事<br>然后养一百个漂亮的孩子<br><br><br>围着我，围着你<br>而这一次，我一生对不起<br>你因为我是个如此住在梦中的人<br><br><br>有一天，当我死了，想到你会流泪<br>我已如此幸福。真想告诉你<br>你是我一生中的一件最美好的事<br><br><br>当你死了，当你回到落叶化成的泥土<br>我将认出你，我的心将挨着你<br>不声不响，你知道是我，我知道是你<br><br><br>完。</p>
<p><br>ikook<br>2017.08.17</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文来自 App Store 软件「青稞 - 找寻诗和远方」推文，作者：王海桑&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="观文记" scheme="http://ikookblog.com/categories/%E8%A7%82%E6%96%87%E8%AE%B0/"/>
    
    
      <category term="感悟" scheme="http://ikookblog.com/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="转载" scheme="http://ikookblog.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="观文" scheme="http://ikookblog.com/tags/%E8%A7%82%E6%96%87/"/>
    
      <category term="诗歌" scheme="http://ikookblog.com/tags/%E8%AF%97%E6%AD%8C/"/>
    
  </entry>
  
  <entry>
    <title>java 实现排序算法之「选择排序」</title>
    <link href="http://ikookblog.com/2017/08/11/java_sort_algorithm_series2/"/>
    <id>http://ikookblog.com/2017/08/11/java_sort_algorithm_series2/</id>
    <published>2017-08-10T16:00:00.000Z</published>
    <updated>2018-01-05T15:35:25.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>java 实现排序算法系列</p>
</blockquote>
<a id="more"></a>
<p>继冒泡排序算法之后，选择排序终于和大家见面了。为什么冒泡排序之后要说选择排序呢，是因为它俩是最相似的两种排序算法，血缘关系最为接近。</p>
<p>还是那句话，本人能力拙劣，有不当之处还请不吝赐教，可关注我公号后台留言，见底部二维码。</p>
<h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><p>选择排序（Selection sort）是一种简单直观的排序算法，它也是一种交换排序算法，和冒泡排序有一定的相似度。可以把它看做是冒泡排序算法的一种改进算法。</p>
<h4 id="算法思路"><a href="#算法思路" class="headerlink" title="算法思路"></a>算法思路</h4><p>假设要给有 n 个元素的数组 arr[] 排序。注意，在数组中第一个元素的下标为 0</p>
<h5 id="n-1"><a href="#n-1" class="headerlink" title="n = 1:"></a>n = 1:</h5><p>无需排序</p>
<h5 id="n-gt-1"><a href="#n-gt-1" class="headerlink" title="n &gt; 1:"></a>n &gt; 1:</h5><ul>
<li>将第一个元素和第二个元素进行比较，如果 arr[0] 大于 arr[1]，那么 arr[0] 一定不是最小元素。这里我们暂时不交换元素，而是设置临时变量 a，用来存储较小变量 arr[1] 的下标。然后将目前较小元素 arr[a] 继续和第三个元素比较，如果 arr[a] 大于 arr[2]，则修改 a 的值为 arr[2] 的下标，再接着往下比较；如果不大于 arr[2]，则将 arr[a] 和第四个元素比较，如前者大，则修改 a 的值为 arr[3] 的下标。以此类推，直到与最后一个元素比较，则 a 的值肯定是最小值的下标。<br><br></li>
<li>如果 a 的值不为 0（即不是元素 arr[0] 的下标)，则交换下标为 0 和 a 的元素，即将 arr[a] 和 arr[0] 进行交换。 <br><br></li>
<li>至此，第一趟排序完成，将最小值找出来了，然后进行第二趟排序。重复上述过程，从第二个元素（即 arr[1]）开始比较。第一个元素已经是最小元素了，不参与比较。 <br><br></li>
<li>重复步骤直到剩下最后一个元素，即 arr[n-1]，可以肯定这个值为最大值。 <br><br></li>
<li>排序完成，不够直观？见下面示例动画。</li>
</ul>
<center><br><img src="https://meto.chinakook.com/blog-images/java_sort_algorithm_series2.gif" alt=""></center>

<blockquote>
<p>注: 红色表示当前最小值，黄色表示已排序序列，蓝色表示当前位置。</p>
</blockquote>
<p>选择排序的主要优点与数据移动有关。如果某个元素位于正确的最终位置上，则它不会被移动。选择排序每次交换一对元素，它们当中至少有一个将被移到其最终位置上，因此对 n 个元素进行排序总共进行至多 n-1 次交换。在所有的完全依靠交换去移动元素的排序方法中，选择排序属于非常好的一种。</p>
<p>需要注意的是，上述过程只是每次找最小值的办法。实际上也可以每次找最大值，思路是一样的。</p>
<p>选择排序的示意图（图片来自维基百科）：</p>
<center><br><img src="https://meto.chinakook.com/blog-images/Selection_sort_animation.gif" alt=""></center>

<h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><p>设要给数组 arr[] 排序，它有 n 个元素。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selectionSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> min, temp, len = arr.length;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++) &#123;</div><div class="line">            min = i;<span class="comment">//未排序序列中最小数据数组下标</span></div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; len; j++) &#123; <span class="comment">//在未排序元素中继续寻找最小元素，并保存其下标</span></div><div class="line">                <span class="keyword">if</span> (arr[min] &gt; arr[j]) &#123;</div><div class="line">                    min = j;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (min != i) &#123;</div><div class="line">                temp = arr[min]; <span class="comment">//将最小元素放到已排序序列的末尾</span></div><div class="line">                arr[min] = arr[i];</div><div class="line">                arr[i] = temp;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="算法复杂度"><a href="#算法复杂度" class="headerlink" title="算法复杂度"></a>算法复杂度</h3><p>选择排序需要进行 n-1 轮比较。很显然，比较次数 O(n^2)，比较次数与关键字的初始状态无关，总的比较次数 N = (n-1) + (n-2) + … + 1 = n x (n-1) / 2。</p>
<p>交换次数 O(n)，最好情况是，已经有序，交换 0 次；最坏情况是，逆序，交换 n-1 次。交换次数比冒泡排序较少，由于交换所需 CPU 时间比比较所需的 CPU 时间多，n 值较小时，选择排序比冒泡排序快。</p>
<p>选择排序的赋值次数：最坏情形下需要交换 n-1 次，对于上面的代码，需要赋值 3(n-1) 次。而最佳情况下，则需要 0 次。如果假定平均分布，大约需要 3n/2。</p>
<p>冒泡排序可以在最佳情况下有 O(n) 复杂度，那么选择排序行不行呢？ 很遗憾，不行。选择排序每次只找最小值，但它并不能知道其他值是否有序排列。因此，选择排序在最优、最坏、平均情况下的<strong>时间复杂度</strong>均为 O(n^2)，<strong>空间复杂度</strong>（额外空间）为 O(1).</p>
<h3 id="算法稳定性"><a href="#算法稳定性" class="headerlink" title="算法稳定性"></a>算法稳定性</h3><p>对于选择排序的稳定性是存在一定争议的。但在本例中，最小值和另一个值相同的时候我们并不需要交换它们，选择排序是稳定排序。其实排序算法中，有些稳定算法可以变换成不稳定算法，而不稳定排序算法又有很多办法可以变成稳定的，这在《算法》第四版中有所提及。所以，没有严格意义上的稳定与不稳定排序。</p>
<h3 id="算法适用场景"><a href="#算法适用场景" class="headerlink" title="算法适用场景"></a>算法适用场景</h3><p>选择排序实现也比较简单，并且由于在各种情况下复杂度波动小，因此一般是优于冒泡排序的。在所有的完全交换排序中，选择排序也是比较不错的一种算法。但是，由于固有的 O(n^2) 复杂度，选择排序在数据量较大的时候显得力不从心。因此，它适用于简单数据排序。</p>
<p><br>ikook<br>2017.08.11</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;java 实现排序算法系列&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="论算法" scheme="http://ikookblog.com/categories/%E8%AE%BA%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Java" scheme="http://ikookblog.com/tags/Java/"/>
    
      <category term="计算机技术" scheme="http://ikookblog.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%8A%80%E6%9C%AF/"/>
    
      <category term="排序算法" scheme="http://ikookblog.com/tags/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
      <category term="算法" scheme="http://ikookblog.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
